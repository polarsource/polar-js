/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

/**
 * Filter by organization ID.
 */
export type CheckoutsCustomListQueryParamOrganizationIDFilter =
  | string
  | Array<string>;

/**
 * Filter by product ID.
 */
export type CheckoutsCustomListQueryParamProductIDFilter =
  | string
  | Array<string>;

export type CheckoutsCustomListRequest = {
  /**
   * Filter by organization ID.
   */
  organizationId?: string | Array<string> | null | undefined;
  /**
   * Filter by product ID.
   */
  productId?: string | Array<string> | null | undefined;
  /**
   * Page number, defaults to 1.
   */
  page?: number | undefined;
  /**
   * Size of a page, defaults to 10. Maximum is 100.
   */
  limit?: number | undefined;
  /**
   * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
   */
  sorting?: Array<components.CheckoutSortProperty> | null | undefined;
};

export type CheckoutsCustomListResponse = {
  result: components.ListResourceCheckout;
};

/** @internal */
export const CheckoutsCustomListQueryParamOrganizationIDFilter$inboundSchema:
  z.ZodType<
    CheckoutsCustomListQueryParamOrganizationIDFilter,
    z.ZodTypeDef,
    unknown
  > = z.union([z.string(), z.array(z.string())]);

/** @internal */
export type CheckoutsCustomListQueryParamOrganizationIDFilter$Outbound =
  | string
  | Array<string>;

/** @internal */
export const CheckoutsCustomListQueryParamOrganizationIDFilter$outboundSchema:
  z.ZodType<
    CheckoutsCustomListQueryParamOrganizationIDFilter$Outbound,
    z.ZodTypeDef,
    CheckoutsCustomListQueryParamOrganizationIDFilter
  > = z.union([z.string(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutsCustomListQueryParamOrganizationIDFilter$ {
  /** @deprecated use `CheckoutsCustomListQueryParamOrganizationIDFilter$inboundSchema` instead. */
  export const inboundSchema =
    CheckoutsCustomListQueryParamOrganizationIDFilter$inboundSchema;
  /** @deprecated use `CheckoutsCustomListQueryParamOrganizationIDFilter$outboundSchema` instead. */
  export const outboundSchema =
    CheckoutsCustomListQueryParamOrganizationIDFilter$outboundSchema;
  /** @deprecated use `CheckoutsCustomListQueryParamOrganizationIDFilter$Outbound` instead. */
  export type Outbound =
    CheckoutsCustomListQueryParamOrganizationIDFilter$Outbound;
}

/** @internal */
export const CheckoutsCustomListQueryParamProductIDFilter$inboundSchema:
  z.ZodType<
    CheckoutsCustomListQueryParamProductIDFilter,
    z.ZodTypeDef,
    unknown
  > = z.union([z.string(), z.array(z.string())]);

/** @internal */
export type CheckoutsCustomListQueryParamProductIDFilter$Outbound =
  | string
  | Array<string>;

/** @internal */
export const CheckoutsCustomListQueryParamProductIDFilter$outboundSchema:
  z.ZodType<
    CheckoutsCustomListQueryParamProductIDFilter$Outbound,
    z.ZodTypeDef,
    CheckoutsCustomListQueryParamProductIDFilter
  > = z.union([z.string(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutsCustomListQueryParamProductIDFilter$ {
  /** @deprecated use `CheckoutsCustomListQueryParamProductIDFilter$inboundSchema` instead. */
  export const inboundSchema =
    CheckoutsCustomListQueryParamProductIDFilter$inboundSchema;
  /** @deprecated use `CheckoutsCustomListQueryParamProductIDFilter$outboundSchema` instead. */
  export const outboundSchema =
    CheckoutsCustomListQueryParamProductIDFilter$outboundSchema;
  /** @deprecated use `CheckoutsCustomListQueryParamProductIDFilter$Outbound` instead. */
  export type Outbound = CheckoutsCustomListQueryParamProductIDFilter$Outbound;
}

/** @internal */
export const CheckoutsCustomListRequest$inboundSchema: z.ZodType<
  CheckoutsCustomListRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
    .optional(),
  product_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
  page: z.number().int().default(1),
  limit: z.number().int().default(10),
  sorting: z.nullable(z.array(components.CheckoutSortProperty$inboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "organization_id": "organizationId",
    "product_id": "productId",
  });
});

/** @internal */
export type CheckoutsCustomListRequest$Outbound = {
  organization_id?: string | Array<string> | null | undefined;
  product_id?: string | Array<string> | null | undefined;
  page: number;
  limit: number;
  sorting?: Array<string> | null | undefined;
};

/** @internal */
export const CheckoutsCustomListRequest$outboundSchema: z.ZodType<
  CheckoutsCustomListRequest$Outbound,
  z.ZodTypeDef,
  CheckoutsCustomListRequest
> = z.object({
  organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
    .optional(),
  productId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
  page: z.number().int().default(1),
  limit: z.number().int().default(10),
  sorting: z.nullable(z.array(components.CheckoutSortProperty$outboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    organizationId: "organization_id",
    productId: "product_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutsCustomListRequest$ {
  /** @deprecated use `CheckoutsCustomListRequest$inboundSchema` instead. */
  export const inboundSchema = CheckoutsCustomListRequest$inboundSchema;
  /** @deprecated use `CheckoutsCustomListRequest$outboundSchema` instead. */
  export const outboundSchema = CheckoutsCustomListRequest$outboundSchema;
  /** @deprecated use `CheckoutsCustomListRequest$Outbound` instead. */
  export type Outbound = CheckoutsCustomListRequest$Outbound;
}

/** @internal */
export const CheckoutsCustomListResponse$inboundSchema: z.ZodType<
  CheckoutsCustomListResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: components.ListResourceCheckout$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type CheckoutsCustomListResponse$Outbound = {
  Result: components.ListResourceCheckout$Outbound;
};

/** @internal */
export const CheckoutsCustomListResponse$outboundSchema: z.ZodType<
  CheckoutsCustomListResponse$Outbound,
  z.ZodTypeDef,
  CheckoutsCustomListResponse
> = z.object({
  result: components.ListResourceCheckout$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutsCustomListResponse$ {
  /** @deprecated use `CheckoutsCustomListResponse$inboundSchema` instead. */
  export const inboundSchema = CheckoutsCustomListResponse$inboundSchema;
  /** @deprecated use `CheckoutsCustomListResponse$outboundSchema` instead. */
  export const outboundSchema = CheckoutsCustomListResponse$outboundSchema;
  /** @deprecated use `CheckoutsCustomListResponse$Outbound` instead. */
  export type Outbound = CheckoutsCustomListResponse$Outbound;
}
