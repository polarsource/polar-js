/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type BenefitsCreateBenefitCreate =
  | (components.BenefitAdsCreate & { type: "ads" })
  | (components.BenefitDiscordCreate & { type: "discord" })
  | (components.BenefitGitHubRepositoryCreate & { type: "github_repository" })
  | (components.BenefitDownloadablesCreate & { type: "downloadables" })
  | (components.BenefitLicenseKeysCreate & { type: "license_keys" })
  | (components.BenefitCustomCreate & { type: "custom" });

/** @internal */
export const BenefitsCreateBenefitCreate$inboundSchema: z.ZodType<
  BenefitsCreateBenefitCreate,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.BenefitAdsCreate$inboundSchema.and(
    z.object({ type: z.literal("ads") }).transform((v) => ({ type: v.type })),
  ),
  components.BenefitDiscordCreate$inboundSchema.and(
    z.object({ type: z.literal("discord") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitGitHubRepositoryCreate$inboundSchema.and(
    z.object({ type: z.literal("github_repository") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitDownloadablesCreate$inboundSchema.and(
    z.object({ type: z.literal("downloadables") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitLicenseKeysCreate$inboundSchema.and(
    z.object({ type: z.literal("license_keys") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitCustomCreate$inboundSchema.and(
    z.object({ type: z.literal("custom") }).transform((v) => ({
      type: v.type,
    })),
  ),
]);

/** @internal */
export type BenefitsCreateBenefitCreate$Outbound =
  | (components.BenefitAdsCreate$Outbound & { type: "ads" })
  | (components.BenefitDiscordCreate$Outbound & { type: "discord" })
  | (components.BenefitGitHubRepositoryCreate$Outbound & {
    type: "github_repository";
  })
  | (components.BenefitDownloadablesCreate$Outbound & { type: "downloadables" })
  | (components.BenefitLicenseKeysCreate$Outbound & { type: "license_keys" })
  | (components.BenefitCustomCreate$Outbound & { type: "custom" });

/** @internal */
export const BenefitsCreateBenefitCreate$outboundSchema: z.ZodType<
  BenefitsCreateBenefitCreate$Outbound,
  z.ZodTypeDef,
  BenefitsCreateBenefitCreate
> = z.union([
  components.BenefitAdsCreate$outboundSchema.and(
    z.object({ type: z.literal("ads") }).transform((v) => ({ type: v.type })),
  ),
  components.BenefitDiscordCreate$outboundSchema.and(
    z.object({ type: z.literal("discord") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitGitHubRepositoryCreate$outboundSchema.and(
    z.object({ type: z.literal("github_repository") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitDownloadablesCreate$outboundSchema.and(
    z.object({ type: z.literal("downloadables") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitLicenseKeysCreate$outboundSchema.and(
    z.object({ type: z.literal("license_keys") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitCustomCreate$outboundSchema.and(
    z.object({ type: z.literal("custom") }).transform((v) => ({
      type: v.type,
    })),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitsCreateBenefitCreate$ {
  /** @deprecated use `BenefitsCreateBenefitCreate$inboundSchema` instead. */
  export const inboundSchema = BenefitsCreateBenefitCreate$inboundSchema;
  /** @deprecated use `BenefitsCreateBenefitCreate$outboundSchema` instead. */
  export const outboundSchema = BenefitsCreateBenefitCreate$outboundSchema;
  /** @deprecated use `BenefitsCreateBenefitCreate$Outbound` instead. */
  export type Outbound = BenefitsCreateBenefitCreate$Outbound;
}
