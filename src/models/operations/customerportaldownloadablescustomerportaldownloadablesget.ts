/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest = {
  token: string;
};

/** @internal */
export const CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$inboundSchema:
  z.ZodType<
    CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    token: z.string(),
  });

/** @internal */
export type CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$Outbound =
  {
    token: string;
  };

/** @internal */
export const CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$outboundSchema:
  z.ZodType<
    CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$Outbound,
    z.ZodTypeDef,
    CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest
  > = z.object({
    token: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$ {
  /** @deprecated use `CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$inboundSchema;
  /** @deprecated use `CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$outboundSchema;
  /** @deprecated use `CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$Outbound` instead. */
  export type Outbound =
    CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$Outbound;
}

export function customerPortalDownloadablesCustomerPortalDownloadablesGetRequestToJSON(
  customerPortalDownloadablesCustomerPortalDownloadablesGetRequest:
    CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest,
): string {
  return JSON.stringify(
    CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$outboundSchema
      .parse(customerPortalDownloadablesCustomerPortalDownloadablesGetRequest),
  );
}

export function customerPortalDownloadablesCustomerPortalDownloadablesGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CustomerPortalDownloadablesCustomerPortalDownloadablesGetRequest' from JSON`,
  );
}
