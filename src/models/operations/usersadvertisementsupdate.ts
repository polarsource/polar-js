/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UsersAdvertisementsUpdateRequest = {
  /**
   * The advertisement campaign ID.
   */
  id: string;
  userAdvertisementCampaignUpdate: components.UserAdvertisementCampaignUpdate;
};

/** @internal */
export const UsersAdvertisementsUpdateRequest$inboundSchema: z.ZodType<
  UsersAdvertisementsUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  UserAdvertisementCampaignUpdate:
    components.UserAdvertisementCampaignUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "UserAdvertisementCampaignUpdate": "userAdvertisementCampaignUpdate",
  });
});

/** @internal */
export type UsersAdvertisementsUpdateRequest$Outbound = {
  id: string;
  UserAdvertisementCampaignUpdate:
    components.UserAdvertisementCampaignUpdate$Outbound;
};

/** @internal */
export const UsersAdvertisementsUpdateRequest$outboundSchema: z.ZodType<
  UsersAdvertisementsUpdateRequest$Outbound,
  z.ZodTypeDef,
  UsersAdvertisementsUpdateRequest
> = z.object({
  id: z.string(),
  userAdvertisementCampaignUpdate:
    components.UserAdvertisementCampaignUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    userAdvertisementCampaignUpdate: "UserAdvertisementCampaignUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersAdvertisementsUpdateRequest$ {
  /** @deprecated use `UsersAdvertisementsUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = UsersAdvertisementsUpdateRequest$inboundSchema;
  /** @deprecated use `UsersAdvertisementsUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = UsersAdvertisementsUpdateRequest$outboundSchema;
  /** @deprecated use `UsersAdvertisementsUpdateRequest$Outbound` instead. */
  export type Outbound = UsersAdvertisementsUpdateRequest$Outbound;
}

export function usersAdvertisementsUpdateRequestToJSON(
  usersAdvertisementsUpdateRequest: UsersAdvertisementsUpdateRequest,
): string {
  return JSON.stringify(
    UsersAdvertisementsUpdateRequest$outboundSchema.parse(
      usersAdvertisementsUpdateRequest,
    ),
  );
}

export function usersAdvertisementsUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<UsersAdvertisementsUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UsersAdvertisementsUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UsersAdvertisementsUpdateRequest' from JSON`,
  );
}
