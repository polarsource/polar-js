/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  ProductBenefitsUpdate,
  ProductBenefitsUpdate$inboundSchema,
  ProductBenefitsUpdate$Outbound,
  ProductBenefitsUpdate$outboundSchema,
} from "../components/productbenefitsupdate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ProductsUpdateBenefitsRequest = {
  id: string;
  productBenefitsUpdate: ProductBenefitsUpdate;
};

/** @internal */
export const ProductsUpdateBenefitsRequest$inboundSchema: z.ZodType<
  ProductsUpdateBenefitsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  ProductBenefitsUpdate: ProductBenefitsUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "ProductBenefitsUpdate": "productBenefitsUpdate",
  });
});

/** @internal */
export type ProductsUpdateBenefitsRequest$Outbound = {
  id: string;
  ProductBenefitsUpdate: ProductBenefitsUpdate$Outbound;
};

/** @internal */
export const ProductsUpdateBenefitsRequest$outboundSchema: z.ZodType<
  ProductsUpdateBenefitsRequest$Outbound,
  z.ZodTypeDef,
  ProductsUpdateBenefitsRequest
> = z.object({
  id: z.string(),
  productBenefitsUpdate: ProductBenefitsUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    productBenefitsUpdate: "ProductBenefitsUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductsUpdateBenefitsRequest$ {
  /** @deprecated use `ProductsUpdateBenefitsRequest$inboundSchema` instead. */
  export const inboundSchema = ProductsUpdateBenefitsRequest$inboundSchema;
  /** @deprecated use `ProductsUpdateBenefitsRequest$outboundSchema` instead. */
  export const outboundSchema = ProductsUpdateBenefitsRequest$outboundSchema;
  /** @deprecated use `ProductsUpdateBenefitsRequest$Outbound` instead. */
  export type Outbound = ProductsUpdateBenefitsRequest$Outbound;
}

export function productsUpdateBenefitsRequestToJSON(
  productsUpdateBenefitsRequest: ProductsUpdateBenefitsRequest,
): string {
  return JSON.stringify(
    ProductsUpdateBenefitsRequest$outboundSchema.parse(
      productsUpdateBenefitsRequest,
    ),
  );
}

export function productsUpdateBenefitsRequestFromJSON(
  jsonString: string,
): SafeParseResult<ProductsUpdateBenefitsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProductsUpdateBenefitsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProductsUpdateBenefitsRequest' from JSON`,
  );
}
