/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  CustomFieldUpdate,
  CustomFieldUpdate$inboundSchema,
  CustomFieldUpdate$Outbound,
  CustomFieldUpdate$outboundSchema,
} from "../components/customfieldupdate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomFieldsUpdateRequest = {
  /**
   * The custom field ID.
   */
  id: string;
  customFieldUpdate: CustomFieldUpdate;
};

/** @internal */
export const CustomFieldsUpdateRequest$inboundSchema: z.ZodType<
  CustomFieldsUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  CustomFieldUpdate: CustomFieldUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "CustomFieldUpdate": "customFieldUpdate",
  });
});

/** @internal */
export type CustomFieldsUpdateRequest$Outbound = {
  id: string;
  CustomFieldUpdate: CustomFieldUpdate$Outbound;
};

/** @internal */
export const CustomFieldsUpdateRequest$outboundSchema: z.ZodType<
  CustomFieldsUpdateRequest$Outbound,
  z.ZodTypeDef,
  CustomFieldsUpdateRequest
> = z.object({
  id: z.string(),
  customFieldUpdate: CustomFieldUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    customFieldUpdate: "CustomFieldUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFieldsUpdateRequest$ {
  /** @deprecated use `CustomFieldsUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = CustomFieldsUpdateRequest$inboundSchema;
  /** @deprecated use `CustomFieldsUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = CustomFieldsUpdateRequest$outboundSchema;
  /** @deprecated use `CustomFieldsUpdateRequest$Outbound` instead. */
  export type Outbound = CustomFieldsUpdateRequest$Outbound;
}

export function customFieldsUpdateRequestToJSON(
  customFieldsUpdateRequest: CustomFieldsUpdateRequest,
): string {
  return JSON.stringify(
    CustomFieldsUpdateRequest$outboundSchema.parse(customFieldsUpdateRequest),
  );
}

export function customFieldsUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<CustomFieldsUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomFieldsUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomFieldsUpdateRequest' from JSON`,
  );
}
