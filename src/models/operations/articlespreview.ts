/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ArticlesPreviewRequest = {
  id: string;
  articlePreview: components.ArticlePreview;
};

/** @internal */
export const ArticlesPreviewRequest$inboundSchema: z.ZodType<
  ArticlesPreviewRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  ArticlePreview: components.ArticlePreview$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "ArticlePreview": "articlePreview",
  });
});

/** @internal */
export type ArticlesPreviewRequest$Outbound = {
  id: string;
  ArticlePreview: components.ArticlePreview$Outbound;
};

/** @internal */
export const ArticlesPreviewRequest$outboundSchema: z.ZodType<
  ArticlesPreviewRequest$Outbound,
  z.ZodTypeDef,
  ArticlesPreviewRequest
> = z.object({
  id: z.string(),
  articlePreview: components.ArticlePreview$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    articlePreview: "ArticlePreview",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArticlesPreviewRequest$ {
  /** @deprecated use `ArticlesPreviewRequest$inboundSchema` instead. */
  export const inboundSchema = ArticlesPreviewRequest$inboundSchema;
  /** @deprecated use `ArticlesPreviewRequest$outboundSchema` instead. */
  export const outboundSchema = ArticlesPreviewRequest$outboundSchema;
  /** @deprecated use `ArticlesPreviewRequest$Outbound` instead. */
  export type Outbound = ArticlesPreviewRequest$Outbound;
}

export function articlesPreviewRequestToJSON(
  articlesPreviewRequest: ArticlesPreviewRequest,
): string {
  return JSON.stringify(
    ArticlesPreviewRequest$outboundSchema.parse(articlesPreviewRequest),
  );
}

export function articlesPreviewRequestFromJSON(
  jsonString: string,
): SafeParseResult<ArticlesPreviewRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ArticlesPreviewRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ArticlesPreviewRequest' from JSON`,
  );
}
