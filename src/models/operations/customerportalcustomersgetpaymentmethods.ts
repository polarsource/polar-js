/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  ListResourceUnionPaymentMethodCardPaymentMethodGeneric,
  ListResourceUnionPaymentMethodCardPaymentMethodGeneric$inboundSchema,
  ListResourceUnionPaymentMethodCardPaymentMethodGeneric$Outbound,
  ListResourceUnionPaymentMethodCardPaymentMethodGeneric$outboundSchema,
} from "../components/listresourceunionpaymentmethodcardpaymentmethodgeneric.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomerPortalCustomersGetPaymentMethodsSecurity = {
  customerSession: string;
};

export type CustomerPortalCustomersGetPaymentMethodsRequest = {
  /**
   * Page number, defaults to 1.
   */
  page?: number | undefined;
  /**
   * Size of a page, defaults to 10. Maximum is 100.
   */
  limit?: number | undefined;
};

export type CustomerPortalCustomersGetPaymentMethodsResponse = {
  result: ListResourceUnionPaymentMethodCardPaymentMethodGeneric;
};

/** @internal */
export const CustomerPortalCustomersGetPaymentMethodsSecurity$inboundSchema:
  z.ZodType<
    CustomerPortalCustomersGetPaymentMethodsSecurity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    customer_session: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "customer_session": "customerSession",
    });
  });

/** @internal */
export type CustomerPortalCustomersGetPaymentMethodsSecurity$Outbound = {
  customer_session: string;
};

/** @internal */
export const CustomerPortalCustomersGetPaymentMethodsSecurity$outboundSchema:
  z.ZodType<
    CustomerPortalCustomersGetPaymentMethodsSecurity$Outbound,
    z.ZodTypeDef,
    CustomerPortalCustomersGetPaymentMethodsSecurity
  > = z.object({
    customerSession: z.string(),
  }).transform((v) => {
    return remap$(v, {
      customerSession: "customer_session",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalCustomersGetPaymentMethodsSecurity$ {
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsSecurity$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalCustomersGetPaymentMethodsSecurity$inboundSchema;
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsSecurity$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalCustomersGetPaymentMethodsSecurity$outboundSchema;
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsSecurity$Outbound` instead. */
  export type Outbound =
    CustomerPortalCustomersGetPaymentMethodsSecurity$Outbound;
}

export function customerPortalCustomersGetPaymentMethodsSecurityToJSON(
  customerPortalCustomersGetPaymentMethodsSecurity:
    CustomerPortalCustomersGetPaymentMethodsSecurity,
): string {
  return JSON.stringify(
    CustomerPortalCustomersGetPaymentMethodsSecurity$outboundSchema.parse(
      customerPortalCustomersGetPaymentMethodsSecurity,
    ),
  );
}

export function customerPortalCustomersGetPaymentMethodsSecurityFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalCustomersGetPaymentMethodsSecurity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalCustomersGetPaymentMethodsSecurity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPortalCustomersGetPaymentMethodsSecurity' from JSON`,
  );
}

/** @internal */
export const CustomerPortalCustomersGetPaymentMethodsRequest$inboundSchema:
  z.ZodType<
    CustomerPortalCustomersGetPaymentMethodsRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
  });

/** @internal */
export type CustomerPortalCustomersGetPaymentMethodsRequest$Outbound = {
  page: number;
  limit: number;
};

/** @internal */
export const CustomerPortalCustomersGetPaymentMethodsRequest$outboundSchema:
  z.ZodType<
    CustomerPortalCustomersGetPaymentMethodsRequest$Outbound,
    z.ZodTypeDef,
    CustomerPortalCustomersGetPaymentMethodsRequest
  > = z.object({
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalCustomersGetPaymentMethodsRequest$ {
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsRequest$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalCustomersGetPaymentMethodsRequest$inboundSchema;
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsRequest$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalCustomersGetPaymentMethodsRequest$outboundSchema;
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsRequest$Outbound` instead. */
  export type Outbound =
    CustomerPortalCustomersGetPaymentMethodsRequest$Outbound;
}

export function customerPortalCustomersGetPaymentMethodsRequestToJSON(
  customerPortalCustomersGetPaymentMethodsRequest:
    CustomerPortalCustomersGetPaymentMethodsRequest,
): string {
  return JSON.stringify(
    CustomerPortalCustomersGetPaymentMethodsRequest$outboundSchema.parse(
      customerPortalCustomersGetPaymentMethodsRequest,
    ),
  );
}

export function customerPortalCustomersGetPaymentMethodsRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalCustomersGetPaymentMethodsRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalCustomersGetPaymentMethodsRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPortalCustomersGetPaymentMethodsRequest' from JSON`,
  );
}

/** @internal */
export const CustomerPortalCustomersGetPaymentMethodsResponse$inboundSchema:
  z.ZodType<
    CustomerPortalCustomersGetPaymentMethodsResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    Result:
      ListResourceUnionPaymentMethodCardPaymentMethodGeneric$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "Result": "result",
    });
  });

/** @internal */
export type CustomerPortalCustomersGetPaymentMethodsResponse$Outbound = {
  Result: ListResourceUnionPaymentMethodCardPaymentMethodGeneric$Outbound;
};

/** @internal */
export const CustomerPortalCustomersGetPaymentMethodsResponse$outboundSchema:
  z.ZodType<
    CustomerPortalCustomersGetPaymentMethodsResponse$Outbound,
    z.ZodTypeDef,
    CustomerPortalCustomersGetPaymentMethodsResponse
  > = z.object({
    result:
      ListResourceUnionPaymentMethodCardPaymentMethodGeneric$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      result: "Result",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalCustomersGetPaymentMethodsResponse$ {
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsResponse$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalCustomersGetPaymentMethodsResponse$inboundSchema;
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsResponse$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalCustomersGetPaymentMethodsResponse$outboundSchema;
  /** @deprecated use `CustomerPortalCustomersGetPaymentMethodsResponse$Outbound` instead. */
  export type Outbound =
    CustomerPortalCustomersGetPaymentMethodsResponse$Outbound;
}

export function customerPortalCustomersGetPaymentMethodsResponseToJSON(
  customerPortalCustomersGetPaymentMethodsResponse:
    CustomerPortalCustomersGetPaymentMethodsResponse,
): string {
  return JSON.stringify(
    CustomerPortalCustomersGetPaymentMethodsResponse$outboundSchema.parse(
      customerPortalCustomersGetPaymentMethodsResponse,
    ),
  );
}

export function customerPortalCustomersGetPaymentMethodsResponseFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalCustomersGetPaymentMethodsResponse,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalCustomersGetPaymentMethodsResponse$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPortalCustomersGetPaymentMethodsResponse' from JSON`,
  );
}
