/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  CheckoutConfirmStripe,
  CheckoutConfirmStripe$inboundSchema,
  CheckoutConfirmStripe$Outbound,
  CheckoutConfirmStripe$outboundSchema,
} from "../components/checkoutconfirmstripe.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CheckoutsClientConfirmRequest = {
  /**
   * The checkout session client secret.
   */
  clientSecret: string;
  checkoutConfirmStripe: CheckoutConfirmStripe;
};

/** @internal */
export const CheckoutsClientConfirmRequest$inboundSchema: z.ZodType<
  CheckoutsClientConfirmRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  client_secret: z.string(),
  CheckoutConfirmStripe: CheckoutConfirmStripe$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "client_secret": "clientSecret",
    "CheckoutConfirmStripe": "checkoutConfirmStripe",
  });
});

/** @internal */
export type CheckoutsClientConfirmRequest$Outbound = {
  client_secret: string;
  CheckoutConfirmStripe: CheckoutConfirmStripe$Outbound;
};

/** @internal */
export const CheckoutsClientConfirmRequest$outboundSchema: z.ZodType<
  CheckoutsClientConfirmRequest$Outbound,
  z.ZodTypeDef,
  CheckoutsClientConfirmRequest
> = z.object({
  clientSecret: z.string(),
  checkoutConfirmStripe: CheckoutConfirmStripe$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    clientSecret: "client_secret",
    checkoutConfirmStripe: "CheckoutConfirmStripe",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutsClientConfirmRequest$ {
  /** @deprecated use `CheckoutsClientConfirmRequest$inboundSchema` instead. */
  export const inboundSchema = CheckoutsClientConfirmRequest$inboundSchema;
  /** @deprecated use `CheckoutsClientConfirmRequest$outboundSchema` instead. */
  export const outboundSchema = CheckoutsClientConfirmRequest$outboundSchema;
  /** @deprecated use `CheckoutsClientConfirmRequest$Outbound` instead. */
  export type Outbound = CheckoutsClientConfirmRequest$Outbound;
}

export function checkoutsClientConfirmRequestToJSON(
  checkoutsClientConfirmRequest: CheckoutsClientConfirmRequest,
): string {
  return JSON.stringify(
    CheckoutsClientConfirmRequest$outboundSchema.parse(
      checkoutsClientConfirmRequest,
    ),
  );
}

export function checkoutsClientConfirmRequestFromJSON(
  jsonString: string,
): SafeParseResult<CheckoutsClientConfirmRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CheckoutsClientConfirmRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CheckoutsClientConfirmRequest' from JSON`,
  );
}
