/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type WebhooksRedeliverWebhookEventRequest = {
  /**
   * The webhook event ID.
   */
  id: string;
};

/** @internal */
export const WebhooksRedeliverWebhookEventRequest$inboundSchema: z.ZodType<
  WebhooksRedeliverWebhookEventRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type WebhooksRedeliverWebhookEventRequest$Outbound = {
  id: string;
};

/** @internal */
export const WebhooksRedeliverWebhookEventRequest$outboundSchema: z.ZodType<
  WebhooksRedeliverWebhookEventRequest$Outbound,
  z.ZodTypeDef,
  WebhooksRedeliverWebhookEventRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhooksRedeliverWebhookEventRequest$ {
  /** @deprecated use `WebhooksRedeliverWebhookEventRequest$inboundSchema` instead. */
  export const inboundSchema =
    WebhooksRedeliverWebhookEventRequest$inboundSchema;
  /** @deprecated use `WebhooksRedeliverWebhookEventRequest$outboundSchema` instead. */
  export const outboundSchema =
    WebhooksRedeliverWebhookEventRequest$outboundSchema;
  /** @deprecated use `WebhooksRedeliverWebhookEventRequest$Outbound` instead. */
  export type Outbound = WebhooksRedeliverWebhookEventRequest$Outbound;
}

export function webhooksRedeliverWebhookEventRequestToJSON(
  webhooksRedeliverWebhookEventRequest: WebhooksRedeliverWebhookEventRequest,
): string {
  return JSON.stringify(
    WebhooksRedeliverWebhookEventRequest$outboundSchema.parse(
      webhooksRedeliverWebhookEventRequest,
    ),
  );
}

export function webhooksRedeliverWebhookEventRequestFromJSON(
  jsonString: string,
): SafeParseResult<WebhooksRedeliverWebhookEventRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      WebhooksRedeliverWebhookEventRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhooksRedeliverWebhookEventRequest' from JSON`,
  );
}
