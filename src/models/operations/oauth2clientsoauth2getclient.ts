/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type Oauth2ClientsOauth2GetClientRequest = {
  clientId: string;
};

/** @internal */
export const Oauth2ClientsOauth2GetClientRequest$inboundSchema: z.ZodType<
  Oauth2ClientsOauth2GetClientRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  client_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "client_id": "clientId",
  });
});

/** @internal */
export type Oauth2ClientsOauth2GetClientRequest$Outbound = {
  client_id: string;
};

/** @internal */
export const Oauth2ClientsOauth2GetClientRequest$outboundSchema: z.ZodType<
  Oauth2ClientsOauth2GetClientRequest$Outbound,
  z.ZodTypeDef,
  Oauth2ClientsOauth2GetClientRequest
> = z.object({
  clientId: z.string(),
}).transform((v) => {
  return remap$(v, {
    clientId: "client_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Oauth2ClientsOauth2GetClientRequest$ {
  /** @deprecated use `Oauth2ClientsOauth2GetClientRequest$inboundSchema` instead. */
  export const inboundSchema =
    Oauth2ClientsOauth2GetClientRequest$inboundSchema;
  /** @deprecated use `Oauth2ClientsOauth2GetClientRequest$outboundSchema` instead. */
  export const outboundSchema =
    Oauth2ClientsOauth2GetClientRequest$outboundSchema;
  /** @deprecated use `Oauth2ClientsOauth2GetClientRequest$Outbound` instead. */
  export type Outbound = Oauth2ClientsOauth2GetClientRequest$Outbound;
}
