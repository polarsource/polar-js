/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  WebhookEndpointUpdate,
  WebhookEndpointUpdate$inboundSchema,
  WebhookEndpointUpdate$Outbound,
  WebhookEndpointUpdate$outboundSchema,
} from "../components/webhookendpointupdate.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type WebhooksUpdateWebhookEndpointRequest = {
  /**
   * The webhook endpoint ID.
   */
  id: string;
  webhookEndpointUpdate: WebhookEndpointUpdate;
};

/** @internal */
export const WebhooksUpdateWebhookEndpointRequest$inboundSchema: z.ZodType<
  WebhooksUpdateWebhookEndpointRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  WebhookEndpointUpdate: WebhookEndpointUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "WebhookEndpointUpdate": "webhookEndpointUpdate",
  });
});

/** @internal */
export type WebhooksUpdateWebhookEndpointRequest$Outbound = {
  id: string;
  WebhookEndpointUpdate: WebhookEndpointUpdate$Outbound;
};

/** @internal */
export const WebhooksUpdateWebhookEndpointRequest$outboundSchema: z.ZodType<
  WebhooksUpdateWebhookEndpointRequest$Outbound,
  z.ZodTypeDef,
  WebhooksUpdateWebhookEndpointRequest
> = z.object({
  id: z.string(),
  webhookEndpointUpdate: WebhookEndpointUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    webhookEndpointUpdate: "WebhookEndpointUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhooksUpdateWebhookEndpointRequest$ {
  /** @deprecated use `WebhooksUpdateWebhookEndpointRequest$inboundSchema` instead. */
  export const inboundSchema =
    WebhooksUpdateWebhookEndpointRequest$inboundSchema;
  /** @deprecated use `WebhooksUpdateWebhookEndpointRequest$outboundSchema` instead. */
  export const outboundSchema =
    WebhooksUpdateWebhookEndpointRequest$outboundSchema;
  /** @deprecated use `WebhooksUpdateWebhookEndpointRequest$Outbound` instead. */
  export type Outbound = WebhooksUpdateWebhookEndpointRequest$Outbound;
}

export function webhooksUpdateWebhookEndpointRequestToJSON(
  webhooksUpdateWebhookEndpointRequest: WebhooksUpdateWebhookEndpointRequest,
): string {
  return JSON.stringify(
    WebhooksUpdateWebhookEndpointRequest$outboundSchema.parse(
      webhooksUpdateWebhookEndpointRequest,
    ),
  );
}

export function webhooksUpdateWebhookEndpointRequestFromJSON(
  jsonString: string,
): SafeParseResult<WebhooksUpdateWebhookEndpointRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      WebhooksUpdateWebhookEndpointRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhooksUpdateWebhookEndpointRequest' from JSON`,
  );
}
