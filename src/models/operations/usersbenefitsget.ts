/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type UsersBenefitsGetRequest = {
  /**
   * The benefit ID.
   */
  id: string;
};

/**
 * Successful Response
 */
export type UsersBenefitsGetResponseUsersBenefitsGet =
  | (components.BenefitArticlesSubscriber & { type: "articles" })
  | (components.BenefitDiscordSubscriber & { type: "discord" })
  | (components.BenefitGitHubRepositorySubscriber & {
    type: "github_repository";
  })
  | (components.BenefitDownloadablesSubscriber & { type: "downloadables" })
  | (components.BenefitAdsSubscriber & { type: "ads" })
  | (components.BenefitCustomSubscriber & { type: "custom" })
  | (components.BenefitLicenseKeysSubscriber & { type: "license_keys" });

/** @internal */
export const UsersBenefitsGetRequest$inboundSchema: z.ZodType<
  UsersBenefitsGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type UsersBenefitsGetRequest$Outbound = {
  id: string;
};

/** @internal */
export const UsersBenefitsGetRequest$outboundSchema: z.ZodType<
  UsersBenefitsGetRequest$Outbound,
  z.ZodTypeDef,
  UsersBenefitsGetRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersBenefitsGetRequest$ {
  /** @deprecated use `UsersBenefitsGetRequest$inboundSchema` instead. */
  export const inboundSchema = UsersBenefitsGetRequest$inboundSchema;
  /** @deprecated use `UsersBenefitsGetRequest$outboundSchema` instead. */
  export const outboundSchema = UsersBenefitsGetRequest$outboundSchema;
  /** @deprecated use `UsersBenefitsGetRequest$Outbound` instead. */
  export type Outbound = UsersBenefitsGetRequest$Outbound;
}

/** @internal */
export const UsersBenefitsGetResponseUsersBenefitsGet$inboundSchema: z.ZodType<
  UsersBenefitsGetResponseUsersBenefitsGet,
  z.ZodTypeDef,
  unknown
> = z.union([
  components.BenefitArticlesSubscriber$inboundSchema.and(
    z.object({ type: z.literal("articles") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitDiscordSubscriber$inboundSchema.and(
    z.object({ type: z.literal("discord") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitGitHubRepositorySubscriber$inboundSchema.and(
    z.object({ type: z.literal("github_repository") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitDownloadablesSubscriber$inboundSchema.and(
    z.object({ type: z.literal("downloadables") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitAdsSubscriber$inboundSchema.and(
    z.object({ type: z.literal("ads") }).transform((v) => ({ type: v.type })),
  ),
  components.BenefitCustomSubscriber$inboundSchema.and(
    z.object({ type: z.literal("custom") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitLicenseKeysSubscriber$inboundSchema.and(
    z.object({ type: z.literal("license_keys") }).transform((v) => ({
      type: v.type,
    })),
  ),
]);

/** @internal */
export type UsersBenefitsGetResponseUsersBenefitsGet$Outbound =
  | (components.BenefitArticlesSubscriber$Outbound & { type: "articles" })
  | (components.BenefitDiscordSubscriber$Outbound & { type: "discord" })
  | (components.BenefitGitHubRepositorySubscriber$Outbound & {
    type: "github_repository";
  })
  | (components.BenefitDownloadablesSubscriber$Outbound & {
    type: "downloadables";
  })
  | (components.BenefitAdsSubscriber$Outbound & { type: "ads" })
  | (components.BenefitCustomSubscriber$Outbound & { type: "custom" })
  | (components.BenefitLicenseKeysSubscriber$Outbound & {
    type: "license_keys";
  });

/** @internal */
export const UsersBenefitsGetResponseUsersBenefitsGet$outboundSchema: z.ZodType<
  UsersBenefitsGetResponseUsersBenefitsGet$Outbound,
  z.ZodTypeDef,
  UsersBenefitsGetResponseUsersBenefitsGet
> = z.union([
  components.BenefitArticlesSubscriber$outboundSchema.and(
    z.object({ type: z.literal("articles") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitDiscordSubscriber$outboundSchema.and(
    z.object({ type: z.literal("discord") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitGitHubRepositorySubscriber$outboundSchema.and(
    z.object({ type: z.literal("github_repository") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitDownloadablesSubscriber$outboundSchema.and(
    z.object({ type: z.literal("downloadables") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitAdsSubscriber$outboundSchema.and(
    z.object({ type: z.literal("ads") }).transform((v) => ({ type: v.type })),
  ),
  components.BenefitCustomSubscriber$outboundSchema.and(
    z.object({ type: z.literal("custom") }).transform((v) => ({
      type: v.type,
    })),
  ),
  components.BenefitLicenseKeysSubscriber$outboundSchema.and(
    z.object({ type: z.literal("license_keys") }).transform((v) => ({
      type: v.type,
    })),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersBenefitsGetResponseUsersBenefitsGet$ {
  /** @deprecated use `UsersBenefitsGetResponseUsersBenefitsGet$inboundSchema` instead. */
  export const inboundSchema =
    UsersBenefitsGetResponseUsersBenefitsGet$inboundSchema;
  /** @deprecated use `UsersBenefitsGetResponseUsersBenefitsGet$outboundSchema` instead. */
  export const outboundSchema =
    UsersBenefitsGetResponseUsersBenefitsGet$outboundSchema;
  /** @deprecated use `UsersBenefitsGetResponseUsersBenefitsGet$Outbound` instead. */
  export type Outbound = UsersBenefitsGetResponseUsersBenefitsGet$Outbound;
}
