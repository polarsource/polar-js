/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type OrganizationsUpdateRequest = {
  id: string;
  organizationUpdate: components.OrganizationUpdate;
};

/** @internal */
export const OrganizationsUpdateRequest$inboundSchema: z.ZodType<
  OrganizationsUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  OrganizationUpdate: components.OrganizationUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "OrganizationUpdate": "organizationUpdate",
  });
});

/** @internal */
export type OrganizationsUpdateRequest$Outbound = {
  id: string;
  OrganizationUpdate: components.OrganizationUpdate$Outbound;
};

/** @internal */
export const OrganizationsUpdateRequest$outboundSchema: z.ZodType<
  OrganizationsUpdateRequest$Outbound,
  z.ZodTypeDef,
  OrganizationsUpdateRequest
> = z.object({
  id: z.string(),
  organizationUpdate: components.OrganizationUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    organizationUpdate: "OrganizationUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrganizationsUpdateRequest$ {
  /** @deprecated use `OrganizationsUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = OrganizationsUpdateRequest$inboundSchema;
  /** @deprecated use `OrganizationsUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = OrganizationsUpdateRequest$outboundSchema;
  /** @deprecated use `OrganizationsUpdateRequest$Outbound` instead. */
  export type Outbound = OrganizationsUpdateRequest$Outbound;
}
