/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomerPortalSubscriptionsCancelRequest = {
  /**
   * The subscription ID.
   */
  id: string;
};

/** @internal */
export const CustomerPortalSubscriptionsCancelRequest$inboundSchema: z.ZodType<
  CustomerPortalSubscriptionsCancelRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type CustomerPortalSubscriptionsCancelRequest$Outbound = {
  id: string;
};

/** @internal */
export const CustomerPortalSubscriptionsCancelRequest$outboundSchema: z.ZodType<
  CustomerPortalSubscriptionsCancelRequest$Outbound,
  z.ZodTypeDef,
  CustomerPortalSubscriptionsCancelRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalSubscriptionsCancelRequest$ {
  /** @deprecated use `CustomerPortalSubscriptionsCancelRequest$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalSubscriptionsCancelRequest$inboundSchema;
  /** @deprecated use `CustomerPortalSubscriptionsCancelRequest$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalSubscriptionsCancelRequest$outboundSchema;
  /** @deprecated use `CustomerPortalSubscriptionsCancelRequest$Outbound` instead. */
  export type Outbound = CustomerPortalSubscriptionsCancelRequest$Outbound;
}

export function customerPortalSubscriptionsCancelRequestToJSON(
  customerPortalSubscriptionsCancelRequest:
    CustomerPortalSubscriptionsCancelRequest,
): string {
  return JSON.stringify(
    CustomerPortalSubscriptionsCancelRequest$outboundSchema.parse(
      customerPortalSubscriptionsCancelRequest,
    ),
  );
}

export function customerPortalSubscriptionsCancelRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalSubscriptionsCancelRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalSubscriptionsCancelRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPortalSubscriptionsCancelRequest' from JSON`,
  );
}
