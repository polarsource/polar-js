/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UsersSubscriptionsCancelRequest = {
  /**
   * The subscription ID.
   */
  id: string;
};

/** @internal */
export const UsersSubscriptionsCancelRequest$inboundSchema: z.ZodType<
  UsersSubscriptionsCancelRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type UsersSubscriptionsCancelRequest$Outbound = {
  id: string;
};

/** @internal */
export const UsersSubscriptionsCancelRequest$outboundSchema: z.ZodType<
  UsersSubscriptionsCancelRequest$Outbound,
  z.ZodTypeDef,
  UsersSubscriptionsCancelRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsersSubscriptionsCancelRequest$ {
  /** @deprecated use `UsersSubscriptionsCancelRequest$inboundSchema` instead. */
  export const inboundSchema = UsersSubscriptionsCancelRequest$inboundSchema;
  /** @deprecated use `UsersSubscriptionsCancelRequest$outboundSchema` instead. */
  export const outboundSchema = UsersSubscriptionsCancelRequest$outboundSchema;
  /** @deprecated use `UsersSubscriptionsCancelRequest$Outbound` instead. */
  export type Outbound = UsersSubscriptionsCancelRequest$Outbound;
}

export function usersSubscriptionsCancelRequestToJSON(
  usersSubscriptionsCancelRequest: UsersSubscriptionsCancelRequest,
): string {
  return JSON.stringify(
    UsersSubscriptionsCancelRequest$outboundSchema.parse(
      usersSubscriptionsCancelRequest,
    ),
  );
}

export function usersSubscriptionsCancelRequestFromJSON(
  jsonString: string,
): SafeParseResult<UsersSubscriptionsCancelRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UsersSubscriptionsCancelRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UsersSubscriptionsCancelRequest' from JSON`,
  );
}
