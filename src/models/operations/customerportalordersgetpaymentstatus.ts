/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomerPortalOrdersGetPaymentStatusSecurity = {
  customerSession: string;
};

export type CustomerPortalOrdersGetPaymentStatusRequest = {
  /**
   * The order ID.
   */
  id: string;
};

/** @internal */
export const CustomerPortalOrdersGetPaymentStatusSecurity$inboundSchema:
  z.ZodType<
    CustomerPortalOrdersGetPaymentStatusSecurity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    customer_session: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "customer_session": "customerSession",
    });
  });

/** @internal */
export type CustomerPortalOrdersGetPaymentStatusSecurity$Outbound = {
  customer_session: string;
};

/** @internal */
export const CustomerPortalOrdersGetPaymentStatusSecurity$outboundSchema:
  z.ZodType<
    CustomerPortalOrdersGetPaymentStatusSecurity$Outbound,
    z.ZodTypeDef,
    CustomerPortalOrdersGetPaymentStatusSecurity
  > = z.object({
    customerSession: z.string(),
  }).transform((v) => {
    return remap$(v, {
      customerSession: "customer_session",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalOrdersGetPaymentStatusSecurity$ {
  /** @deprecated use `CustomerPortalOrdersGetPaymentStatusSecurity$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalOrdersGetPaymentStatusSecurity$inboundSchema;
  /** @deprecated use `CustomerPortalOrdersGetPaymentStatusSecurity$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalOrdersGetPaymentStatusSecurity$outboundSchema;
  /** @deprecated use `CustomerPortalOrdersGetPaymentStatusSecurity$Outbound` instead. */
  export type Outbound = CustomerPortalOrdersGetPaymentStatusSecurity$Outbound;
}

export function customerPortalOrdersGetPaymentStatusSecurityToJSON(
  customerPortalOrdersGetPaymentStatusSecurity:
    CustomerPortalOrdersGetPaymentStatusSecurity,
): string {
  return JSON.stringify(
    CustomerPortalOrdersGetPaymentStatusSecurity$outboundSchema.parse(
      customerPortalOrdersGetPaymentStatusSecurity,
    ),
  );
}

export function customerPortalOrdersGetPaymentStatusSecurityFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalOrdersGetPaymentStatusSecurity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalOrdersGetPaymentStatusSecurity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPortalOrdersGetPaymentStatusSecurity' from JSON`,
  );
}

/** @internal */
export const CustomerPortalOrdersGetPaymentStatusRequest$inboundSchema:
  z.ZodType<
    CustomerPortalOrdersGetPaymentStatusRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
  });

/** @internal */
export type CustomerPortalOrdersGetPaymentStatusRequest$Outbound = {
  id: string;
};

/** @internal */
export const CustomerPortalOrdersGetPaymentStatusRequest$outboundSchema:
  z.ZodType<
    CustomerPortalOrdersGetPaymentStatusRequest$Outbound,
    z.ZodTypeDef,
    CustomerPortalOrdersGetPaymentStatusRequest
  > = z.object({
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalOrdersGetPaymentStatusRequest$ {
  /** @deprecated use `CustomerPortalOrdersGetPaymentStatusRequest$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalOrdersGetPaymentStatusRequest$inboundSchema;
  /** @deprecated use `CustomerPortalOrdersGetPaymentStatusRequest$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalOrdersGetPaymentStatusRequest$outboundSchema;
  /** @deprecated use `CustomerPortalOrdersGetPaymentStatusRequest$Outbound` instead. */
  export type Outbound = CustomerPortalOrdersGetPaymentStatusRequest$Outbound;
}

export function customerPortalOrdersGetPaymentStatusRequestToJSON(
  customerPortalOrdersGetPaymentStatusRequest:
    CustomerPortalOrdersGetPaymentStatusRequest,
): string {
  return JSON.stringify(
    CustomerPortalOrdersGetPaymentStatusRequest$outboundSchema.parse(
      customerPortalOrdersGetPaymentStatusRequest,
    ),
  );
}

export function customerPortalOrdersGetPaymentStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalOrdersGetPaymentStatusRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalOrdersGetPaymentStatusRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPortalOrdersGetPaymentStatusRequest' from JSON`,
  );
}
