/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  Onev11oauth21tokenPostXComponentsAuthorizationCodeTokenRequest,
  Onev11oauth21tokenPostXComponentsAuthorizationCodeTokenRequest$inboundSchema,
  Onev11oauth21tokenPostXComponentsAuthorizationCodeTokenRequest$Outbound,
  Onev11oauth21tokenPostXComponentsAuthorizationCodeTokenRequest$outboundSchema,
} from "../components/onev11oauth21tokenpostxcomponentsauthorizationcodetokenrequest.js";
import {
  Onev11oauth21tokenPostXComponentsRefreshTokenRequest,
  Onev11oauth21tokenPostXComponentsRefreshTokenRequest$inboundSchema,
  Onev11oauth21tokenPostXComponentsRefreshTokenRequest$Outbound,
  Onev11oauth21tokenPostXComponentsRefreshTokenRequest$outboundSchema,
} from "../components/onev11oauth21tokenpostxcomponentsrefreshtokenrequest.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Oauth2RequestTokenRequestBody =
  | (Onev11oauth21tokenPostXComponentsRefreshTokenRequest & {
    grantType: "refresh_token";
  })
  | (Onev11oauth21tokenPostXComponentsAuthorizationCodeTokenRequest & {
    grantType: "authorization_code";
  });

/** @internal */
export const Oauth2RequestTokenRequestBody$inboundSchema: z.ZodType<
  Oauth2RequestTokenRequestBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  Onev11oauth21tokenPostXComponentsRefreshTokenRequest$inboundSchema.and(
    z.object({ grant_type: z.literal("refresh_token") }).transform((v) => ({
      grantType: v.grant_type,
    })),
  ),
  Onev11oauth21tokenPostXComponentsAuthorizationCodeTokenRequest$inboundSchema
    .and(
      z.object({ grant_type: z.literal("authorization_code") }).transform((
        v,
      ) => ({ grantType: v.grant_type })),
    ),
]);

/** @internal */
export type Oauth2RequestTokenRequestBody$Outbound =
  | (Onev11oauth21tokenPostXComponentsRefreshTokenRequest$Outbound & {
    grant_type: "refresh_token";
  })
  | (Onev11oauth21tokenPostXComponentsAuthorizationCodeTokenRequest$Outbound & {
    grant_type: "authorization_code";
  });

/** @internal */
export const Oauth2RequestTokenRequestBody$outboundSchema: z.ZodType<
  Oauth2RequestTokenRequestBody$Outbound,
  z.ZodTypeDef,
  Oauth2RequestTokenRequestBody
> = z.union([
  Onev11oauth21tokenPostXComponentsRefreshTokenRequest$outboundSchema.and(
    z.object({ grantType: z.literal("refresh_token") }).transform((v) => ({
      grant_type: v.grantType,
    })),
  ),
  Onev11oauth21tokenPostXComponentsAuthorizationCodeTokenRequest$outboundSchema
    .and(
      z.object({ grantType: z.literal("authorization_code") }).transform((
        v,
      ) => ({ grant_type: v.grantType })),
    ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Oauth2RequestTokenRequestBody$ {
  /** @deprecated use `Oauth2RequestTokenRequestBody$inboundSchema` instead. */
  export const inboundSchema = Oauth2RequestTokenRequestBody$inboundSchema;
  /** @deprecated use `Oauth2RequestTokenRequestBody$outboundSchema` instead. */
  export const outboundSchema = Oauth2RequestTokenRequestBody$outboundSchema;
  /** @deprecated use `Oauth2RequestTokenRequestBody$Outbound` instead. */
  export type Outbound = Oauth2RequestTokenRequestBody$Outbound;
}

export function oauth2RequestTokenRequestBodyToJSON(
  oauth2RequestTokenRequestBody: Oauth2RequestTokenRequestBody,
): string {
  return JSON.stringify(
    Oauth2RequestTokenRequestBody$outboundSchema.parse(
      oauth2RequestTokenRequestBody,
    ),
  );
}

export function oauth2RequestTokenRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<Oauth2RequestTokenRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Oauth2RequestTokenRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Oauth2RequestTokenRequestBody' from JSON`,
  );
}
