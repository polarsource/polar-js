/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CustomerPortalOrdersGenerateInvoiceSecurity = {
  customerSession: string;
};

export type CustomerPortalOrdersGenerateInvoiceRequest = {
  /**
   * The order ID.
   */
  id: string;
};

/** @internal */
export const CustomerPortalOrdersGenerateInvoiceSecurity$inboundSchema:
  z.ZodType<
    CustomerPortalOrdersGenerateInvoiceSecurity,
    z.ZodTypeDef,
    unknown
  > = z.object({
    customer_session: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "customer_session": "customerSession",
    });
  });

/** @internal */
export type CustomerPortalOrdersGenerateInvoiceSecurity$Outbound = {
  customer_session: string;
};

/** @internal */
export const CustomerPortalOrdersGenerateInvoiceSecurity$outboundSchema:
  z.ZodType<
    CustomerPortalOrdersGenerateInvoiceSecurity$Outbound,
    z.ZodTypeDef,
    CustomerPortalOrdersGenerateInvoiceSecurity
  > = z.object({
    customerSession: z.string(),
  }).transform((v) => {
    return remap$(v, {
      customerSession: "customer_session",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalOrdersGenerateInvoiceSecurity$ {
  /** @deprecated use `CustomerPortalOrdersGenerateInvoiceSecurity$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalOrdersGenerateInvoiceSecurity$inboundSchema;
  /** @deprecated use `CustomerPortalOrdersGenerateInvoiceSecurity$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalOrdersGenerateInvoiceSecurity$outboundSchema;
  /** @deprecated use `CustomerPortalOrdersGenerateInvoiceSecurity$Outbound` instead. */
  export type Outbound = CustomerPortalOrdersGenerateInvoiceSecurity$Outbound;
}

export function customerPortalOrdersGenerateInvoiceSecurityToJSON(
  customerPortalOrdersGenerateInvoiceSecurity:
    CustomerPortalOrdersGenerateInvoiceSecurity,
): string {
  return JSON.stringify(
    CustomerPortalOrdersGenerateInvoiceSecurity$outboundSchema.parse(
      customerPortalOrdersGenerateInvoiceSecurity,
    ),
  );
}

export function customerPortalOrdersGenerateInvoiceSecurityFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalOrdersGenerateInvoiceSecurity,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalOrdersGenerateInvoiceSecurity$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPortalOrdersGenerateInvoiceSecurity' from JSON`,
  );
}

/** @internal */
export const CustomerPortalOrdersGenerateInvoiceRequest$inboundSchema:
  z.ZodType<CustomerPortalOrdersGenerateInvoiceRequest, z.ZodTypeDef, unknown> =
    z.object({
      id: z.string(),
    });

/** @internal */
export type CustomerPortalOrdersGenerateInvoiceRequest$Outbound = {
  id: string;
};

/** @internal */
export const CustomerPortalOrdersGenerateInvoiceRequest$outboundSchema:
  z.ZodType<
    CustomerPortalOrdersGenerateInvoiceRequest$Outbound,
    z.ZodTypeDef,
    CustomerPortalOrdersGenerateInvoiceRequest
  > = z.object({
    id: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPortalOrdersGenerateInvoiceRequest$ {
  /** @deprecated use `CustomerPortalOrdersGenerateInvoiceRequest$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPortalOrdersGenerateInvoiceRequest$inboundSchema;
  /** @deprecated use `CustomerPortalOrdersGenerateInvoiceRequest$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPortalOrdersGenerateInvoiceRequest$outboundSchema;
  /** @deprecated use `CustomerPortalOrdersGenerateInvoiceRequest$Outbound` instead. */
  export type Outbound = CustomerPortalOrdersGenerateInvoiceRequest$Outbound;
}

export function customerPortalOrdersGenerateInvoiceRequestToJSON(
  customerPortalOrdersGenerateInvoiceRequest:
    CustomerPortalOrdersGenerateInvoiceRequest,
): string {
  return JSON.stringify(
    CustomerPortalOrdersGenerateInvoiceRequest$outboundSchema.parse(
      customerPortalOrdersGenerateInvoiceRequest,
    ),
  );
}

export function customerPortalOrdersGenerateInvoiceRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPortalOrdersGenerateInvoiceRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPortalOrdersGenerateInvoiceRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPortalOrdersGenerateInvoiceRequest' from JSON`,
  );
}
