/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  DonationOrganization,
  DonationOrganization$inboundSchema,
  DonationOrganization$Outbound,
  DonationOrganization$outboundSchema,
} from "./donationorganization.js";
import {
  DonationUser,
  DonationUser$inboundSchema,
  DonationUser$Outbound,
  DonationUser$outboundSchema,
} from "./donationuser.js";
import {
  IssueInput,
  IssueInput$inboundSchema,
  IssueInput$Outbound,
  IssueInput$outboundSchema,
} from "./issueinput.js";

export type Donor = DonationUser | DonationOrganization;

export type DonationInput = {
  /**
   * Creation timestamp of the object.
   */
  createdAt: Date;
  /**
   * Last modification timestamp of the object.
   */
  modifiedAt: Date | null;
  /**
   * The ID of the object.
   */
  id: string;
  amount: number;
  currency: string;
  message: string | null;
  donor: DonationUser | DonationOrganization | null;
  email: string;
  issue: IssueInput | null;
};

/** @internal */
export const Donor$inboundSchema: z.ZodType<Donor, z.ZodTypeDef, unknown> = z
  .union([DonationUser$inboundSchema, DonationOrganization$inboundSchema]);

/** @internal */
export type Donor$Outbound =
  | DonationUser$Outbound
  | DonationOrganization$Outbound;

/** @internal */
export const Donor$outboundSchema: z.ZodType<
  Donor$Outbound,
  z.ZodTypeDef,
  Donor
> = z.union([DonationUser$outboundSchema, DonationOrganization$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Donor$ {
  /** @deprecated use `Donor$inboundSchema` instead. */
  export const inboundSchema = Donor$inboundSchema;
  /** @deprecated use `Donor$outboundSchema` instead. */
  export const outboundSchema = Donor$outboundSchema;
  /** @deprecated use `Donor$Outbound` instead. */
  export type Outbound = Donor$Outbound;
}

/** @internal */
export const DonationInput$inboundSchema: z.ZodType<
  DonationInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  modified_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  id: z.string(),
  amount: z.number().int(),
  currency: z.string(),
  message: z.nullable(z.string()),
  donor: z.nullable(
    z.union([DonationUser$inboundSchema, DonationOrganization$inboundSchema]),
  ),
  email: z.string(),
  issue: z.nullable(IssueInput$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
  });
});

/** @internal */
export type DonationInput$Outbound = {
  created_at: string;
  modified_at: string | null;
  id: string;
  amount: number;
  currency: string;
  message: string | null;
  donor: DonationUser$Outbound | DonationOrganization$Outbound | null;
  email: string;
  issue: IssueInput$Outbound | null;
};

/** @internal */
export const DonationInput$outboundSchema: z.ZodType<
  DonationInput$Outbound,
  z.ZodTypeDef,
  DonationInput
> = z.object({
  createdAt: z.date().transform(v => v.toISOString()),
  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
  id: z.string(),
  amount: z.number().int(),
  currency: z.string(),
  message: z.nullable(z.string()),
  donor: z.nullable(
    z.union([DonationUser$outboundSchema, DonationOrganization$outboundSchema]),
  ),
  email: z.string(),
  issue: z.nullable(IssueInput$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    modifiedAt: "modified_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DonationInput$ {
  /** @deprecated use `DonationInput$inboundSchema` instead. */
  export const inboundSchema = DonationInput$inboundSchema;
  /** @deprecated use `DonationInput$outboundSchema` instead. */
  export const outboundSchema = DonationInput$outboundSchema;
  /** @deprecated use `DonationInput$Outbound` instead. */
  export type Outbound = DonationInput$Outbound;
}
