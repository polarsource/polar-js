/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ProductPriceOneTimeCreate,
  ProductPriceOneTimeCreate$inboundSchema,
  ProductPriceOneTimeCreate$Outbound,
  ProductPriceOneTimeCreate$outboundSchema,
} from "./productpriceonetimecreate.js";

/**
 * Schema to create a one-time product.
 */
export type ProductOneTimeCreate = {
  /**
   * The name of the product.
   */
  name: string;
  /**
   * The description of the product.
   */
  description?: string | null | undefined;
  /**
   * List of available prices for this product.
   */
  prices: Array<ProductPriceOneTimeCreate>;
  /**
   * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.
   */
  medias?: Array<string> | null | undefined;
  /**
   * The ID of the organization owning the product. **Required unless you use an organization token.**
   */
  organizationId?: string | null | undefined;
};

/** @internal */
export const ProductOneTimeCreate$inboundSchema: z.ZodType<
  ProductOneTimeCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  prices: z.array(ProductPriceOneTimeCreate$inboundSchema),
  medias: z.nullable(z.array(z.string())).optional(),
  organization_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "organization_id": "organizationId",
  });
});

/** @internal */
export type ProductOneTimeCreate$Outbound = {
  name: string;
  description?: string | null | undefined;
  prices: Array<ProductPriceOneTimeCreate$Outbound>;
  medias?: Array<string> | null | undefined;
  organization_id?: string | null | undefined;
};

/** @internal */
export const ProductOneTimeCreate$outboundSchema: z.ZodType<
  ProductOneTimeCreate$Outbound,
  z.ZodTypeDef,
  ProductOneTimeCreate
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  prices: z.array(ProductPriceOneTimeCreate$outboundSchema),
  medias: z.nullable(z.array(z.string())).optional(),
  organizationId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    organizationId: "organization_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductOneTimeCreate$ {
  /** @deprecated use `ProductOneTimeCreate$inboundSchema` instead. */
  export const inboundSchema = ProductOneTimeCreate$inboundSchema;
  /** @deprecated use `ProductOneTimeCreate$outboundSchema` instead. */
  export const outboundSchema = ProductOneTimeCreate$outboundSchema;
  /** @deprecated use `ProductOneTimeCreate$Outbound` instead. */
  export type Outbound = ProductOneTimeCreate$Outbound;
}
