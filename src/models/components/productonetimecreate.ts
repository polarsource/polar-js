/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ProductPriceOneTimeCustomCreate,
  ProductPriceOneTimeCustomCreate$inboundSchema,
  ProductPriceOneTimeCustomCreate$Outbound,
  ProductPriceOneTimeCustomCreate$outboundSchema,
} from "./productpriceonetimecustomcreate.js";
import {
  ProductPriceOneTimeFixedCreate,
  ProductPriceOneTimeFixedCreate$inboundSchema,
  ProductPriceOneTimeFixedCreate$Outbound,
  ProductPriceOneTimeFixedCreate$outboundSchema,
} from "./productpriceonetimefixedcreate.js";
import {
  ProductPriceOneTimeFreeCreate,
  ProductPriceOneTimeFreeCreate$inboundSchema,
  ProductPriceOneTimeFreeCreate$Outbound,
  ProductPriceOneTimeFreeCreate$outboundSchema,
} from "./productpriceonetimefreecreate.js";

export type Prices =
  | ProductPriceOneTimeFreeCreate
  | ProductPriceOneTimeFixedCreate
  | ProductPriceOneTimeCustomCreate;

/**
 * Schema to create a one-time product.
 */
export type ProductOneTimeCreate = {
  /**
   * The name of the product.
   */
  name: string;
  /**
   * The description of the product.
   */
  description?: string | null | undefined;
  /**
   * List of available prices for this product.
   */
  prices: Array<
    | ProductPriceOneTimeFreeCreate
    | ProductPriceOneTimeFixedCreate
    | ProductPriceOneTimeCustomCreate
  >;
  /**
   * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.
   */
  medias?: Array<string> | null | undefined;
  /**
   * The ID of the organization owning the product. **Required unless you use an organization token.**
   */
  organizationId?: string | null | undefined;
};

/** @internal */
export const Prices$inboundSchema: z.ZodType<Prices, z.ZodTypeDef, unknown> = z
  .union([
    ProductPriceOneTimeFreeCreate$inboundSchema,
    ProductPriceOneTimeFixedCreate$inboundSchema,
    ProductPriceOneTimeCustomCreate$inboundSchema,
  ]);

/** @internal */
export type Prices$Outbound =
  | ProductPriceOneTimeFreeCreate$Outbound
  | ProductPriceOneTimeFixedCreate$Outbound
  | ProductPriceOneTimeCustomCreate$Outbound;

/** @internal */
export const Prices$outboundSchema: z.ZodType<
  Prices$Outbound,
  z.ZodTypeDef,
  Prices
> = z.union([
  ProductPriceOneTimeFreeCreate$outboundSchema,
  ProductPriceOneTimeFixedCreate$outboundSchema,
  ProductPriceOneTimeCustomCreate$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Prices$ {
  /** @deprecated use `Prices$inboundSchema` instead. */
  export const inboundSchema = Prices$inboundSchema;
  /** @deprecated use `Prices$outboundSchema` instead. */
  export const outboundSchema = Prices$outboundSchema;
  /** @deprecated use `Prices$Outbound` instead. */
  export type Outbound = Prices$Outbound;
}

/** @internal */
export const ProductOneTimeCreate$inboundSchema: z.ZodType<
  ProductOneTimeCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  prices: z.array(
    z.union([
      ProductPriceOneTimeFreeCreate$inboundSchema,
      ProductPriceOneTimeFixedCreate$inboundSchema,
      ProductPriceOneTimeCustomCreate$inboundSchema,
    ]),
  ),
  medias: z.nullable(z.array(z.string())).optional(),
  organization_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "organization_id": "organizationId",
  });
});

/** @internal */
export type ProductOneTimeCreate$Outbound = {
  name: string;
  description?: string | null | undefined;
  prices: Array<
    | ProductPriceOneTimeFreeCreate$Outbound
    | ProductPriceOneTimeFixedCreate$Outbound
    | ProductPriceOneTimeCustomCreate$Outbound
  >;
  medias?: Array<string> | null | undefined;
  organization_id?: string | null | undefined;
};

/** @internal */
export const ProductOneTimeCreate$outboundSchema: z.ZodType<
  ProductOneTimeCreate$Outbound,
  z.ZodTypeDef,
  ProductOneTimeCreate
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  prices: z.array(
    z.union([
      ProductPriceOneTimeFreeCreate$outboundSchema,
      ProductPriceOneTimeFixedCreate$outboundSchema,
      ProductPriceOneTimeCustomCreate$outboundSchema,
    ]),
  ),
  medias: z.nullable(z.array(z.string())).optional(),
  organizationId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    organizationId: "organization_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductOneTimeCreate$ {
  /** @deprecated use `ProductOneTimeCreate$inboundSchema` instead. */
  export const inboundSchema = ProductOneTimeCreate$inboundSchema;
  /** @deprecated use `ProductOneTimeCreate$outboundSchema` instead. */
  export const outboundSchema = ProductOneTimeCreate$outboundSchema;
  /** @deprecated use `ProductOneTimeCreate$Outbound` instead. */
  export type Outbound = ProductOneTimeCreate$Outbound;
}
