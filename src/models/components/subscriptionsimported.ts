/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Result of a subscription import operation.
 */
export type SubscriptionsImported = {
  count: number;
};

/** @internal */
export const SubscriptionsImported$inboundSchema: z.ZodType<
  SubscriptionsImported,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int(),
});

/** @internal */
export type SubscriptionsImported$Outbound = {
  count: number;
};

/** @internal */
export const SubscriptionsImported$outboundSchema: z.ZodType<
  SubscriptionsImported$Outbound,
  z.ZodTypeDef,
  SubscriptionsImported
> = z.object({
  count: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SubscriptionsImported$ {
  /** @deprecated use `SubscriptionsImported$inboundSchema` instead. */
  export const inboundSchema = SubscriptionsImported$inboundSchema;
  /** @deprecated use `SubscriptionsImported$outboundSchema` instead. */
  export const outboundSchema = SubscriptionsImported$outboundSchema;
  /** @deprecated use `SubscriptionsImported$Outbound` instead. */
  export type Outbound = SubscriptionsImported$Outbound;
}
