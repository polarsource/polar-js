/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
  BenefitLicenseKeysProperties,
  BenefitLicenseKeysProperties$inboundSchema,
  BenefitLicenseKeysProperties$Outbound,
  BenefitLicenseKeysProperties$outboundSchema,
} from "./benefitlicensekeysproperties.js";

export const BenefitLicenseKeysOutputType = {
  LicenseKeys: "license_keys",
} as const;
export type BenefitLicenseKeysOutputType = ClosedEnum<
  typeof BenefitLicenseKeysOutputType
>;

export type BenefitLicenseKeysOutput = {
  /**
   * Creation timestamp of the object.
   */
  createdAt: Date;
  /**
   * Last modification timestamp of the object.
   */
  modifiedAt: Date | null;
  /**
   * The ID of the benefit.
   */
  id: string;
  type?: "license_keys" | undefined;
  /**
   * The description of the benefit.
   */
  description: string;
  /**
   * Whether the benefit is selectable when creating a product.
   */
  selectable: boolean;
  /**
   * Whether the benefit is deletable.
   */
  deletable: boolean;
  /**
   * The ID of the organization owning the benefit.
   */
  organizationId: string;
  properties: BenefitLicenseKeysProperties;
};

/** @internal */
export const BenefitLicenseKeysOutputType$inboundSchema: z.ZodNativeEnum<
  typeof BenefitLicenseKeysOutputType
> = z.nativeEnum(BenefitLicenseKeysOutputType);

/** @internal */
export const BenefitLicenseKeysOutputType$outboundSchema: z.ZodNativeEnum<
  typeof BenefitLicenseKeysOutputType
> = BenefitLicenseKeysOutputType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitLicenseKeysOutputType$ {
  /** @deprecated use `BenefitLicenseKeysOutputType$inboundSchema` instead. */
  export const inboundSchema = BenefitLicenseKeysOutputType$inboundSchema;
  /** @deprecated use `BenefitLicenseKeysOutputType$outboundSchema` instead. */
  export const outboundSchema = BenefitLicenseKeysOutputType$outboundSchema;
}

/** @internal */
export const BenefitLicenseKeysOutput$inboundSchema: z.ZodType<
  BenefitLicenseKeysOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  modified_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  id: z.string(),
  type: z.literal("license_keys").optional(),
  description: z.string(),
  selectable: z.boolean(),
  deletable: z.boolean(),
  organization_id: z.string(),
  properties: BenefitLicenseKeysProperties$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
    "organization_id": "organizationId",
  });
});

/** @internal */
export type BenefitLicenseKeysOutput$Outbound = {
  created_at: string;
  modified_at: string | null;
  id: string;
  type: "license_keys";
  description: string;
  selectable: boolean;
  deletable: boolean;
  organization_id: string;
  properties: BenefitLicenseKeysProperties$Outbound;
};

/** @internal */
export const BenefitLicenseKeysOutput$outboundSchema: z.ZodType<
  BenefitLicenseKeysOutput$Outbound,
  z.ZodTypeDef,
  BenefitLicenseKeysOutput
> = z.object({
  createdAt: z.date().transform(v => v.toISOString()),
  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
  id: z.string(),
  type: z.literal("license_keys").default("license_keys"),
  description: z.string(),
  selectable: z.boolean(),
  deletable: z.boolean(),
  organizationId: z.string(),
  properties: BenefitLicenseKeysProperties$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    modifiedAt: "modified_at",
    organizationId: "organization_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitLicenseKeysOutput$ {
  /** @deprecated use `BenefitLicenseKeysOutput$inboundSchema` instead. */
  export const inboundSchema = BenefitLicenseKeysOutput$inboundSchema;
  /** @deprecated use `BenefitLicenseKeysOutput$outboundSchema` instead. */
  export const outboundSchema = BenefitLicenseKeysOutput$outboundSchema;
  /** @deprecated use `BenefitLicenseKeysOutput$Outbound` instead. */
  export type Outbound = BenefitLicenseKeysOutput$Outbound;
}
