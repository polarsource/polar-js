/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BenefitGitHubRepositoryCreateProperties,
  BenefitGitHubRepositoryCreateProperties$inboundSchema,
  BenefitGitHubRepositoryCreateProperties$Outbound,
  BenefitGitHubRepositoryCreateProperties$outboundSchema,
} from "./benefitgithubrepositorycreateproperties.js";

export type BenefitGitHubRepositoryUpdate = {
  /**
   * The description of the benefit. Will be displayed on products having this benefit.
   */
  description?: string | null | undefined;
  type?: "github_repository" | undefined;
  properties?: BenefitGitHubRepositoryCreateProperties | null | undefined;
};

/** @internal */
export const BenefitGitHubRepositoryUpdate$inboundSchema: z.ZodType<
  BenefitGitHubRepositoryUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  type: z.literal("github_repository").optional(),
  properties: z.nullable(BenefitGitHubRepositoryCreateProperties$inboundSchema)
    .optional(),
});

/** @internal */
export type BenefitGitHubRepositoryUpdate$Outbound = {
  description?: string | null | undefined;
  type: "github_repository";
  properties?:
    | BenefitGitHubRepositoryCreateProperties$Outbound
    | null
    | undefined;
};

/** @internal */
export const BenefitGitHubRepositoryUpdate$outboundSchema: z.ZodType<
  BenefitGitHubRepositoryUpdate$Outbound,
  z.ZodTypeDef,
  BenefitGitHubRepositoryUpdate
> = z.object({
  description: z.nullable(z.string()).optional(),
  type: z.literal("github_repository").default("github_repository" as const),
  properties: z.nullable(BenefitGitHubRepositoryCreateProperties$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitGitHubRepositoryUpdate$ {
  /** @deprecated use `BenefitGitHubRepositoryUpdate$inboundSchema` instead. */
  export const inboundSchema = BenefitGitHubRepositoryUpdate$inboundSchema;
  /** @deprecated use `BenefitGitHubRepositoryUpdate$outboundSchema` instead. */
  export const outboundSchema = BenefitGitHubRepositoryUpdate$outboundSchema;
  /** @deprecated use `BenefitGitHubRepositoryUpdate$Outbound` instead. */
  export type Outbound = BenefitGitHubRepositoryUpdate$Outbound;
}

export function benefitGitHubRepositoryUpdateToJSON(
  benefitGitHubRepositoryUpdate: BenefitGitHubRepositoryUpdate,
): string {
  return JSON.stringify(
    BenefitGitHubRepositoryUpdate$outboundSchema.parse(
      benefitGitHubRepositoryUpdate,
    ),
  );
}

export function benefitGitHubRepositoryUpdateFromJSON(
  jsonString: string,
): SafeParseResult<BenefitGitHubRepositoryUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BenefitGitHubRepositoryUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BenefitGitHubRepositoryUpdate' from JSON`,
  );
}
