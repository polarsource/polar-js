/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ProductPriceOneTimeCustom,
  ProductPriceOneTimeCustom$inboundSchema,
  ProductPriceOneTimeCustom$Outbound,
  ProductPriceOneTimeCustom$outboundSchema,
} from "./productpriceonetimecustom.js";
import {
  ProductPriceOneTimeFixed,
  ProductPriceOneTimeFixed$inboundSchema,
  ProductPriceOneTimeFixed$Outbound,
  ProductPriceOneTimeFixed$outboundSchema,
} from "./productpriceonetimefixed.js";
import {
  ProductPriceOneTimeFree,
  ProductPriceOneTimeFree$inboundSchema,
  ProductPriceOneTimeFree$Outbound,
  ProductPriceOneTimeFree$outboundSchema,
} from "./productpriceonetimefree.js";

export type ProductPriceOneTime =
  | ProductPriceOneTimeFree
  | ProductPriceOneTimeFixed
  | ProductPriceOneTimeCustom;

/** @internal */
export const ProductPriceOneTime$inboundSchema: z.ZodType<
  ProductPriceOneTime,
  z.ZodTypeDef,
  unknown
> = z.union([
  ProductPriceOneTimeFree$inboundSchema,
  ProductPriceOneTimeFixed$inboundSchema,
  ProductPriceOneTimeCustom$inboundSchema,
]);

/** @internal */
export type ProductPriceOneTime$Outbound =
  | ProductPriceOneTimeFree$Outbound
  | ProductPriceOneTimeFixed$Outbound
  | ProductPriceOneTimeCustom$Outbound;

/** @internal */
export const ProductPriceOneTime$outboundSchema: z.ZodType<
  ProductPriceOneTime$Outbound,
  z.ZodTypeDef,
  ProductPriceOneTime
> = z.union([
  ProductPriceOneTimeFree$outboundSchema,
  ProductPriceOneTimeFixed$outboundSchema,
  ProductPriceOneTimeCustom$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPriceOneTime$ {
  /** @deprecated use `ProductPriceOneTime$inboundSchema` instead. */
  export const inboundSchema = ProductPriceOneTime$inboundSchema;
  /** @deprecated use `ProductPriceOneTime$outboundSchema` instead. */
  export const outboundSchema = ProductPriceOneTime$outboundSchema;
  /** @deprecated use `ProductPriceOneTime$Outbound` instead. */
  export type Outbound = ProductPriceOneTime$Outbound;
}

export function productPriceOneTimeToJSON(
  productPriceOneTime: ProductPriceOneTime,
): string {
  return JSON.stringify(
    ProductPriceOneTime$outboundSchema.parse(productPriceOneTime),
  );
}

export function productPriceOneTimeFromJSON(
  jsonString: string,
): SafeParseResult<ProductPriceOneTime, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProductPriceOneTime$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProductPriceOneTime' from JSON`,
  );
}
