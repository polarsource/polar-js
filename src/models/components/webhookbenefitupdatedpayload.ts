/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  BenefitAds,
  BenefitAds$inboundSchema,
  BenefitAds$Outbound,
  BenefitAds$outboundSchema,
} from "./benefitads.js";
import {
  BenefitArticles,
  BenefitArticles$inboundSchema,
  BenefitArticles$Outbound,
  BenefitArticles$outboundSchema,
} from "./benefitarticles.js";
import {
  BenefitCustom,
  BenefitCustom$inboundSchema,
  BenefitCustom$Outbound,
  BenefitCustom$outboundSchema,
} from "./benefitcustom.js";
import {
  BenefitDiscordInput,
  BenefitDiscordInput$inboundSchema,
  BenefitDiscordInput$Outbound,
  BenefitDiscordInput$outboundSchema,
} from "./benefitdiscordinput.js";
import {
  BenefitDownloadables,
  BenefitDownloadables$inboundSchema,
  BenefitDownloadables$Outbound,
  BenefitDownloadables$outboundSchema,
} from "./benefitdownloadables.js";
import {
  BenefitGitHubRepository,
  BenefitGitHubRepository$inboundSchema,
  BenefitGitHubRepository$Outbound,
  BenefitGitHubRepository$outboundSchema,
} from "./benefitgithubrepository.js";
import {
  BenefitLicenseKeysInput,
  BenefitLicenseKeysInput$inboundSchema,
  BenefitLicenseKeysInput$Outbound,
  BenefitLicenseKeysInput$outboundSchema,
} from "./benefitlicensekeysinput.js";

export const WebhookBenefitUpdatedPayloadType = {
  BenefitUpdated: "benefit.updated",
} as const;
export type WebhookBenefitUpdatedPayloadType = ClosedEnum<
  typeof WebhookBenefitUpdatedPayloadType
>;

export type WebhookBenefitUpdatedPayloadBenefit =
  | BenefitArticles
  | BenefitAds
  | BenefitDiscordInput
  | BenefitGitHubRepository
  | BenefitDownloadables
  | BenefitLicenseKeysInput
  | BenefitCustom;

/**
 * Sent when a benefit is updated.
 *
 * @remarks
 *
 * **Discord & Slack support:** Basic
 */
export type WebhookBenefitUpdatedPayload = {
  type?: "benefit.updated" | undefined;
  data:
    | BenefitArticles
    | BenefitAds
    | BenefitDiscordInput
    | BenefitGitHubRepository
    | BenefitDownloadables
    | BenefitLicenseKeysInput
    | BenefitCustom;
};

/** @internal */
export const WebhookBenefitUpdatedPayloadType$inboundSchema: z.ZodNativeEnum<
  typeof WebhookBenefitUpdatedPayloadType
> = z.nativeEnum(WebhookBenefitUpdatedPayloadType);

/** @internal */
export const WebhookBenefitUpdatedPayloadType$outboundSchema: z.ZodNativeEnum<
  typeof WebhookBenefitUpdatedPayloadType
> = WebhookBenefitUpdatedPayloadType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookBenefitUpdatedPayloadType$ {
  /** @deprecated use `WebhookBenefitUpdatedPayloadType$inboundSchema` instead. */
  export const inboundSchema = WebhookBenefitUpdatedPayloadType$inboundSchema;
  /** @deprecated use `WebhookBenefitUpdatedPayloadType$outboundSchema` instead. */
  export const outboundSchema = WebhookBenefitUpdatedPayloadType$outboundSchema;
}

/** @internal */
export const WebhookBenefitUpdatedPayloadBenefit$inboundSchema: z.ZodType<
  WebhookBenefitUpdatedPayloadBenefit,
  z.ZodTypeDef,
  unknown
> = z.union([
  BenefitArticles$inboundSchema,
  BenefitAds$inboundSchema,
  BenefitDiscordInput$inboundSchema,
  BenefitGitHubRepository$inboundSchema,
  BenefitDownloadables$inboundSchema,
  BenefitLicenseKeysInput$inboundSchema,
  BenefitCustom$inboundSchema,
]);

/** @internal */
export type WebhookBenefitUpdatedPayloadBenefit$Outbound =
  | BenefitArticles$Outbound
  | BenefitAds$Outbound
  | BenefitDiscordInput$Outbound
  | BenefitGitHubRepository$Outbound
  | BenefitDownloadables$Outbound
  | BenefitLicenseKeysInput$Outbound
  | BenefitCustom$Outbound;

/** @internal */
export const WebhookBenefitUpdatedPayloadBenefit$outboundSchema: z.ZodType<
  WebhookBenefitUpdatedPayloadBenefit$Outbound,
  z.ZodTypeDef,
  WebhookBenefitUpdatedPayloadBenefit
> = z.union([
  BenefitArticles$outboundSchema,
  BenefitAds$outboundSchema,
  BenefitDiscordInput$outboundSchema,
  BenefitGitHubRepository$outboundSchema,
  BenefitDownloadables$outboundSchema,
  BenefitLicenseKeysInput$outboundSchema,
  BenefitCustom$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookBenefitUpdatedPayloadBenefit$ {
  /** @deprecated use `WebhookBenefitUpdatedPayloadBenefit$inboundSchema` instead. */
  export const inboundSchema =
    WebhookBenefitUpdatedPayloadBenefit$inboundSchema;
  /** @deprecated use `WebhookBenefitUpdatedPayloadBenefit$outboundSchema` instead. */
  export const outboundSchema =
    WebhookBenefitUpdatedPayloadBenefit$outboundSchema;
  /** @deprecated use `WebhookBenefitUpdatedPayloadBenefit$Outbound` instead. */
  export type Outbound = WebhookBenefitUpdatedPayloadBenefit$Outbound;
}

/** @internal */
export const WebhookBenefitUpdatedPayload$inboundSchema: z.ZodType<
  WebhookBenefitUpdatedPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("benefit.updated").optional(),
  data: z.union([
    BenefitArticles$inboundSchema,
    BenefitAds$inboundSchema,
    BenefitDiscordInput$inboundSchema,
    BenefitGitHubRepository$inboundSchema,
    BenefitDownloadables$inboundSchema,
    BenefitLicenseKeysInput$inboundSchema,
    BenefitCustom$inboundSchema,
  ]),
});

/** @internal */
export type WebhookBenefitUpdatedPayload$Outbound = {
  type: "benefit.updated";
  data:
    | BenefitArticles$Outbound
    | BenefitAds$Outbound
    | BenefitDiscordInput$Outbound
    | BenefitGitHubRepository$Outbound
    | BenefitDownloadables$Outbound
    | BenefitLicenseKeysInput$Outbound
    | BenefitCustom$Outbound;
};

/** @internal */
export const WebhookBenefitUpdatedPayload$outboundSchema: z.ZodType<
  WebhookBenefitUpdatedPayload$Outbound,
  z.ZodTypeDef,
  WebhookBenefitUpdatedPayload
> = z.object({
  type: z.literal("benefit.updated").default("benefit.updated"),
  data: z.union([
    BenefitArticles$outboundSchema,
    BenefitAds$outboundSchema,
    BenefitDiscordInput$outboundSchema,
    BenefitGitHubRepository$outboundSchema,
    BenefitDownloadables$outboundSchema,
    BenefitLicenseKeysInput$outboundSchema,
    BenefitCustom$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookBenefitUpdatedPayload$ {
  /** @deprecated use `WebhookBenefitUpdatedPayload$inboundSchema` instead. */
  export const inboundSchema = WebhookBenefitUpdatedPayload$inboundSchema;
  /** @deprecated use `WebhookBenefitUpdatedPayload$outboundSchema` instead. */
  export const outboundSchema = WebhookBenefitUpdatedPayload$outboundSchema;
  /** @deprecated use `WebhookBenefitUpdatedPayload$Outbound` instead. */
  export type Outbound = WebhookBenefitUpdatedPayload$Outbound;
}
