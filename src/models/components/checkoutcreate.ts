/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CheckoutPriceCreate,
  CheckoutPriceCreate$inboundSchema,
  CheckoutPriceCreate$Outbound,
  CheckoutPriceCreate$outboundSchema,
} from "./checkoutpricecreate.js";
import {
  CheckoutProductCreate,
  CheckoutProductCreate$inboundSchema,
  CheckoutProductCreate$Outbound,
  CheckoutProductCreate$outboundSchema,
} from "./checkoutproductcreate.js";
import {
  CheckoutProductsCreate,
  CheckoutProductsCreate$inboundSchema,
  CheckoutProductsCreate$Outbound,
  CheckoutProductsCreate$outboundSchema,
} from "./checkoutproductscreate.js";

export type CheckoutCreate =
  | CheckoutProductsCreate
  | CheckoutProductCreate
  | CheckoutPriceCreate;

/** @internal */
export const CheckoutCreate$inboundSchema: z.ZodType<
  CheckoutCreate,
  z.ZodTypeDef,
  unknown
> = z.union([
  CheckoutProductsCreate$inboundSchema,
  CheckoutProductCreate$inboundSchema,
  CheckoutPriceCreate$inboundSchema,
]);

/** @internal */
export type CheckoutCreate$Outbound =
  | CheckoutProductsCreate$Outbound
  | CheckoutProductCreate$Outbound
  | CheckoutPriceCreate$Outbound;

/** @internal */
export const CheckoutCreate$outboundSchema: z.ZodType<
  CheckoutCreate$Outbound,
  z.ZodTypeDef,
  CheckoutCreate
> = z.union([
  CheckoutProductsCreate$outboundSchema,
  CheckoutProductCreate$outboundSchema,
  CheckoutPriceCreate$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutCreate$ {
  /** @deprecated use `CheckoutCreate$inboundSchema` instead. */
  export const inboundSchema = CheckoutCreate$inboundSchema;
  /** @deprecated use `CheckoutCreate$outboundSchema` instead. */
  export const outboundSchema = CheckoutCreate$outboundSchema;
  /** @deprecated use `CheckoutCreate$Outbound` instead. */
  export type Outbound = CheckoutCreate$Outbound;
}

export function checkoutCreateToJSON(checkoutCreate: CheckoutCreate): string {
  return JSON.stringify(CheckoutCreate$outboundSchema.parse(checkoutCreate));
}

export function checkoutCreateFromJSON(
  jsonString: string,
): SafeParseResult<CheckoutCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CheckoutCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CheckoutCreate' from JSON`,
  );
}
