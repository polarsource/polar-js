/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RepositoryProfileSettings = {
  /**
   * A description of the repository
   */
  description?: string | null | undefined;
  /**
   * A URL to a cover image
   */
  coverImageUrl?: string | null | undefined;
  /**
   * A list of featured organizations
   */
  featuredOrganizations?: Array<string> | null | undefined;
  /**
   * A list of highlighted subscription tiers
   */
  highlightedSubscriptionTiers?: Array<string> | null | undefined;
  /**
   * A list of links related to the repository
   */
  links?: Array<string> | null | undefined;
};

/** @internal */
export const RepositoryProfileSettings$inboundSchema: z.ZodType<
  RepositoryProfileSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  cover_image_url: z.nullable(z.string()).optional(),
  featured_organizations: z.nullable(z.array(z.string())).optional(),
  highlighted_subscription_tiers: z.nullable(z.array(z.string())).optional(),
  links: z.nullable(z.array(z.string())).optional(),
}).transform((v) => {
  return remap$(v, {
    "cover_image_url": "coverImageUrl",
    "featured_organizations": "featuredOrganizations",
    "highlighted_subscription_tiers": "highlightedSubscriptionTiers",
  });
});

/** @internal */
export type RepositoryProfileSettings$Outbound = {
  description?: string | null | undefined;
  cover_image_url?: string | null | undefined;
  featured_organizations?: Array<string> | null | undefined;
  highlighted_subscription_tiers?: Array<string> | null | undefined;
  links?: Array<string> | null | undefined;
};

/** @internal */
export const RepositoryProfileSettings$outboundSchema: z.ZodType<
  RepositoryProfileSettings$Outbound,
  z.ZodTypeDef,
  RepositoryProfileSettings
> = z.object({
  description: z.nullable(z.string()).optional(),
  coverImageUrl: z.nullable(z.string()).optional(),
  featuredOrganizations: z.nullable(z.array(z.string())).optional(),
  highlightedSubscriptionTiers: z.nullable(z.array(z.string())).optional(),
  links: z.nullable(z.array(z.string())).optional(),
}).transform((v) => {
  return remap$(v, {
    coverImageUrl: "cover_image_url",
    featuredOrganizations: "featured_organizations",
    highlightedSubscriptionTiers: "highlighted_subscription_tiers",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RepositoryProfileSettings$ {
  /** @deprecated use `RepositoryProfileSettings$inboundSchema` instead. */
  export const inboundSchema = RepositoryProfileSettings$inboundSchema;
  /** @deprecated use `RepositoryProfileSettings$outboundSchema` instead. */
  export const outboundSchema = RepositoryProfileSettings$outboundSchema;
  /** @deprecated use `RepositoryProfileSettings$Outbound` instead. */
  export type Outbound = RepositoryProfileSettings$Outbound;
}

export function repositoryProfileSettingsToJSON(
  repositoryProfileSettings: RepositoryProfileSettings,
): string {
  return JSON.stringify(
    RepositoryProfileSettings$outboundSchema.parse(repositoryProfileSettings),
  );
}

export function repositoryProfileSettingsFromJSON(
  jsonString: string,
): SafeParseResult<RepositoryProfileSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RepositoryProfileSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RepositoryProfileSettings' from JSON`,
  );
}
