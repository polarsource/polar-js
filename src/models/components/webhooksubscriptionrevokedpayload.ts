/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Subscription,
  Subscription$inboundSchema,
  Subscription$Outbound,
  Subscription$outboundSchema,
} from "./subscription.js";

export const WebhookSubscriptionRevokedPayloadType = {
  SubscriptionRevoked: "subscription.revoked",
} as const;
export type WebhookSubscriptionRevokedPayloadType = ClosedEnum<
  typeof WebhookSubscriptionRevokedPayloadType
>;

/**
 * Sent when a subscription is revoked, the user looses access immediately.
 *
 * @remarks
 * Happens when the subscription is canceled, or payment is past due.
 *
 * **Discord & Slack support:** Full
 */
export type WebhookSubscriptionRevokedPayload = {
  type?: "subscription.revoked" | undefined;
  data: Subscription;
};

/** @internal */
export const WebhookSubscriptionRevokedPayloadType$inboundSchema:
  z.ZodNativeEnum<typeof WebhookSubscriptionRevokedPayloadType> = z.nativeEnum(
    WebhookSubscriptionRevokedPayloadType,
  );

/** @internal */
export const WebhookSubscriptionRevokedPayloadType$outboundSchema:
  z.ZodNativeEnum<typeof WebhookSubscriptionRevokedPayloadType> =
    WebhookSubscriptionRevokedPayloadType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookSubscriptionRevokedPayloadType$ {
  /** @deprecated use `WebhookSubscriptionRevokedPayloadType$inboundSchema` instead. */
  export const inboundSchema =
    WebhookSubscriptionRevokedPayloadType$inboundSchema;
  /** @deprecated use `WebhookSubscriptionRevokedPayloadType$outboundSchema` instead. */
  export const outboundSchema =
    WebhookSubscriptionRevokedPayloadType$outboundSchema;
}

/** @internal */
export const WebhookSubscriptionRevokedPayload$inboundSchema: z.ZodType<
  WebhookSubscriptionRevokedPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("subscription.revoked").optional(),
  data: Subscription$inboundSchema,
});

/** @internal */
export type WebhookSubscriptionRevokedPayload$Outbound = {
  type: "subscription.revoked";
  data: Subscription$Outbound;
};

/** @internal */
export const WebhookSubscriptionRevokedPayload$outboundSchema: z.ZodType<
  WebhookSubscriptionRevokedPayload$Outbound,
  z.ZodTypeDef,
  WebhookSubscriptionRevokedPayload
> = z.object({
  type: z.literal("subscription.revoked").default("subscription.revoked"),
  data: Subscription$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookSubscriptionRevokedPayload$ {
  /** @deprecated use `WebhookSubscriptionRevokedPayload$inboundSchema` instead. */
  export const inboundSchema = WebhookSubscriptionRevokedPayload$inboundSchema;
  /** @deprecated use `WebhookSubscriptionRevokedPayload$outboundSchema` instead. */
  export const outboundSchema =
    WebhookSubscriptionRevokedPayload$outboundSchema;
  /** @deprecated use `WebhookSubscriptionRevokedPayload$Outbound` instead. */
  export type Outbound = WebhookSubscriptionRevokedPayload$Outbound;
}

export function webhookSubscriptionRevokedPayloadToJSON(
  webhookSubscriptionRevokedPayload: WebhookSubscriptionRevokedPayload,
): string {
  return JSON.stringify(
    WebhookSubscriptionRevokedPayload$outboundSchema.parse(
      webhookSubscriptionRevokedPayload,
    ),
  );
}

export function webhookSubscriptionRevokedPayloadFromJSON(
  jsonString: string,
): SafeParseResult<WebhookSubscriptionRevokedPayload, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookSubscriptionRevokedPayload$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookSubscriptionRevokedPayload' from JSON`,
  );
}
