/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const ProductPriceOneTimeCreateType = {
  OneTime: "one_time",
} as const;
export type ProductPriceOneTimeCreateType = ClosedEnum<
  typeof ProductPriceOneTimeCreateType
>;

/**
 * Schema to create a one-time product price.
 */
export type ProductPriceOneTimeCreate = {
  type?: "one_time" | undefined;
  /**
   * The price in cents.
   */
  priceAmount: number;
  /**
   * The currency. Currently, only `usd` is supported.
   */
  priceCurrency?: string | undefined;
};

/** @internal */
export const ProductPriceOneTimeCreateType$inboundSchema: z.ZodNativeEnum<
  typeof ProductPriceOneTimeCreateType
> = z.nativeEnum(ProductPriceOneTimeCreateType);

/** @internal */
export const ProductPriceOneTimeCreateType$outboundSchema: z.ZodNativeEnum<
  typeof ProductPriceOneTimeCreateType
> = ProductPriceOneTimeCreateType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPriceOneTimeCreateType$ {
  /** @deprecated use `ProductPriceOneTimeCreateType$inboundSchema` instead. */
  export const inboundSchema = ProductPriceOneTimeCreateType$inboundSchema;
  /** @deprecated use `ProductPriceOneTimeCreateType$outboundSchema` instead. */
  export const outboundSchema = ProductPriceOneTimeCreateType$outboundSchema;
}

/** @internal */
export const ProductPriceOneTimeCreate$inboundSchema: z.ZodType<
  ProductPriceOneTimeCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("one_time").optional(),
  price_amount: z.number().int(),
  price_currency: z.string().default("usd"),
}).transform((v) => {
  return remap$(v, {
    "price_amount": "priceAmount",
    "price_currency": "priceCurrency",
  });
});

/** @internal */
export type ProductPriceOneTimeCreate$Outbound = {
  type: "one_time";
  price_amount: number;
  price_currency: string;
};

/** @internal */
export const ProductPriceOneTimeCreate$outboundSchema: z.ZodType<
  ProductPriceOneTimeCreate$Outbound,
  z.ZodTypeDef,
  ProductPriceOneTimeCreate
> = z.object({
  type: z.literal("one_time").default("one_time"),
  priceAmount: z.number().int(),
  priceCurrency: z.string().default("usd"),
}).transform((v) => {
  return remap$(v, {
    priceAmount: "price_amount",
    priceCurrency: "price_currency",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPriceOneTimeCreate$ {
  /** @deprecated use `ProductPriceOneTimeCreate$inboundSchema` instead. */
  export const inboundSchema = ProductPriceOneTimeCreate$inboundSchema;
  /** @deprecated use `ProductPriceOneTimeCreate$outboundSchema` instead. */
  export const outboundSchema = ProductPriceOneTimeCreate$outboundSchema;
  /** @deprecated use `ProductPriceOneTimeCreate$Outbound` instead. */
  export type Outbound = ProductPriceOneTimeCreate$Outbound;
}
