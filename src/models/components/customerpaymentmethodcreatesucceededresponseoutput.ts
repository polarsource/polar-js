/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CustomerPaymentMethod,
  CustomerPaymentMethod$inboundSchema,
  CustomerPaymentMethod$Outbound,
  CustomerPaymentMethod$outboundSchema,
} from "./customerpaymentmethod.js";

export type CustomerPaymentMethodCreateSucceededResponseOutput = {
  status: "succeeded";
  paymentMethod: CustomerPaymentMethod;
};

/** @internal */
export const CustomerPaymentMethodCreateSucceededResponseOutput$inboundSchema:
  z.ZodType<
    CustomerPaymentMethodCreateSucceededResponseOutput,
    z.ZodTypeDef,
    unknown
  > = z.object({
    status: z.literal("succeeded"),
    payment_method: CustomerPaymentMethod$inboundSchema,
  }).transform((v) => {
    return remap$(v, {
      "payment_method": "paymentMethod",
    });
  });

/** @internal */
export type CustomerPaymentMethodCreateSucceededResponseOutput$Outbound = {
  status: "succeeded";
  payment_method: CustomerPaymentMethod$Outbound;
};

/** @internal */
export const CustomerPaymentMethodCreateSucceededResponseOutput$outboundSchema:
  z.ZodType<
    CustomerPaymentMethodCreateSucceededResponseOutput$Outbound,
    z.ZodTypeDef,
    CustomerPaymentMethodCreateSucceededResponseOutput
  > = z.object({
    status: z.literal("succeeded"),
    paymentMethod: CustomerPaymentMethod$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      paymentMethod: "payment_method",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerPaymentMethodCreateSucceededResponseOutput$ {
  /** @deprecated use `CustomerPaymentMethodCreateSucceededResponseOutput$inboundSchema` instead. */
  export const inboundSchema =
    CustomerPaymentMethodCreateSucceededResponseOutput$inboundSchema;
  /** @deprecated use `CustomerPaymentMethodCreateSucceededResponseOutput$outboundSchema` instead. */
  export const outboundSchema =
    CustomerPaymentMethodCreateSucceededResponseOutput$outboundSchema;
  /** @deprecated use `CustomerPaymentMethodCreateSucceededResponseOutput$Outbound` instead. */
  export type Outbound =
    CustomerPaymentMethodCreateSucceededResponseOutput$Outbound;
}

export function customerPaymentMethodCreateSucceededResponseOutputToJSON(
  customerPaymentMethodCreateSucceededResponseOutput:
    CustomerPaymentMethodCreateSucceededResponseOutput,
): string {
  return JSON.stringify(
    CustomerPaymentMethodCreateSucceededResponseOutput$outboundSchema.parse(
      customerPaymentMethodCreateSucceededResponseOutput,
    ),
  );
}

export function customerPaymentMethodCreateSucceededResponseOutputFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerPaymentMethodCreateSucceededResponseOutput,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerPaymentMethodCreateSucceededResponseOutput$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerPaymentMethodCreateSucceededResponseOutput' from JSON`,
  );
}
