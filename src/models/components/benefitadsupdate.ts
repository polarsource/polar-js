/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BenefitAdsProperties,
  BenefitAdsProperties$inboundSchema,
  BenefitAdsProperties$Outbound,
  BenefitAdsProperties$outboundSchema,
} from "./benefitadsproperties.js";

export const BenefitAdsUpdateType = {
  Ads: "ads",
} as const;
export type BenefitAdsUpdateType = ClosedEnum<typeof BenefitAdsUpdateType>;

export type BenefitAdsUpdate = {
  /**
   * The description of the benefit. Will be displayed on products having this benefit.
   */
  description?: string | null | undefined;
  type?: "ads" | undefined;
  properties?: BenefitAdsProperties | null | undefined;
};

/** @internal */
export const BenefitAdsUpdateType$inboundSchema: z.ZodNativeEnum<
  typeof BenefitAdsUpdateType
> = z.nativeEnum(BenefitAdsUpdateType);

/** @internal */
export const BenefitAdsUpdateType$outboundSchema: z.ZodNativeEnum<
  typeof BenefitAdsUpdateType
> = BenefitAdsUpdateType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitAdsUpdateType$ {
  /** @deprecated use `BenefitAdsUpdateType$inboundSchema` instead. */
  export const inboundSchema = BenefitAdsUpdateType$inboundSchema;
  /** @deprecated use `BenefitAdsUpdateType$outboundSchema` instead. */
  export const outboundSchema = BenefitAdsUpdateType$outboundSchema;
}

/** @internal */
export const BenefitAdsUpdate$inboundSchema: z.ZodType<
  BenefitAdsUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  type: z.literal("ads").optional(),
  properties: z.nullable(BenefitAdsProperties$inboundSchema).optional(),
});

/** @internal */
export type BenefitAdsUpdate$Outbound = {
  description?: string | null | undefined;
  type: "ads";
  properties?: BenefitAdsProperties$Outbound | null | undefined;
};

/** @internal */
export const BenefitAdsUpdate$outboundSchema: z.ZodType<
  BenefitAdsUpdate$Outbound,
  z.ZodTypeDef,
  BenefitAdsUpdate
> = z.object({
  description: z.nullable(z.string()).optional(),
  type: z.literal("ads").default("ads"),
  properties: z.nullable(BenefitAdsProperties$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitAdsUpdate$ {
  /** @deprecated use `BenefitAdsUpdate$inboundSchema` instead. */
  export const inboundSchema = BenefitAdsUpdate$inboundSchema;
  /** @deprecated use `BenefitAdsUpdate$outboundSchema` instead. */
  export const outboundSchema = BenefitAdsUpdate$outboundSchema;
  /** @deprecated use `BenefitAdsUpdate$Outbound` instead. */
  export type Outbound = BenefitAdsUpdate$Outbound;
}

export function benefitAdsUpdateToJSON(
  benefitAdsUpdate: BenefitAdsUpdate,
): string {
  return JSON.stringify(
    BenefitAdsUpdate$outboundSchema.parse(benefitAdsUpdate),
  );
}

export function benefitAdsUpdateFromJSON(
  jsonString: string,
): SafeParseResult<BenefitAdsUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BenefitAdsUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BenefitAdsUpdate' from JSON`,
  );
}
