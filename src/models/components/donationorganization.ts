/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type DonationOrganization = {
  id: string;
  platform?: "github" | undefined;
  name: string;
  avatarUrl: string;
  isPersonal: boolean;
};

/** @internal */
export const DonationOrganization$inboundSchema: z.ZodType<
  DonationOrganization,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  platform: z.literal("github").optional(),
  name: z.string(),
  avatar_url: z.string(),
  is_personal: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "avatar_url": "avatarUrl",
    "is_personal": "isPersonal",
  });
});

/** @internal */
export type DonationOrganization$Outbound = {
  id: string;
  platform: "github";
  name: string;
  avatar_url: string;
  is_personal: boolean;
};

/** @internal */
export const DonationOrganization$outboundSchema: z.ZodType<
  DonationOrganization$Outbound,
  z.ZodTypeDef,
  DonationOrganization
> = z.object({
  id: z.string(),
  platform: z.literal("github").default("github"),
  name: z.string(),
  avatarUrl: z.string(),
  isPersonal: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    avatarUrl: "avatar_url",
    isPersonal: "is_personal",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DonationOrganization$ {
  /** @deprecated use `DonationOrganization$inboundSchema` instead. */
  export const inboundSchema = DonationOrganization$inboundSchema;
  /** @deprecated use `DonationOrganization$outboundSchema` instead. */
  export const outboundSchema = DonationOrganization$outboundSchema;
  /** @deprecated use `DonationOrganization$Outbound` instead. */
  export type Outbound = DonationOrganization$Outbound;
}
