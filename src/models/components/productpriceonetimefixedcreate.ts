/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const ProductPriceOneTimeFixedCreateType = {
  OneTime: "one_time",
} as const;
export type ProductPriceOneTimeFixedCreateType = ClosedEnum<
  typeof ProductPriceOneTimeFixedCreateType
>;

/**
 * Schema to create a one-time product price.
 */
export type ProductPriceOneTimeFixedCreate = {
  type?: "one_time" | undefined;
  /**
   * The currency. Currently, only `usd` is supported.
   */
  priceCurrency?: string | undefined;
  /**
   * The price in cents.
   */
  priceAmount: number;
};

/** @internal */
export const ProductPriceOneTimeFixedCreateType$inboundSchema: z.ZodNativeEnum<
  typeof ProductPriceOneTimeFixedCreateType
> = z.nativeEnum(ProductPriceOneTimeFixedCreateType);

/** @internal */
export const ProductPriceOneTimeFixedCreateType$outboundSchema: z.ZodNativeEnum<
  typeof ProductPriceOneTimeFixedCreateType
> = ProductPriceOneTimeFixedCreateType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPriceOneTimeFixedCreateType$ {
  /** @deprecated use `ProductPriceOneTimeFixedCreateType$inboundSchema` instead. */
  export const inboundSchema = ProductPriceOneTimeFixedCreateType$inboundSchema;
  /** @deprecated use `ProductPriceOneTimeFixedCreateType$outboundSchema` instead. */
  export const outboundSchema =
    ProductPriceOneTimeFixedCreateType$outboundSchema;
}

/** @internal */
export const ProductPriceOneTimeFixedCreate$inboundSchema: z.ZodType<
  ProductPriceOneTimeFixedCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("one_time").optional(),
  price_currency: z.string().default("usd"),
  price_amount: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "price_currency": "priceCurrency",
    "price_amount": "priceAmount",
  });
});

/** @internal */
export type ProductPriceOneTimeFixedCreate$Outbound = {
  type: "one_time";
  price_currency: string;
  price_amount: number;
};

/** @internal */
export const ProductPriceOneTimeFixedCreate$outboundSchema: z.ZodType<
  ProductPriceOneTimeFixedCreate$Outbound,
  z.ZodTypeDef,
  ProductPriceOneTimeFixedCreate
> = z.object({
  type: z.literal("one_time").default("one_time"),
  priceCurrency: z.string().default("usd"),
  priceAmount: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    priceCurrency: "price_currency",
    priceAmount: "price_amount",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPriceOneTimeFixedCreate$ {
  /** @deprecated use `ProductPriceOneTimeFixedCreate$inboundSchema` instead. */
  export const inboundSchema = ProductPriceOneTimeFixedCreate$inboundSchema;
  /** @deprecated use `ProductPriceOneTimeFixedCreate$outboundSchema` instead. */
  export const outboundSchema = ProductPriceOneTimeFixedCreate$outboundSchema;
  /** @deprecated use `ProductPriceOneTimeFixedCreate$Outbound` instead. */
  export type Outbound = ProductPriceOneTimeFixedCreate$Outbound;
}
