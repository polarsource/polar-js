/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CustomerBenefitGrantDiscordPropertiesUpdate,
  CustomerBenefitGrantDiscordPropertiesUpdate$inboundSchema,
  CustomerBenefitGrantDiscordPropertiesUpdate$Outbound,
  CustomerBenefitGrantDiscordPropertiesUpdate$outboundSchema,
} from "./customerbenefitgrantdiscordpropertiesupdate.js";

export type CustomerBenefitGrantDiscordUpdate = {
  benefitType?: "discord" | undefined;
  properties: CustomerBenefitGrantDiscordPropertiesUpdate;
};

/** @internal */
export const CustomerBenefitGrantDiscordUpdate$inboundSchema: z.ZodType<
  CustomerBenefitGrantDiscordUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  benefit_type: z.literal("discord").optional(),
  properties: CustomerBenefitGrantDiscordPropertiesUpdate$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "benefit_type": "benefitType",
  });
});

/** @internal */
export type CustomerBenefitGrantDiscordUpdate$Outbound = {
  benefit_type: "discord";
  properties: CustomerBenefitGrantDiscordPropertiesUpdate$Outbound;
};

/** @internal */
export const CustomerBenefitGrantDiscordUpdate$outboundSchema: z.ZodType<
  CustomerBenefitGrantDiscordUpdate$Outbound,
  z.ZodTypeDef,
  CustomerBenefitGrantDiscordUpdate
> = z.object({
  benefitType: z.literal("discord").default("discord" as const),
  properties: CustomerBenefitGrantDiscordPropertiesUpdate$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    benefitType: "benefit_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerBenefitGrantDiscordUpdate$ {
  /** @deprecated use `CustomerBenefitGrantDiscordUpdate$inboundSchema` instead. */
  export const inboundSchema = CustomerBenefitGrantDiscordUpdate$inboundSchema;
  /** @deprecated use `CustomerBenefitGrantDiscordUpdate$outboundSchema` instead. */
  export const outboundSchema =
    CustomerBenefitGrantDiscordUpdate$outboundSchema;
  /** @deprecated use `CustomerBenefitGrantDiscordUpdate$Outbound` instead. */
  export type Outbound = CustomerBenefitGrantDiscordUpdate$Outbound;
}

export function customerBenefitGrantDiscordUpdateToJSON(
  customerBenefitGrantDiscordUpdate: CustomerBenefitGrantDiscordUpdate,
): string {
  return JSON.stringify(
    CustomerBenefitGrantDiscordUpdate$outboundSchema.parse(
      customerBenefitGrantDiscordUpdate,
    ),
  );
}

export function customerBenefitGrantDiscordUpdateFromJSON(
  jsonString: string,
): SafeParseResult<CustomerBenefitGrantDiscordUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomerBenefitGrantDiscordUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomerBenefitGrantDiscordUpdate' from JSON`,
  );
}
