/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const CustomerCancellationReason = {
  CustomerService: "customer_service",
  LowQuality: "low_quality",
  MissingFeatures: "missing_features",
  SwitchedService: "switched_service",
  TooComplex: "too_complex",
  TooExpensive: "too_expensive",
  Unused: "unused",
  Other: "other",
} as const;
export type CustomerCancellationReason = ClosedEnum<
  typeof CustomerCancellationReason
>;

/** @internal */
export const CustomerCancellationReason$inboundSchema: z.ZodNativeEnum<
  typeof CustomerCancellationReason
> = z.nativeEnum(CustomerCancellationReason);

/** @internal */
export const CustomerCancellationReason$outboundSchema: z.ZodNativeEnum<
  typeof CustomerCancellationReason
> = CustomerCancellationReason$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerCancellationReason$ {
  /** @deprecated use `CustomerCancellationReason$inboundSchema` instead. */
  export const inboundSchema = CustomerCancellationReason$inboundSchema;
  /** @deprecated use `CustomerCancellationReason$outboundSchema` instead. */
  export const outboundSchema = CustomerCancellationReason$outboundSchema;
}
