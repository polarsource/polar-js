/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  ProductPriceOneTime,
  ProductPriceOneTime$inboundSchema,
  ProductPriceOneTime$Outbound,
  ProductPriceOneTime$outboundSchema,
} from "./productpriceonetime.js";
import {
  ProductPriceRecurring,
  ProductPriceRecurring$inboundSchema,
  ProductPriceRecurring$Outbound,
  ProductPriceRecurring$outboundSchema,
} from "./productpricerecurring.js";

export type ProductPrice = ProductPriceRecurring | ProductPriceOneTime;

/** @internal */
export const ProductPrice$inboundSchema: z.ZodType<
  ProductPrice,
  z.ZodTypeDef,
  unknown
> = z.union([
  ProductPriceRecurring$inboundSchema,
  ProductPriceOneTime$inboundSchema,
]);

/** @internal */
export type ProductPrice$Outbound =
  | ProductPriceRecurring$Outbound
  | ProductPriceOneTime$Outbound;

/** @internal */
export const ProductPrice$outboundSchema: z.ZodType<
  ProductPrice$Outbound,
  z.ZodTypeDef,
  ProductPrice
> = z.union([
  ProductPriceRecurring$outboundSchema,
  ProductPriceOneTime$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPrice$ {
  /** @deprecated use `ProductPrice$inboundSchema` instead. */
  export const inboundSchema = ProductPrice$inboundSchema;
  /** @deprecated use `ProductPrice$outboundSchema` instead. */
  export const outboundSchema = ProductPrice$outboundSchema;
  /** @deprecated use `ProductPrice$Outbound` instead. */
  export type Outbound = ProductPrice$Outbound;
}
