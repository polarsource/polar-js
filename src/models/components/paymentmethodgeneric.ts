/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PaymentProcessor,
  PaymentProcessor$inboundSchema,
  PaymentProcessor$outboundSchema,
} from "./paymentprocessor.js";

export type PaymentMethodGeneric = {
  /**
   * The ID of the object.
   */
  id: string;
  /**
   * Creation timestamp of the object.
   */
  createdAt: Date;
  /**
   * Last modification timestamp of the object.
   */
  modifiedAt: Date | null;
  processor: PaymentProcessor;
  customerId: string;
  type: string;
};

/** @internal */
export const PaymentMethodGeneric$inboundSchema: z.ZodType<
  PaymentMethodGeneric,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  modified_at: z.nullable(
    z.string().datetime({ offset: true }).transform(v => new Date(v)),
  ),
  processor: PaymentProcessor$inboundSchema,
  customer_id: z.string(),
  type: z.string(),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
    "modified_at": "modifiedAt",
    "customer_id": "customerId",
  });
});

/** @internal */
export type PaymentMethodGeneric$Outbound = {
  id: string;
  created_at: string;
  modified_at: string | null;
  processor: string;
  customer_id: string;
  type: string;
};

/** @internal */
export const PaymentMethodGeneric$outboundSchema: z.ZodType<
  PaymentMethodGeneric$Outbound,
  z.ZodTypeDef,
  PaymentMethodGeneric
> = z.object({
  id: z.string(),
  createdAt: z.date().transform(v => v.toISOString()),
  modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
  processor: PaymentProcessor$outboundSchema,
  customerId: z.string(),
  type: z.string(),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    modifiedAt: "modified_at",
    customerId: "customer_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PaymentMethodGeneric$ {
  /** @deprecated use `PaymentMethodGeneric$inboundSchema` instead. */
  export const inboundSchema = PaymentMethodGeneric$inboundSchema;
  /** @deprecated use `PaymentMethodGeneric$outboundSchema` instead. */
  export const outboundSchema = PaymentMethodGeneric$outboundSchema;
  /** @deprecated use `PaymentMethodGeneric$Outbound` instead. */
  export type Outbound = PaymentMethodGeneric$Outbound;
}

export function paymentMethodGenericToJSON(
  paymentMethodGeneric: PaymentMethodGeneric,
): string {
  return JSON.stringify(
    PaymentMethodGeneric$outboundSchema.parse(paymentMethodGeneric),
  );
}

export function paymentMethodGenericFromJSON(
  jsonString: string,
): SafeParseResult<PaymentMethodGeneric, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PaymentMethodGeneric$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PaymentMethodGeneric' from JSON`,
  );
}
