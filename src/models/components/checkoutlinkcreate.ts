/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Payment processor to use. Currently only Stripe is supported.
 */
export const CheckoutLinkCreatePaymentProcessor = {
  Stripe: "stripe",
} as const;
/**
 * Payment processor to use. Currently only Stripe is supported.
 */
export type CheckoutLinkCreatePaymentProcessor = ClosedEnum<
  typeof CheckoutLinkCreatePaymentProcessor
>;

/**
 * Schema to create a new checkout link.
 */
export type CheckoutLinkCreate = {
  /**
   * Key-value object allowing you to store additional information.
   *
   * @remarks
   *
   * The key must be a string with a maximum length of **40 characters**.
   * The value must be a string with a maximum length of **500 characters**.
   * You can store up to **50 key-value pairs**.
   */
  metadata?: { [k: string]: string } | undefined;
  /**
   * Payment processor to use. Currently only Stripe is supported.
   */
  paymentProcessor?: "stripe" | undefined;
  /**
   * ID of the product price to checkout.
   */
  productPriceId: string;
  /**
   * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.
   */
  successUrl?: string | null | undefined;
};

/** @internal */
export const CheckoutLinkCreatePaymentProcessor$inboundSchema: z.ZodNativeEnum<
  typeof CheckoutLinkCreatePaymentProcessor
> = z.nativeEnum(CheckoutLinkCreatePaymentProcessor);

/** @internal */
export const CheckoutLinkCreatePaymentProcessor$outboundSchema: z.ZodNativeEnum<
  typeof CheckoutLinkCreatePaymentProcessor
> = CheckoutLinkCreatePaymentProcessor$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutLinkCreatePaymentProcessor$ {
  /** @deprecated use `CheckoutLinkCreatePaymentProcessor$inboundSchema` instead. */
  export const inboundSchema = CheckoutLinkCreatePaymentProcessor$inboundSchema;
  /** @deprecated use `CheckoutLinkCreatePaymentProcessor$outboundSchema` instead. */
  export const outboundSchema =
    CheckoutLinkCreatePaymentProcessor$outboundSchema;
}

/** @internal */
export const CheckoutLinkCreate$inboundSchema: z.ZodType<
  CheckoutLinkCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  metadata: z.record(z.string()).optional(),
  payment_processor: z.literal("stripe").optional(),
  product_price_id: z.string(),
  success_url: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "payment_processor": "paymentProcessor",
    "product_price_id": "productPriceId",
    "success_url": "successUrl",
  });
});

/** @internal */
export type CheckoutLinkCreate$Outbound = {
  metadata?: { [k: string]: string } | undefined;
  payment_processor: "stripe";
  product_price_id: string;
  success_url?: string | null | undefined;
};

/** @internal */
export const CheckoutLinkCreate$outboundSchema: z.ZodType<
  CheckoutLinkCreate$Outbound,
  z.ZodTypeDef,
  CheckoutLinkCreate
> = z.object({
  metadata: z.record(z.string()).optional(),
  paymentProcessor: z.literal("stripe").default("stripe"),
  productPriceId: z.string(),
  successUrl: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    paymentProcessor: "payment_processor",
    productPriceId: "product_price_id",
    successUrl: "success_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckoutLinkCreate$ {
  /** @deprecated use `CheckoutLinkCreate$inboundSchema` instead. */
  export const inboundSchema = CheckoutLinkCreate$inboundSchema;
  /** @deprecated use `CheckoutLinkCreate$outboundSchema` instead. */
  export const outboundSchema = CheckoutLinkCreate$outboundSchema;
  /** @deprecated use `CheckoutLinkCreate$Outbound` instead. */
  export type Outbound = CheckoutLinkCreate$Outbound;
}
