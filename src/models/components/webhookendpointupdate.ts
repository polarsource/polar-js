/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  WebhookEventType,
  WebhookEventType$inboundSchema,
  WebhookEventType$outboundSchema,
} from "./webhookeventtype.js";
import {
  WebhookFormat,
  WebhookFormat$inboundSchema,
  WebhookFormat$outboundSchema,
} from "./webhookformat.js";

/**
 * Schema to update a webhook endpoint.
 */
export type WebhookEndpointUpdate = {
  url?: string | null | undefined;
  /**
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  secret?: string | null | undefined;
  format?: WebhookFormat | null | undefined;
  events?: Array<WebhookEventType> | null | undefined;
};

/** @internal */
export const WebhookEndpointUpdate$inboundSchema: z.ZodType<
  WebhookEndpointUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.nullable(z.string()).optional(),
  secret: z.nullable(z.string()).optional(),
  format: z.nullable(WebhookFormat$inboundSchema).optional(),
  events: z.nullable(z.array(WebhookEventType$inboundSchema)).optional(),
});

/** @internal */
export type WebhookEndpointUpdate$Outbound = {
  url?: string | null | undefined;
  secret?: string | null | undefined;
  format?: string | null | undefined;
  events?: Array<string> | null | undefined;
};

/** @internal */
export const WebhookEndpointUpdate$outboundSchema: z.ZodType<
  WebhookEndpointUpdate$Outbound,
  z.ZodTypeDef,
  WebhookEndpointUpdate
> = z.object({
  url: z.nullable(z.string()).optional(),
  secret: z.nullable(z.string()).optional(),
  format: z.nullable(WebhookFormat$outboundSchema).optional(),
  events: z.nullable(z.array(WebhookEventType$outboundSchema)).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookEndpointUpdate$ {
  /** @deprecated use `WebhookEndpointUpdate$inboundSchema` instead. */
  export const inboundSchema = WebhookEndpointUpdate$inboundSchema;
  /** @deprecated use `WebhookEndpointUpdate$outboundSchema` instead. */
  export const outboundSchema = WebhookEndpointUpdate$outboundSchema;
  /** @deprecated use `WebhookEndpointUpdate$Outbound` instead. */
  export type Outbound = WebhookEndpointUpdate$Outbound;
}

export function webhookEndpointUpdateToJSON(
  webhookEndpointUpdate: WebhookEndpointUpdate,
): string {
  return JSON.stringify(
    WebhookEndpointUpdate$outboundSchema.parse(webhookEndpointUpdate),
  );
}

export function webhookEndpointUpdateFromJSON(
  jsonString: string,
): SafeParseResult<WebhookEndpointUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookEndpointUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookEndpointUpdate' from JSON`,
  );
}
