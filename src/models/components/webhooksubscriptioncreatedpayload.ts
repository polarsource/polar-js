/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  SubscriptionInput,
  SubscriptionInput$inboundSchema,
  SubscriptionInput$Outbound,
  SubscriptionInput$outboundSchema,
} from "./subscriptioninput.js";

export const WebhookSubscriptionCreatedPayloadType = {
  SubscriptionCreated: "subscription.created",
} as const;
export type WebhookSubscriptionCreatedPayloadType = ClosedEnum<
  typeof WebhookSubscriptionCreatedPayloadType
>;

/**
 * Sent when a new subscription is created.
 *
 * @remarks
 *
 * **Discord & Slack support:** Full
 */
export type WebhookSubscriptionCreatedPayload = {
  type?: "subscription.created" | undefined;
  data: SubscriptionInput;
};

/** @internal */
export const WebhookSubscriptionCreatedPayloadType$inboundSchema:
  z.ZodNativeEnum<typeof WebhookSubscriptionCreatedPayloadType> = z.nativeEnum(
    WebhookSubscriptionCreatedPayloadType,
  );

/** @internal */
export const WebhookSubscriptionCreatedPayloadType$outboundSchema:
  z.ZodNativeEnum<typeof WebhookSubscriptionCreatedPayloadType> =
    WebhookSubscriptionCreatedPayloadType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookSubscriptionCreatedPayloadType$ {
  /** @deprecated use `WebhookSubscriptionCreatedPayloadType$inboundSchema` instead. */
  export const inboundSchema =
    WebhookSubscriptionCreatedPayloadType$inboundSchema;
  /** @deprecated use `WebhookSubscriptionCreatedPayloadType$outboundSchema` instead. */
  export const outboundSchema =
    WebhookSubscriptionCreatedPayloadType$outboundSchema;
}

/** @internal */
export const WebhookSubscriptionCreatedPayload$inboundSchema: z.ZodType<
  WebhookSubscriptionCreatedPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("subscription.created").optional(),
  data: SubscriptionInput$inboundSchema,
});

/** @internal */
export type WebhookSubscriptionCreatedPayload$Outbound = {
  type: "subscription.created";
  data: SubscriptionInput$Outbound;
};

/** @internal */
export const WebhookSubscriptionCreatedPayload$outboundSchema: z.ZodType<
  WebhookSubscriptionCreatedPayload$Outbound,
  z.ZodTypeDef,
  WebhookSubscriptionCreatedPayload
> = z.object({
  type: z.literal("subscription.created").default("subscription.created"),
  data: SubscriptionInput$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookSubscriptionCreatedPayload$ {
  /** @deprecated use `WebhookSubscriptionCreatedPayload$inboundSchema` instead. */
  export const inboundSchema = WebhookSubscriptionCreatedPayload$inboundSchema;
  /** @deprecated use `WebhookSubscriptionCreatedPayload$outboundSchema` instead. */
  export const outboundSchema =
    WebhookSubscriptionCreatedPayload$outboundSchema;
  /** @deprecated use `WebhookSubscriptionCreatedPayload$Outbound` instead. */
  export type Outbound = WebhookSubscriptionCreatedPayload$Outbound;
}
