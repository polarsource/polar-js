/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Order's invoice data.
 */
export type CustomerOrderInvoice = {
  /**
   * The URL to the invoice.
   */
  url: string;
};

/** @internal */
export const CustomerOrderInvoice$inboundSchema: z.ZodType<
  CustomerOrderInvoice,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
});

/** @internal */
export type CustomerOrderInvoice$Outbound = {
  url: string;
};

/** @internal */
export const CustomerOrderInvoice$outboundSchema: z.ZodType<
  CustomerOrderInvoice$Outbound,
  z.ZodTypeDef,
  CustomerOrderInvoice
> = z.object({
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerOrderInvoice$ {
  /** @deprecated use `CustomerOrderInvoice$inboundSchema` instead. */
  export const inboundSchema = CustomerOrderInvoice$inboundSchema;
  /** @deprecated use `CustomerOrderInvoice$outboundSchema` instead. */
  export const outboundSchema = CustomerOrderInvoice$outboundSchema;
  /** @deprecated use `CustomerOrderInvoice$Outbound` instead. */
  export type Outbound = CustomerOrderInvoice$Outbound;
}

export function customerOrderInvoiceToJSON(
  customerOrderInvoice: CustomerOrderInvoice,
): string {
  return JSON.stringify(
    CustomerOrderInvoice$outboundSchema.parse(customerOrderInvoice),
  );
}

export function customerOrderInvoiceFromJSON(
  jsonString: string,
): SafeParseResult<CustomerOrderInvoice, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomerOrderInvoice$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomerOrderInvoice' from JSON`,
  );
}
