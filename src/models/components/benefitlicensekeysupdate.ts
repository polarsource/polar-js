/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BenefitLicenseKeysCreateProperties,
  BenefitLicenseKeysCreateProperties$inboundSchema,
  BenefitLicenseKeysCreateProperties$Outbound,
  BenefitLicenseKeysCreateProperties$outboundSchema,
} from "./benefitlicensekeyscreateproperties.js";

export type BenefitLicenseKeysUpdate = {
  /**
   * The description of the benefit. Will be displayed on products having this benefit.
   */
  description?: string | null | undefined;
  type?: "license_keys" | undefined;
  properties?: BenefitLicenseKeysCreateProperties | null | undefined;
};

/** @internal */
export const BenefitLicenseKeysUpdate$inboundSchema: z.ZodType<
  BenefitLicenseKeysUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  type: z.literal("license_keys").optional(),
  properties: z.nullable(BenefitLicenseKeysCreateProperties$inboundSchema)
    .optional(),
});

/** @internal */
export type BenefitLicenseKeysUpdate$Outbound = {
  description?: string | null | undefined;
  type: "license_keys";
  properties?: BenefitLicenseKeysCreateProperties$Outbound | null | undefined;
};

/** @internal */
export const BenefitLicenseKeysUpdate$outboundSchema: z.ZodType<
  BenefitLicenseKeysUpdate$Outbound,
  z.ZodTypeDef,
  BenefitLicenseKeysUpdate
> = z.object({
  description: z.nullable(z.string()).optional(),
  type: z.literal("license_keys").default("license_keys" as const),
  properties: z.nullable(BenefitLicenseKeysCreateProperties$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitLicenseKeysUpdate$ {
  /** @deprecated use `BenefitLicenseKeysUpdate$inboundSchema` instead. */
  export const inboundSchema = BenefitLicenseKeysUpdate$inboundSchema;
  /** @deprecated use `BenefitLicenseKeysUpdate$outboundSchema` instead. */
  export const outboundSchema = BenefitLicenseKeysUpdate$outboundSchema;
  /** @deprecated use `BenefitLicenseKeysUpdate$Outbound` instead. */
  export type Outbound = BenefitLicenseKeysUpdate$Outbound;
}

export function benefitLicenseKeysUpdateToJSON(
  benefitLicenseKeysUpdate: BenefitLicenseKeysUpdate,
): string {
  return JSON.stringify(
    BenefitLicenseKeysUpdate$outboundSchema.parse(benefitLicenseKeysUpdate),
  );
}

export function benefitLicenseKeysUpdateFromJSON(
  jsonString: string,
): SafeParseResult<BenefitLicenseKeysUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BenefitLicenseKeysUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BenefitLicenseKeysUpdate' from JSON`,
  );
}
