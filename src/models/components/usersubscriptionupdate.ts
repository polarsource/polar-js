/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type UserSubscriptionUpdate = {
  productPriceId: string;
};

/** @internal */
export const UserSubscriptionUpdate$inboundSchema: z.ZodType<
  UserSubscriptionUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  product_price_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "product_price_id": "productPriceId",
  });
});

/** @internal */
export type UserSubscriptionUpdate$Outbound = {
  product_price_id: string;
};

/** @internal */
export const UserSubscriptionUpdate$outboundSchema: z.ZodType<
  UserSubscriptionUpdate$Outbound,
  z.ZodTypeDef,
  UserSubscriptionUpdate
> = z.object({
  productPriceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    productPriceId: "product_price_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserSubscriptionUpdate$ {
  /** @deprecated use `UserSubscriptionUpdate$inboundSchema` instead. */
  export const inboundSchema = UserSubscriptionUpdate$inboundSchema;
  /** @deprecated use `UserSubscriptionUpdate$outboundSchema` instead. */
  export const outboundSchema = UserSubscriptionUpdate$outboundSchema;
  /** @deprecated use `UserSubscriptionUpdate$Outbound` instead. */
  export type Outbound = UserSubscriptionUpdate$Outbound;
}
