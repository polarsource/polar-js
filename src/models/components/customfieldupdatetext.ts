/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  CustomFieldTextProperties,
  CustomFieldTextProperties$inboundSchema,
  CustomFieldTextProperties$Outbound,
  CustomFieldTextProperties$outboundSchema,
} from "./customfieldtextproperties.js";

export const CustomFieldUpdateTextType = {
  Text: "text",
} as const;
export type CustomFieldUpdateTextType = ClosedEnum<
  typeof CustomFieldUpdateTextType
>;

/**
 * Schema to update a custom field of type text.
 */
export type CustomFieldUpdateText = {
  /**
   * Key-value object allowing you to store additional information.
   *
   * @remarks
   *
   * The key must be a string with a maximum length of **40 characters**.
   * The value must be a string with a maximum length of **500 characters**.
   * You can store up to **50 key-value pairs**.
   */
  metadata?: { [k: string]: string } | null | undefined;
  name?: string | null | undefined;
  slug?: string | null | undefined;
  type?: "text" | undefined;
  properties?: CustomFieldTextProperties | null | undefined;
};

/** @internal */
export const CustomFieldUpdateTextType$inboundSchema: z.ZodNativeEnum<
  typeof CustomFieldUpdateTextType
> = z.nativeEnum(CustomFieldUpdateTextType);

/** @internal */
export const CustomFieldUpdateTextType$outboundSchema: z.ZodNativeEnum<
  typeof CustomFieldUpdateTextType
> = CustomFieldUpdateTextType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFieldUpdateTextType$ {
  /** @deprecated use `CustomFieldUpdateTextType$inboundSchema` instead. */
  export const inboundSchema = CustomFieldUpdateTextType$inboundSchema;
  /** @deprecated use `CustomFieldUpdateTextType$outboundSchema` instead. */
  export const outboundSchema = CustomFieldUpdateTextType$outboundSchema;
}

/** @internal */
export const CustomFieldUpdateText$inboundSchema: z.ZodType<
  CustomFieldUpdateText,
  z.ZodTypeDef,
  unknown
> = z.object({
  metadata: z.nullable(z.record(z.string())).optional(),
  name: z.nullable(z.string()).optional(),
  slug: z.nullable(z.string()).optional(),
  type: z.literal("text").optional(),
  properties: z.nullable(CustomFieldTextProperties$inboundSchema).optional(),
});

/** @internal */
export type CustomFieldUpdateText$Outbound = {
  metadata?: { [k: string]: string } | null | undefined;
  name?: string | null | undefined;
  slug?: string | null | undefined;
  type: "text";
  properties?: CustomFieldTextProperties$Outbound | null | undefined;
};

/** @internal */
export const CustomFieldUpdateText$outboundSchema: z.ZodType<
  CustomFieldUpdateText$Outbound,
  z.ZodTypeDef,
  CustomFieldUpdateText
> = z.object({
  metadata: z.nullable(z.record(z.string())).optional(),
  name: z.nullable(z.string()).optional(),
  slug: z.nullable(z.string()).optional(),
  type: z.literal("text").default("text"),
  properties: z.nullable(CustomFieldTextProperties$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFieldUpdateText$ {
  /** @deprecated use `CustomFieldUpdateText$inboundSchema` instead. */
  export const inboundSchema = CustomFieldUpdateText$inboundSchema;
  /** @deprecated use `CustomFieldUpdateText$outboundSchema` instead. */
  export const outboundSchema = CustomFieldUpdateText$outboundSchema;
  /** @deprecated use `CustomFieldUpdateText$Outbound` instead. */
  export type Outbound = CustomFieldUpdateText$Outbound;
}
