/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  BenefitDownloadablesCreateProperties,
  BenefitDownloadablesCreateProperties$inboundSchema,
  BenefitDownloadablesCreateProperties$Outbound,
  BenefitDownloadablesCreateProperties$outboundSchema,
} from "./benefitdownloadablescreateproperties.js";

export type BenefitDownloadablesUpdate = {
  /**
   * The description of the benefit. Will be displayed on products having this benefit.
   */
  description?: string | null | undefined;
  type?: "downloadables" | undefined;
  properties?: BenefitDownloadablesCreateProperties | null | undefined;
};

/** @internal */
export const BenefitDownloadablesUpdate$inboundSchema: z.ZodType<
  BenefitDownloadablesUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  type: z.literal("downloadables").optional(),
  properties: z.nullable(BenefitDownloadablesCreateProperties$inboundSchema)
    .optional(),
});

/** @internal */
export type BenefitDownloadablesUpdate$Outbound = {
  description?: string | null | undefined;
  type: "downloadables";
  properties?: BenefitDownloadablesCreateProperties$Outbound | null | undefined;
};

/** @internal */
export const BenefitDownloadablesUpdate$outboundSchema: z.ZodType<
  BenefitDownloadablesUpdate$Outbound,
  z.ZodTypeDef,
  BenefitDownloadablesUpdate
> = z.object({
  description: z.nullable(z.string()).optional(),
  type: z.literal("downloadables").default("downloadables" as const),
  properties: z.nullable(BenefitDownloadablesCreateProperties$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitDownloadablesUpdate$ {
  /** @deprecated use `BenefitDownloadablesUpdate$inboundSchema` instead. */
  export const inboundSchema = BenefitDownloadablesUpdate$inboundSchema;
  /** @deprecated use `BenefitDownloadablesUpdate$outboundSchema` instead. */
  export const outboundSchema = BenefitDownloadablesUpdate$outboundSchema;
  /** @deprecated use `BenefitDownloadablesUpdate$Outbound` instead. */
  export type Outbound = BenefitDownloadablesUpdate$Outbound;
}

export function benefitDownloadablesUpdateToJSON(
  benefitDownloadablesUpdate: BenefitDownloadablesUpdate,
): string {
  return JSON.stringify(
    BenefitDownloadablesUpdate$outboundSchema.parse(benefitDownloadablesUpdate),
  );
}

export function benefitDownloadablesUpdateFromJSON(
  jsonString: string,
): SafeParseResult<BenefitDownloadablesUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BenefitDownloadablesUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BenefitDownloadablesUpdate' from JSON`,
  );
}
