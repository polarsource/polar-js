/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CustomerUpdatedFields,
  CustomerUpdatedFields$inboundSchema,
  CustomerUpdatedFields$Outbound,
  CustomerUpdatedFields$outboundSchema,
} from "./customerupdatedfields.js";

export type CustomerUpdatedMetadata = {
  customerId: string;
  customerEmail: string;
  customerName: string | null;
  customerExternalId: string | null;
  updatedFields: CustomerUpdatedFields;
};

/** @internal */
export const CustomerUpdatedMetadata$inboundSchema: z.ZodType<
  CustomerUpdatedMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  customer_id: z.string(),
  customer_email: z.string(),
  customer_name: z.nullable(z.string()),
  customer_external_id: z.nullable(z.string()),
  updated_fields: CustomerUpdatedFields$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "customer_id": "customerId",
    "customer_email": "customerEmail",
    "customer_name": "customerName",
    "customer_external_id": "customerExternalId",
    "updated_fields": "updatedFields",
  });
});

/** @internal */
export type CustomerUpdatedMetadata$Outbound = {
  customer_id: string;
  customer_email: string;
  customer_name: string | null;
  customer_external_id: string | null;
  updated_fields: CustomerUpdatedFields$Outbound;
};

/** @internal */
export const CustomerUpdatedMetadata$outboundSchema: z.ZodType<
  CustomerUpdatedMetadata$Outbound,
  z.ZodTypeDef,
  CustomerUpdatedMetadata
> = z.object({
  customerId: z.string(),
  customerEmail: z.string(),
  customerName: z.nullable(z.string()),
  customerExternalId: z.nullable(z.string()),
  updatedFields: CustomerUpdatedFields$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    customerId: "customer_id",
    customerEmail: "customer_email",
    customerName: "customer_name",
    customerExternalId: "customer_external_id",
    updatedFields: "updated_fields",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerUpdatedMetadata$ {
  /** @deprecated use `CustomerUpdatedMetadata$inboundSchema` instead. */
  export const inboundSchema = CustomerUpdatedMetadata$inboundSchema;
  /** @deprecated use `CustomerUpdatedMetadata$outboundSchema` instead. */
  export const outboundSchema = CustomerUpdatedMetadata$outboundSchema;
  /** @deprecated use `CustomerUpdatedMetadata$Outbound` instead. */
  export type Outbound = CustomerUpdatedMetadata$Outbound;
}

export function customerUpdatedMetadataToJSON(
  customerUpdatedMetadata: CustomerUpdatedMetadata,
): string {
  return JSON.stringify(
    CustomerUpdatedMetadata$outboundSchema.parse(customerUpdatedMetadata),
  );
}

export function customerUpdatedMetadataFromJSON(
  jsonString: string,
): SafeParseResult<CustomerUpdatedMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomerUpdatedMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomerUpdatedMetadata' from JSON`,
  );
}
