/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  CustomFieldCheckboxProperties,
  CustomFieldCheckboxProperties$inboundSchema,
  CustomFieldCheckboxProperties$Outbound,
  CustomFieldCheckboxProperties$outboundSchema,
} from "./customfieldcheckboxproperties.js";

export const CustomFieldUpdateCheckboxType = {
  Checkbox: "checkbox",
} as const;
export type CustomFieldUpdateCheckboxType = ClosedEnum<
  typeof CustomFieldUpdateCheckboxType
>;

/**
 * Schema to update a custom field of type checkbox.
 */
export type CustomFieldUpdateCheckbox = {
  /**
   * Key-value object allowing you to store additional information.
   *
   * @remarks
   *
   * The key must be a string with a maximum length of **40 characters**.
   * The value must be a string with a maximum length of **500 characters**.
   * You can store up to **50 key-value pairs**.
   */
  metadata?: { [k: string]: string } | null | undefined;
  name?: string | null | undefined;
  slug?: string | null | undefined;
  type?: "checkbox" | undefined;
  properties?: CustomFieldCheckboxProperties | null | undefined;
};

/** @internal */
export const CustomFieldUpdateCheckboxType$inboundSchema: z.ZodNativeEnum<
  typeof CustomFieldUpdateCheckboxType
> = z.nativeEnum(CustomFieldUpdateCheckboxType);

/** @internal */
export const CustomFieldUpdateCheckboxType$outboundSchema: z.ZodNativeEnum<
  typeof CustomFieldUpdateCheckboxType
> = CustomFieldUpdateCheckboxType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFieldUpdateCheckboxType$ {
  /** @deprecated use `CustomFieldUpdateCheckboxType$inboundSchema` instead. */
  export const inboundSchema = CustomFieldUpdateCheckboxType$inboundSchema;
  /** @deprecated use `CustomFieldUpdateCheckboxType$outboundSchema` instead. */
  export const outboundSchema = CustomFieldUpdateCheckboxType$outboundSchema;
}

/** @internal */
export const CustomFieldUpdateCheckbox$inboundSchema: z.ZodType<
  CustomFieldUpdateCheckbox,
  z.ZodTypeDef,
  unknown
> = z.object({
  metadata: z.nullable(z.record(z.string())).optional(),
  name: z.nullable(z.string()).optional(),
  slug: z.nullable(z.string()).optional(),
  type: z.literal("checkbox").optional(),
  properties: z.nullable(CustomFieldCheckboxProperties$inboundSchema)
    .optional(),
});

/** @internal */
export type CustomFieldUpdateCheckbox$Outbound = {
  metadata?: { [k: string]: string } | null | undefined;
  name?: string | null | undefined;
  slug?: string | null | undefined;
  type: "checkbox";
  properties?: CustomFieldCheckboxProperties$Outbound | null | undefined;
};

/** @internal */
export const CustomFieldUpdateCheckbox$outboundSchema: z.ZodType<
  CustomFieldUpdateCheckbox$Outbound,
  z.ZodTypeDef,
  CustomFieldUpdateCheckbox
> = z.object({
  metadata: z.nullable(z.record(z.string())).optional(),
  name: z.nullable(z.string()).optional(),
  slug: z.nullable(z.string()).optional(),
  type: z.literal("checkbox").default("checkbox"),
  properties: z.nullable(CustomFieldCheckboxProperties$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomFieldUpdateCheckbox$ {
  /** @deprecated use `CustomFieldUpdateCheckbox$inboundSchema` instead. */
  export const inboundSchema = CustomFieldUpdateCheckbox$inboundSchema;
  /** @deprecated use `CustomFieldUpdateCheckbox$outboundSchema` instead. */
  export const outboundSchema = CustomFieldUpdateCheckbox$outboundSchema;
  /** @deprecated use `CustomFieldUpdateCheckbox$Outbound` instead. */
  export type Outbound = CustomFieldUpdateCheckbox$Outbound;
}
