/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import {
  ProductPriceRecurringFixedCreate,
  ProductPriceRecurringFixedCreate$inboundSchema,
  ProductPriceRecurringFixedCreate$Outbound,
  ProductPriceRecurringFixedCreate$outboundSchema,
} from "./productpricerecurringfixedcreate.js";
import {
  ProductPriceRecurringFreeCreate,
  ProductPriceRecurringFreeCreate$inboundSchema,
  ProductPriceRecurringFreeCreate$Outbound,
  ProductPriceRecurringFreeCreate$outboundSchema,
} from "./productpricerecurringfreecreate.js";

/**
 * List of available prices for this product.
 */
export type ProductRecurringCreatePrices =
  | Array<ProductPriceRecurringFixedCreate>
  | Array<ProductPriceRecurringFreeCreate>;

/**
 * Schema to create a recurring product, i.e. a subscription.
 */
export type ProductRecurringCreate = {
  /**
   * The name of the product.
   */
  name: string;
  /**
   * The description of the product.
   */
  description?: string | null | undefined;
  /**
   * List of available prices for this product.
   */
  prices:
    | Array<ProductPriceRecurringFixedCreate>
    | Array<ProductPriceRecurringFreeCreate>;
  /**
   * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.
   */
  medias?: Array<string> | null | undefined;
  /**
   * The ID of the organization owning the product. **Required unless you use an organization token.**
   */
  organizationId?: string | null | undefined;
};

/** @internal */
export const ProductRecurringCreatePrices$inboundSchema: z.ZodType<
  ProductRecurringCreatePrices,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.array(ProductPriceRecurringFixedCreate$inboundSchema),
  z.array(ProductPriceRecurringFreeCreate$inboundSchema),
]);

/** @internal */
export type ProductRecurringCreatePrices$Outbound =
  | Array<ProductPriceRecurringFixedCreate$Outbound>
  | Array<ProductPriceRecurringFreeCreate$Outbound>;

/** @internal */
export const ProductRecurringCreatePrices$outboundSchema: z.ZodType<
  ProductRecurringCreatePrices$Outbound,
  z.ZodTypeDef,
  ProductRecurringCreatePrices
> = z.union([
  z.array(ProductPriceRecurringFixedCreate$outboundSchema),
  z.array(ProductPriceRecurringFreeCreate$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductRecurringCreatePrices$ {
  /** @deprecated use `ProductRecurringCreatePrices$inboundSchema` instead. */
  export const inboundSchema = ProductRecurringCreatePrices$inboundSchema;
  /** @deprecated use `ProductRecurringCreatePrices$outboundSchema` instead. */
  export const outboundSchema = ProductRecurringCreatePrices$outboundSchema;
  /** @deprecated use `ProductRecurringCreatePrices$Outbound` instead. */
  export type Outbound = ProductRecurringCreatePrices$Outbound;
}

/** @internal */
export const ProductRecurringCreate$inboundSchema: z.ZodType<
  ProductRecurringCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  prices: z.union([
    z.array(ProductPriceRecurringFixedCreate$inboundSchema),
    z.array(ProductPriceRecurringFreeCreate$inboundSchema),
  ]),
  medias: z.nullable(z.array(z.string())).optional(),
  organization_id: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "organization_id": "organizationId",
  });
});

/** @internal */
export type ProductRecurringCreate$Outbound = {
  name: string;
  description?: string | null | undefined;
  prices:
    | Array<ProductPriceRecurringFixedCreate$Outbound>
    | Array<ProductPriceRecurringFreeCreate$Outbound>;
  medias?: Array<string> | null | undefined;
  organization_id?: string | null | undefined;
};

/** @internal */
export const ProductRecurringCreate$outboundSchema: z.ZodType<
  ProductRecurringCreate$Outbound,
  z.ZodTypeDef,
  ProductRecurringCreate
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  prices: z.union([
    z.array(ProductPriceRecurringFixedCreate$outboundSchema),
    z.array(ProductPriceRecurringFreeCreate$outboundSchema),
  ]),
  medias: z.nullable(z.array(z.string())).optional(),
  organizationId: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    organizationId: "organization_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductRecurringCreate$ {
  /** @deprecated use `ProductRecurringCreate$inboundSchema` instead. */
  export const inboundSchema = ProductRecurringCreate$inboundSchema;
  /** @deprecated use `ProductRecurringCreate$outboundSchema` instead. */
  export const outboundSchema = ProductRecurringCreate$outboundSchema;
  /** @deprecated use `ProductRecurringCreate$Outbound` instead. */
  export type Outbound = ProductRecurringCreate$Outbound;
}
