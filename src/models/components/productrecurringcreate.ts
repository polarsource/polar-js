/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
  ProductPriceRecurringCreate,
  ProductPriceRecurringCreate$inboundSchema,
  ProductPriceRecurringCreate$Outbound,
  ProductPriceRecurringCreate$outboundSchema,
} from "./productpricerecurringcreate.js";

/**
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export const ProductRecurringCreateType = {
  Individual: "individual",
  Business: "business",
} as const;
/**
 * @deprecated enum: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type ProductRecurringCreateType = ClosedEnum<
  typeof ProductRecurringCreateType
>;

/**
 * Schema to create a recurring product, i.e. a subscription.
 */
export type ProductRecurringCreate = {
  /**
   * The name of the product.
   */
  name: string;
  /**
   * The description of the product.
   */
  description?: string | null | undefined;
  /**
   * List of available prices for this product.
   */
  prices: Array<ProductPriceRecurringCreate>;
  /**
   * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.
   */
  medias?: Array<string> | null | undefined;
  /**
   * The ID of the organization owning the product. **Required unless you use an organization token.**
   */
  organizationId?: string | null | undefined;
  /**
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  type: ProductRecurringCreateType;
  /**
   * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
   */
  isHighlighted?: boolean | undefined;
};

/** @internal */
export const ProductRecurringCreateType$inboundSchema: z.ZodNativeEnum<
  typeof ProductRecurringCreateType
> = z.nativeEnum(ProductRecurringCreateType);

/** @internal */
export const ProductRecurringCreateType$outboundSchema: z.ZodNativeEnum<
  typeof ProductRecurringCreateType
> = ProductRecurringCreateType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductRecurringCreateType$ {
  /** @deprecated use `ProductRecurringCreateType$inboundSchema` instead. */
  export const inboundSchema = ProductRecurringCreateType$inboundSchema;
  /** @deprecated use `ProductRecurringCreateType$outboundSchema` instead. */
  export const outboundSchema = ProductRecurringCreateType$outboundSchema;
}

/** @internal */
export const ProductRecurringCreate$inboundSchema: z.ZodType<
  ProductRecurringCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  prices: z.array(ProductPriceRecurringCreate$inboundSchema),
  medias: z.nullable(z.array(z.string())).optional(),
  organization_id: z.nullable(z.string()).optional(),
  type: ProductRecurringCreateType$inboundSchema,
  is_highlighted: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "organization_id": "organizationId",
    "is_highlighted": "isHighlighted",
  });
});

/** @internal */
export type ProductRecurringCreate$Outbound = {
  name: string;
  description?: string | null | undefined;
  prices: Array<ProductPriceRecurringCreate$Outbound>;
  medias?: Array<string> | null | undefined;
  organization_id?: string | null | undefined;
  type: string;
  is_highlighted: boolean;
};

/** @internal */
export const ProductRecurringCreate$outboundSchema: z.ZodType<
  ProductRecurringCreate$Outbound,
  z.ZodTypeDef,
  ProductRecurringCreate
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  prices: z.array(ProductPriceRecurringCreate$outboundSchema),
  medias: z.nullable(z.array(z.string())).optional(),
  organizationId: z.nullable(z.string()).optional(),
  type: ProductRecurringCreateType$outboundSchema,
  isHighlighted: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    organizationId: "organization_id",
    isHighlighted: "is_highlighted",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductRecurringCreate$ {
  /** @deprecated use `ProductRecurringCreate$inboundSchema` instead. */
  export const inboundSchema = ProductRecurringCreate$inboundSchema;
  /** @deprecated use `ProductRecurringCreate$outboundSchema` instead. */
  export const outboundSchema = ProductRecurringCreate$outboundSchema;
  /** @deprecated use `ProductRecurringCreate$Outbound` instead. */
  export type Outbound = ProductRecurringCreate$Outbound;
}
