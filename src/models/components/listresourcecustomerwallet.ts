/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CustomerWallet,
  CustomerWallet$inboundSchema,
  CustomerWallet$Outbound,
  CustomerWallet$outboundSchema,
} from "./customerwallet.js";
import {
  Pagination,
  Pagination$inboundSchema,
  Pagination$Outbound,
  Pagination$outboundSchema,
} from "./pagination.js";

export type ListResourceCustomerWallet = {
  items: Array<CustomerWallet>;
  pagination: Pagination;
};

/** @internal */
export const ListResourceCustomerWallet$inboundSchema: z.ZodType<
  ListResourceCustomerWallet,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(CustomerWallet$inboundSchema),
  pagination: Pagination$inboundSchema,
});

/** @internal */
export type ListResourceCustomerWallet$Outbound = {
  items: Array<CustomerWallet$Outbound>;
  pagination: Pagination$Outbound;
};

/** @internal */
export const ListResourceCustomerWallet$outboundSchema: z.ZodType<
  ListResourceCustomerWallet$Outbound,
  z.ZodTypeDef,
  ListResourceCustomerWallet
> = z.object({
  items: z.array(CustomerWallet$outboundSchema),
  pagination: Pagination$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListResourceCustomerWallet$ {
  /** @deprecated use `ListResourceCustomerWallet$inboundSchema` instead. */
  export const inboundSchema = ListResourceCustomerWallet$inboundSchema;
  /** @deprecated use `ListResourceCustomerWallet$outboundSchema` instead. */
  export const outboundSchema = ListResourceCustomerWallet$outboundSchema;
  /** @deprecated use `ListResourceCustomerWallet$Outbound` instead. */
  export type Outbound = ListResourceCustomerWallet$Outbound;
}

export function listResourceCustomerWalletToJSON(
  listResourceCustomerWallet: ListResourceCustomerWallet,
): string {
  return JSON.stringify(
    ListResourceCustomerWallet$outboundSchema.parse(listResourceCustomerWallet),
  );
}

export function listResourceCustomerWalletFromJSON(
  jsonString: string,
): SafeParseResult<ListResourceCustomerWallet, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListResourceCustomerWallet$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListResourceCustomerWallet' from JSON`,
  );
}
