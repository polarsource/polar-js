/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UniqueAggregation = {
  func?: "unique" | undefined;
  property: string;
};

/** @internal */
export const UniqueAggregation$inboundSchema: z.ZodType<
  UniqueAggregation,
  z.ZodTypeDef,
  unknown
> = z.object({
  func: z.literal("unique").default("unique"),
  property: z.string(),
});

/** @internal */
export type UniqueAggregation$Outbound = {
  func: "unique";
  property: string;
};

/** @internal */
export const UniqueAggregation$outboundSchema: z.ZodType<
  UniqueAggregation$Outbound,
  z.ZodTypeDef,
  UniqueAggregation
> = z.object({
  func: z.literal("unique").default("unique" as const),
  property: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UniqueAggregation$ {
  /** @deprecated use `UniqueAggregation$inboundSchema` instead. */
  export const inboundSchema = UniqueAggregation$inboundSchema;
  /** @deprecated use `UniqueAggregation$outboundSchema` instead. */
  export const outboundSchema = UniqueAggregation$outboundSchema;
  /** @deprecated use `UniqueAggregation$Outbound` instead. */
  export type Outbound = UniqueAggregation$Outbound;
}

export function uniqueAggregationToJSON(
  uniqueAggregation: UniqueAggregation,
): string {
  return JSON.stringify(
    UniqueAggregation$outboundSchema.parse(uniqueAggregation),
  );
}

export function uniqueAggregationFromJSON(
  jsonString: string,
): SafeParseResult<UniqueAggregation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UniqueAggregation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UniqueAggregation' from JSON`,
  );
}
