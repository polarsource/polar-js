/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type OrganizationFeatureSettings = {
  /**
   * If this organization has articles enabled
   */
  articlesEnabled?: boolean | undefined;
  /**
   * If this organization has issue funding enabled
   */
  issueFundingEnabled?: boolean | undefined;
};

/** @internal */
export const OrganizationFeatureSettings$inboundSchema: z.ZodType<
  OrganizationFeatureSettings,
  z.ZodTypeDef,
  unknown
> = z.object({
  articles_enabled: z.boolean().default(false),
  issue_funding_enabled: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "articles_enabled": "articlesEnabled",
    "issue_funding_enabled": "issueFundingEnabled",
  });
});

/** @internal */
export type OrganizationFeatureSettings$Outbound = {
  articles_enabled: boolean;
  issue_funding_enabled: boolean;
};

/** @internal */
export const OrganizationFeatureSettings$outboundSchema: z.ZodType<
  OrganizationFeatureSettings$Outbound,
  z.ZodTypeDef,
  OrganizationFeatureSettings
> = z.object({
  articlesEnabled: z.boolean().default(false),
  issueFundingEnabled: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    articlesEnabled: "articles_enabled",
    issueFundingEnabled: "issue_funding_enabled",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OrganizationFeatureSettings$ {
  /** @deprecated use `OrganizationFeatureSettings$inboundSchema` instead. */
  export const inboundSchema = OrganizationFeatureSettings$inboundSchema;
  /** @deprecated use `OrganizationFeatureSettings$outboundSchema` instead. */
  export const outboundSchema = OrganizationFeatureSettings$outboundSchema;
  /** @deprecated use `OrganizationFeatureSettings$Outbound` instead. */
  export type Outbound = OrganizationFeatureSettings$Outbound;
}
