/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import {
  SubscriptionRecurringInterval,
  SubscriptionRecurringInterval$inboundSchema,
  SubscriptionRecurringInterval$outboundSchema,
} from "./subscriptionrecurringinterval.js";

export const ProductPriceRecurringCreateType = {
  Recurring: "recurring",
} as const;
export type ProductPriceRecurringCreateType = ClosedEnum<
  typeof ProductPriceRecurringCreateType
>;

/**
 * Schema to create a recurring product price, i.e. a subscription.
 */
export type ProductPriceRecurringCreate = {
  type?: "recurring" | undefined;
  /**
   * The currency. Currently, only `usd` is supported.
   */
  priceCurrency?: string | undefined;
  /**
   * The price in cents.
   */
  priceAmount: number;
  /**
   * The recurring interval of the price.
   */
  recurringInterval: SubscriptionRecurringInterval;
};

/** @internal */
export const ProductPriceRecurringCreateType$inboundSchema: z.ZodNativeEnum<
  typeof ProductPriceRecurringCreateType
> = z.nativeEnum(ProductPriceRecurringCreateType);

/** @internal */
export const ProductPriceRecurringCreateType$outboundSchema: z.ZodNativeEnum<
  typeof ProductPriceRecurringCreateType
> = ProductPriceRecurringCreateType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPriceRecurringCreateType$ {
  /** @deprecated use `ProductPriceRecurringCreateType$inboundSchema` instead. */
  export const inboundSchema = ProductPriceRecurringCreateType$inboundSchema;
  /** @deprecated use `ProductPriceRecurringCreateType$outboundSchema` instead. */
  export const outboundSchema = ProductPriceRecurringCreateType$outboundSchema;
}

/** @internal */
export const ProductPriceRecurringCreate$inboundSchema: z.ZodType<
  ProductPriceRecurringCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("recurring").optional(),
  price_currency: z.string().default("usd"),
  price_amount: z.number().int(),
  recurring_interval: SubscriptionRecurringInterval$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "price_currency": "priceCurrency",
    "price_amount": "priceAmount",
    "recurring_interval": "recurringInterval",
  });
});

/** @internal */
export type ProductPriceRecurringCreate$Outbound = {
  type: "recurring";
  price_currency: string;
  price_amount: number;
  recurring_interval: string;
};

/** @internal */
export const ProductPriceRecurringCreate$outboundSchema: z.ZodType<
  ProductPriceRecurringCreate$Outbound,
  z.ZodTypeDef,
  ProductPriceRecurringCreate
> = z.object({
  type: z.literal("recurring").default("recurring"),
  priceCurrency: z.string().default("usd"),
  priceAmount: z.number().int(),
  recurringInterval: SubscriptionRecurringInterval$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    priceCurrency: "price_currency",
    priceAmount: "price_amount",
    recurringInterval: "recurring_interval",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPriceRecurringCreate$ {
  /** @deprecated use `ProductPriceRecurringCreate$inboundSchema` instead. */
  export const inboundSchema = ProductPriceRecurringCreate$inboundSchema;
  /** @deprecated use `ProductPriceRecurringCreate$outboundSchema` instead. */
  export const outboundSchema = ProductPriceRecurringCreate$outboundSchema;
  /** @deprecated use `ProductPriceRecurringCreate$Outbound` instead. */
  export type Outbound = ProductPriceRecurringCreate$Outbound;
}
