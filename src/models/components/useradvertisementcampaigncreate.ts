/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UserAdvertisementCampaignCreate = {
  imageUrl: string;
  imageUrlDark?: string | null | undefined;
  text: string;
  linkUrl: string;
};

/** @internal */
export const UserAdvertisementCampaignCreate$inboundSchema: z.ZodType<
  UserAdvertisementCampaignCreate,
  z.ZodTypeDef,
  unknown
> = z.object({
  image_url: z.string(),
  image_url_dark: z.nullable(z.string()).optional(),
  text: z.string(),
  link_url: z.string(),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
    "image_url_dark": "imageUrlDark",
    "link_url": "linkUrl",
  });
});

/** @internal */
export type UserAdvertisementCampaignCreate$Outbound = {
  image_url: string;
  image_url_dark?: string | null | undefined;
  text: string;
  link_url: string;
};

/** @internal */
export const UserAdvertisementCampaignCreate$outboundSchema: z.ZodType<
  UserAdvertisementCampaignCreate$Outbound,
  z.ZodTypeDef,
  UserAdvertisementCampaignCreate
> = z.object({
  imageUrl: z.string(),
  imageUrlDark: z.nullable(z.string()).optional(),
  text: z.string(),
  linkUrl: z.string(),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
    imageUrlDark: "image_url_dark",
    linkUrl: "link_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UserAdvertisementCampaignCreate$ {
  /** @deprecated use `UserAdvertisementCampaignCreate$inboundSchema` instead. */
  export const inboundSchema = UserAdvertisementCampaignCreate$inboundSchema;
  /** @deprecated use `UserAdvertisementCampaignCreate$outboundSchema` instead. */
  export const outboundSchema = UserAdvertisementCampaignCreate$outboundSchema;
  /** @deprecated use `UserAdvertisementCampaignCreate$Outbound` instead. */
  export type Outbound = UserAdvertisementCampaignCreate$Outbound;
}

export function userAdvertisementCampaignCreateToJSON(
  userAdvertisementCampaignCreate: UserAdvertisementCampaignCreate,
): string {
  return JSON.stringify(
    UserAdvertisementCampaignCreate$outboundSchema.parse(
      userAdvertisementCampaignCreate,
    ),
  );
}

export function userAdvertisementCampaignCreateFromJSON(
  jsonString: string,
): SafeParseResult<UserAdvertisementCampaignCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UserAdvertisementCampaignCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UserAdvertisementCampaignCreate' from JSON`,
  );
}
