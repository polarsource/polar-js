/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CostMetadataOutput = {
  /**
   * The amount in cents.
   */
  amount: string;
  /**
   * The currency. Currently, only `usd` is supported.
   */
  currency: string;
};

/** @internal */
export const CostMetadataOutput$inboundSchema: z.ZodType<
  CostMetadataOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.string(),
  currency: z.string(),
});

/** @internal */
export type CostMetadataOutput$Outbound = {
  amount: string;
  currency: string;
};

/** @internal */
export const CostMetadataOutput$outboundSchema: z.ZodType<
  CostMetadataOutput$Outbound,
  z.ZodTypeDef,
  CostMetadataOutput
> = z.object({
  amount: z.string(),
  currency: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CostMetadataOutput$ {
  /** @deprecated use `CostMetadataOutput$inboundSchema` instead. */
  export const inboundSchema = CostMetadataOutput$inboundSchema;
  /** @deprecated use `CostMetadataOutput$outboundSchema` instead. */
  export const outboundSchema = CostMetadataOutput$outboundSchema;
  /** @deprecated use `CostMetadataOutput$Outbound` instead. */
  export type Outbound = CostMetadataOutput$Outbound;
}

export function costMetadataOutputToJSON(
  costMetadataOutput: CostMetadataOutput,
): string {
  return JSON.stringify(
    CostMetadataOutput$outboundSchema.parse(costMetadataOutput),
  );
}

export function costMetadataOutputFromJSON(
  jsonString: string,
): SafeParseResult<CostMetadataOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CostMetadataOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CostMetadataOutput' from JSON`,
  );
}
