/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ProductPriceRecurringCustom,
  ProductPriceRecurringCustom$inboundSchema,
  ProductPriceRecurringCustom$Outbound,
  ProductPriceRecurringCustom$outboundSchema,
} from "./productpricerecurringcustom.js";
import {
  ProductPriceRecurringFixed,
  ProductPriceRecurringFixed$inboundSchema,
  ProductPriceRecurringFixed$Outbound,
  ProductPriceRecurringFixed$outboundSchema,
} from "./productpricerecurringfixed.js";
import {
  ProductPriceRecurringFree,
  ProductPriceRecurringFree$inboundSchema,
  ProductPriceRecurringFree$Outbound,
  ProductPriceRecurringFree$outboundSchema,
} from "./productpricerecurringfree.js";

export type ProductPriceRecurring =
  | ProductPriceRecurringFree
  | ProductPriceRecurringFixed
  | ProductPriceRecurringCustom;

/** @internal */
export const ProductPriceRecurring$inboundSchema: z.ZodType<
  ProductPriceRecurring,
  z.ZodTypeDef,
  unknown
> = z.union([
  ProductPriceRecurringFree$inboundSchema,
  ProductPriceRecurringFixed$inboundSchema,
  ProductPriceRecurringCustom$inboundSchema,
]);

/** @internal */
export type ProductPriceRecurring$Outbound =
  | ProductPriceRecurringFree$Outbound
  | ProductPriceRecurringFixed$Outbound
  | ProductPriceRecurringCustom$Outbound;

/** @internal */
export const ProductPriceRecurring$outboundSchema: z.ZodType<
  ProductPriceRecurring$Outbound,
  z.ZodTypeDef,
  ProductPriceRecurring
> = z.union([
  ProductPriceRecurringFree$outboundSchema,
  ProductPriceRecurringFixed$outboundSchema,
  ProductPriceRecurringCustom$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProductPriceRecurring$ {
  /** @deprecated use `ProductPriceRecurring$inboundSchema` instead. */
  export const inboundSchema = ProductPriceRecurring$inboundSchema;
  /** @deprecated use `ProductPriceRecurring$outboundSchema` instead. */
  export const outboundSchema = ProductPriceRecurring$outboundSchema;
  /** @deprecated use `ProductPriceRecurring$Outbound` instead. */
  export type Outbound = ProductPriceRecurring$Outbound;
}

export function productPriceRecurringToJSON(
  productPriceRecurring: ProductPriceRecurring,
): string {
  return JSON.stringify(
    ProductPriceRecurring$outboundSchema.parse(productPriceRecurring),
  );
}

export function productPriceRecurringFromJSON(
  jsonString: string,
): SafeParseResult<ProductPriceRecurring, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProductPriceRecurring$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProductPriceRecurring' from JSON`,
  );
}
