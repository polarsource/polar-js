/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate,
  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema,
  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound,
  CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema,
} from "./customerbenefitgrantgithubrepositorypropertiesupdate.js";

export type CustomerBenefitGrantGitHubRepositoryUpdate = {
  benefitType?: "github_repository" | undefined;
  properties: CustomerBenefitGrantGitHubRepositoryPropertiesUpdate;
};

/** @internal */
export const CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema:
  z.ZodType<CustomerBenefitGrantGitHubRepositoryUpdate, z.ZodTypeDef, unknown> =
    z.object({
      benefit_type: z.literal("github_repository").optional(),
      properties:
        CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$inboundSchema,
    }).transform((v) => {
      return remap$(v, {
        "benefit_type": "benefitType",
      });
    });

/** @internal */
export type CustomerBenefitGrantGitHubRepositoryUpdate$Outbound = {
  benefit_type: "github_repository";
  properties: CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$Outbound;
};

/** @internal */
export const CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema:
  z.ZodType<
    CustomerBenefitGrantGitHubRepositoryUpdate$Outbound,
    z.ZodTypeDef,
    CustomerBenefitGrantGitHubRepositoryUpdate
  > = z.object({
    benefitType: z.literal("github_repository").default(
      "github_repository" as const,
    ),
    properties:
      CustomerBenefitGrantGitHubRepositoryPropertiesUpdate$outboundSchema,
  }).transform((v) => {
    return remap$(v, {
      benefitType: "benefit_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerBenefitGrantGitHubRepositoryUpdate$ {
  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema` instead. */
  export const inboundSchema =
    CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema;
  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema` instead. */
  export const outboundSchema =
    CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema;
  /** @deprecated use `CustomerBenefitGrantGitHubRepositoryUpdate$Outbound` instead. */
  export type Outbound = CustomerBenefitGrantGitHubRepositoryUpdate$Outbound;
}

export function customerBenefitGrantGitHubRepositoryUpdateToJSON(
  customerBenefitGrantGitHubRepositoryUpdate:
    CustomerBenefitGrantGitHubRepositoryUpdate,
): string {
  return JSON.stringify(
    CustomerBenefitGrantGitHubRepositoryUpdate$outboundSchema.parse(
      customerBenefitGrantGitHubRepositoryUpdate,
    ),
  );
}

export function customerBenefitGrantGitHubRepositoryUpdateFromJSON(
  jsonString: string,
): SafeParseResult<
  CustomerBenefitGrantGitHubRepositoryUpdate,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CustomerBenefitGrantGitHubRepositoryUpdate$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CustomerBenefitGrantGitHubRepositoryUpdate' from JSON`,
  );
}
