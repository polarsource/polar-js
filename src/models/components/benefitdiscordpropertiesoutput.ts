/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

/**
 * Properties for a benefit of type `discord`.
 */
export type BenefitDiscordPropertiesOutput = {
  /**
   * The ID of the Discord server.
   */
  guildId: string;
  /**
   * The ID of the Discord role to grant.
   */
  roleId: string;
  guildToken: string;
};

/** @internal */
export const BenefitDiscordPropertiesOutput$inboundSchema: z.ZodType<
  BenefitDiscordPropertiesOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  guild_id: z.string(),
  role_id: z.string(),
  guild_token: z.string(),
}).transform((v) => {
  return remap$(v, {
    "guild_id": "guildId",
    "role_id": "roleId",
    "guild_token": "guildToken",
  });
});

/** @internal */
export type BenefitDiscordPropertiesOutput$Outbound = {
  guild_id: string;
  role_id: string;
  guild_token: string;
};

/** @internal */
export const BenefitDiscordPropertiesOutput$outboundSchema: z.ZodType<
  BenefitDiscordPropertiesOutput$Outbound,
  z.ZodTypeDef,
  BenefitDiscordPropertiesOutput
> = z.object({
  guildId: z.string(),
  roleId: z.string(),
  guildToken: z.string(),
}).transform((v) => {
  return remap$(v, {
    guildId: "guild_id",
    roleId: "role_id",
    guildToken: "guild_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BenefitDiscordPropertiesOutput$ {
  /** @deprecated use `BenefitDiscordPropertiesOutput$inboundSchema` instead. */
  export const inboundSchema = BenefitDiscordPropertiesOutput$inboundSchema;
  /** @deprecated use `BenefitDiscordPropertiesOutput$outboundSchema` instead. */
  export const outboundSchema = BenefitDiscordPropertiesOutput$outboundSchema;
  /** @deprecated use `BenefitDiscordPropertiesOutput$Outbound` instead. */
  export type Outbound = BenefitDiscordPropertiesOutput$Outbound;
}
