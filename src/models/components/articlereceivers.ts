/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type ArticleReceivers = {
  freeSubscribers: number;
  premiumSubscribers: number;
  organizationMembers: number;
};

/** @internal */
export const ArticleReceivers$inboundSchema: z.ZodType<
  ArticleReceivers,
  z.ZodTypeDef,
  unknown
> = z.object({
  free_subscribers: z.number().int(),
  premium_subscribers: z.number().int(),
  organization_members: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    "free_subscribers": "freeSubscribers",
    "premium_subscribers": "premiumSubscribers",
    "organization_members": "organizationMembers",
  });
});

/** @internal */
export type ArticleReceivers$Outbound = {
  free_subscribers: number;
  premium_subscribers: number;
  organization_members: number;
};

/** @internal */
export const ArticleReceivers$outboundSchema: z.ZodType<
  ArticleReceivers$Outbound,
  z.ZodTypeDef,
  ArticleReceivers
> = z.object({
  freeSubscribers: z.number().int(),
  premiumSubscribers: z.number().int(),
  organizationMembers: z.number().int(),
}).transform((v) => {
  return remap$(v, {
    freeSubscribers: "free_subscribers",
    premiumSubscribers: "premium_subscribers",
    organizationMembers: "organization_members",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ArticleReceivers$ {
  /** @deprecated use `ArticleReceivers$inboundSchema` instead. */
  export const inboundSchema = ArticleReceivers$inboundSchema;
  /** @deprecated use `ArticleReceivers$outboundSchema` instead. */
  export const outboundSchema = ArticleReceivers$outboundSchema;
  /** @deprecated use `ArticleReceivers$Outbound` instead. */
  export type Outbound = ArticleReceivers$Outbound;
}
