/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CustomerBenefitGrantCustom,
  CustomerBenefitGrantCustom$inboundSchema,
  CustomerBenefitGrantCustom$Outbound,
  CustomerBenefitGrantCustom$outboundSchema,
} from "./customerbenefitgrantcustom.js";
import {
  CustomerBenefitGrantDiscord,
  CustomerBenefitGrantDiscord$inboundSchema,
  CustomerBenefitGrantDiscord$Outbound,
  CustomerBenefitGrantDiscord$outboundSchema,
} from "./customerbenefitgrantdiscord.js";
import {
  CustomerBenefitGrantDownloadables,
  CustomerBenefitGrantDownloadables$inboundSchema,
  CustomerBenefitGrantDownloadables$Outbound,
  CustomerBenefitGrantDownloadables$outboundSchema,
} from "./customerbenefitgrantdownloadables.js";
import {
  CustomerBenefitGrantGitHubRepository,
  CustomerBenefitGrantGitHubRepository$inboundSchema,
  CustomerBenefitGrantGitHubRepository$Outbound,
  CustomerBenefitGrantGitHubRepository$outboundSchema,
} from "./customerbenefitgrantgithubrepository.js";
import {
  CustomerBenefitGrantLicenseKeys,
  CustomerBenefitGrantLicenseKeys$inboundSchema,
  CustomerBenefitGrantLicenseKeys$Outbound,
  CustomerBenefitGrantLicenseKeys$outboundSchema,
} from "./customerbenefitgrantlicensekeys.js";

export type CustomerBenefitGrant =
  | CustomerBenefitGrantDiscord
  | CustomerBenefitGrantGitHubRepository
  | CustomerBenefitGrantDownloadables
  | CustomerBenefitGrantLicenseKeys
  | CustomerBenefitGrantCustom;

/** @internal */
export const CustomerBenefitGrant$inboundSchema: z.ZodType<
  CustomerBenefitGrant,
  z.ZodTypeDef,
  unknown
> = z.union([
  CustomerBenefitGrantDiscord$inboundSchema,
  CustomerBenefitGrantGitHubRepository$inboundSchema,
  CustomerBenefitGrantDownloadables$inboundSchema,
  CustomerBenefitGrantLicenseKeys$inboundSchema,
  CustomerBenefitGrantCustom$inboundSchema,
]);

/** @internal */
export type CustomerBenefitGrant$Outbound =
  | CustomerBenefitGrantDiscord$Outbound
  | CustomerBenefitGrantGitHubRepository$Outbound
  | CustomerBenefitGrantDownloadables$Outbound
  | CustomerBenefitGrantLicenseKeys$Outbound
  | CustomerBenefitGrantCustom$Outbound;

/** @internal */
export const CustomerBenefitGrant$outboundSchema: z.ZodType<
  CustomerBenefitGrant$Outbound,
  z.ZodTypeDef,
  CustomerBenefitGrant
> = z.union([
  CustomerBenefitGrantDiscord$outboundSchema,
  CustomerBenefitGrantGitHubRepository$outboundSchema,
  CustomerBenefitGrantDownloadables$outboundSchema,
  CustomerBenefitGrantLicenseKeys$outboundSchema,
  CustomerBenefitGrantCustom$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CustomerBenefitGrant$ {
  /** @deprecated use `CustomerBenefitGrant$inboundSchema` instead. */
  export const inboundSchema = CustomerBenefitGrant$inboundSchema;
  /** @deprecated use `CustomerBenefitGrant$outboundSchema` instead. */
  export const outboundSchema = CustomerBenefitGrant$outboundSchema;
  /** @deprecated use `CustomerBenefitGrant$Outbound` instead. */
  export type Outbound = CustomerBenefitGrant$Outbound;
}

export function customerBenefitGrantToJSON(
  customerBenefitGrant: CustomerBenefitGrant,
): string {
  return JSON.stringify(
    CustomerBenefitGrant$outboundSchema.parse(customerBenefitGrant),
  );
}

export function customerBenefitGrantFromJSON(
  jsonString: string,
): SafeParseResult<CustomerBenefitGrant, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CustomerBenefitGrant$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CustomerBenefitGrant' from JSON`,
  );
}
