/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Customer,
  Customer$inboundSchema,
  Customer$Outbound,
  Customer$outboundSchema,
} from "./customer.js";

/**
 * Sent when a customer is deleted.
 *
 * @remarks
 *
 * **Discord & Slack support:** Basic
 */
export type WebhookCustomerDeletedPayload = {
  type?: "customer.deleted" | undefined;
  /**
   * A customer in an organization.
   */
  data: Customer;
};

/** @internal */
export const WebhookCustomerDeletedPayload$inboundSchema: z.ZodType<
  WebhookCustomerDeletedPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: z.literal("customer.deleted").optional(),
  data: Customer$inboundSchema,
});

/** @internal */
export type WebhookCustomerDeletedPayload$Outbound = {
  type: "customer.deleted";
  data: Customer$Outbound;
};

/** @internal */
export const WebhookCustomerDeletedPayload$outboundSchema: z.ZodType<
  WebhookCustomerDeletedPayload$Outbound,
  z.ZodTypeDef,
  WebhookCustomerDeletedPayload
> = z.object({
  type: z.literal("customer.deleted").default("customer.deleted" as const),
  data: Customer$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookCustomerDeletedPayload$ {
  /** @deprecated use `WebhookCustomerDeletedPayload$inboundSchema` instead. */
  export const inboundSchema = WebhookCustomerDeletedPayload$inboundSchema;
  /** @deprecated use `WebhookCustomerDeletedPayload$outboundSchema` instead. */
  export const outboundSchema = WebhookCustomerDeletedPayload$outboundSchema;
  /** @deprecated use `WebhookCustomerDeletedPayload$Outbound` instead. */
  export type Outbound = WebhookCustomerDeletedPayload$Outbound;
}

export function webhookCustomerDeletedPayloadToJSON(
  webhookCustomerDeletedPayload: WebhookCustomerDeletedPayload,
): string {
  return JSON.stringify(
    WebhookCustomerDeletedPayload$outboundSchema.parse(
      webhookCustomerDeletedPayload,
    ),
  );
}

export function webhookCustomerDeletedPayloadFromJSON(
  jsonString: string,
): SafeParseResult<WebhookCustomerDeletedPayload, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WebhookCustomerDeletedPayload$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WebhookCustomerDeletedPayload' from JSON`,
  );
}
