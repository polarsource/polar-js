/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customerPortalWalletsGet } from "../funcs/customerPortalWalletsGet.js";
import { customerPortalWalletsList } from "../funcs/customerPortalWalletsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { CustomerWallet } from "../models/components/customerwallet.js";
import {
  CustomerPortalWalletsGetRequest,
  CustomerPortalWalletsGetSecurity,
} from "../models/operations/customerportalwalletsget.js";
import {
  CustomerPortalWalletsListRequest,
  CustomerPortalWalletsListResponse,
  CustomerPortalWalletsListSecurity,
} from "../models/operations/customerportalwalletslist.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class PolarWallets extends ClientSDK {
  /**
   * List Wallets
   *
   * @remarks
   * List wallets of the authenticated customer.
   *
   * **Scopes**: `customer_portal:read` `customer_portal:write`
   */
  async list(
    security: CustomerPortalWalletsListSecurity,
    request: CustomerPortalWalletsListRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<CustomerPortalWalletsListResponse, { page: number }>
  > {
    return unwrapResultIterator(customerPortalWalletsList(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get Wallet
   *
   * @remarks
   * Get a wallet by ID for the authenticated customer.
   *
   * **Scopes**: `customer_portal:read` `customer_portal:write`
   */
  async get(
    security: CustomerPortalWalletsGetSecurity,
    request: CustomerPortalWalletsGetRequest,
    options?: RequestOptions,
  ): Promise<CustomerWallet> {
    return unwrapAsync(customerPortalWalletsGet(
      this,
      security,
      request,
      options,
    ));
  }
}
