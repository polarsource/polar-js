/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { refundsCreate } from "../funcs/refundsCreate.js";
import { refundsList } from "../funcs/refundsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { Refund } from "../models/components/refund.js";
import { RefundCreate } from "../models/components/refundcreate.js";
import {
  RefundsListRequest,
  RefundsListResponse,
} from "../models/operations/refundslist.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Refunds extends ClientSDK {
  /**
   * List Refunds
   *
   * @remarks
   * List products.
   *
   * **Scopes**: `refunds:read` `refunds:write`
   */
  async list(
    request: RefundsListRequest,
    options?: RequestOptions,
  ): Promise<PageIterator<RefundsListResponse, { page: number }>> {
    return unwrapResultIterator(refundsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Refund
   *
   * @remarks
   * Create a refund.
   *
   * **Scopes**: `refunds:write`
   */
  async create(
    request: RefundCreate,
    options?: RequestOptions,
  ): Promise<Refund | undefined> {
    return unwrapAsync(refundsCreate(
      this,
      request,
      options,
    ));
  }
}
