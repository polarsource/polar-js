/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customerPortalOrdersGet } from "../funcs/customerPortalOrdersGet.js";
import { customerPortalOrdersInvoice } from "../funcs/customerPortalOrdersInvoice.js";
import { customerPortalOrdersList } from "../funcs/customerPortalOrdersList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class PolarOrders extends ClientSDK {
  /**
   * List Orders
   *
   * @remarks
   * List orders of the authenticated customer or user.
   */
  async list(
    request: operations.CustomerPortalOrdersListRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.CustomerPortalOrdersListResponse, { page: number }>
  > {
    return unwrapResultIterator(customerPortalOrdersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Order
   *
   * @remarks
   * Get an order by ID for the authenticated customer or user.
   */
  async get(
    request: operations.CustomerPortalOrdersGetRequest,
    options?: RequestOptions,
  ): Promise<components.CustomerOrder> {
    return unwrapAsync(customerPortalOrdersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Order Invoice
   *
   * @remarks
   * Get an order's invoice data.
   */
  async invoice(
    request: operations.CustomerPortalOrdersInvoiceRequest,
    options?: RequestOptions,
  ): Promise<components.CustomerOrderInvoice> {
    return unwrapAsync(customerPortalOrdersInvoice(
      this,
      request,
      options,
    ));
  }
}
