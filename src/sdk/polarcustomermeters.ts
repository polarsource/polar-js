/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { customerPortalCustomerMetersGet } from "../funcs/customerPortalCustomerMetersGet.js";
import { customerPortalCustomerMetersList } from "../funcs/customerPortalCustomerMetersList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { CustomerCustomerMeter } from "../models/components/customercustomermeter.js";
import {
  CustomerPortalCustomerMetersGetRequest,
  CustomerPortalCustomerMetersGetSecurity,
} from "../models/operations/customerportalcustomermetersget.js";
import {
  CustomerPortalCustomerMetersListRequest,
  CustomerPortalCustomerMetersListResponse,
  CustomerPortalCustomerMetersListSecurity,
} from "../models/operations/customerportalcustomermeterslist.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class PolarCustomerMeters extends ClientSDK {
  /**
   * List Meters
   *
   * @remarks
   * List meters of the authenticated customer.
   *
   * **Scopes**: `customer_portal:read` `customer_portal:write`
   */
  async list(
    security: CustomerPortalCustomerMetersListSecurity,
    request: CustomerPortalCustomerMetersListRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<CustomerPortalCustomerMetersListResponse, { page: number }>
  > {
    return unwrapResultIterator(customerPortalCustomerMetersList(
      this,
      security,
      request,
      options,
    ));
  }

  /**
   * Get Customer Meter
   *
   * @remarks
   * Get a meter by ID for the authenticated customer.
   *
   * **Scopes**: `customer_portal:read` `customer_portal:write`
   */
  async get(
    security: CustomerPortalCustomerMetersGetSecurity,
    request: CustomerPortalCustomerMetersGetRequest,
    options?: RequestOptions,
  ): Promise<CustomerCustomerMeter> {
    return unwrapAsync(customerPortalCustomerMetersGet(
      this,
      security,
      request,
      options,
    ));
  }
}
