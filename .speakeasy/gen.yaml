configVersion: 2.0.0
generation:
  devContainers:
    enabled: true
    schemaPath: https://api.polar.sh/openapi.json
  sdkClassName: Polar
  maintainOpenAPIOrder: true
  usageSnippets:
    optionalPropertyRendering: withExample
    sdkInitStyle: constructor
  useClassNamesForArrayFields: true
  fixes:
    nameResolutionDec2023: true
    nameResolutionFeb2025: false
    parameterOrderingFeb2024: true
    requestResponseComponentNamesFeb2024: true
    securityFeb2025: false
    sharedErrorComponentsApr2025: false
  auth:
    oAuth2ClientCredentialsEnabled: true
    oAuth2PasswordEnabled: false
    hoistGlobalSecurity: true
  tests:
    generateTests: true
    generateNewTests: false
    skipResponseBodyAssertions: false
typescript:
  version: 0.35.2
  additionalDependencies:
    dependencies:
      standardwebhooks: ^1.0.0
      zod: ^3.25.76
    devDependencies:
      '@types/jest': '*'
      '@types/node': '*'
      jest: '*'
      ts-jest: '*'
  additionalPackageJSON: {}
  author: Speakeasy
  baseErrorName: PolarError
  clientServerStatusCodesAsErrors: true
  constFieldsAlwaysOptional: false
  defaultErrorName: SDKError
  enableCustomCodeRegions: false
  enableMCPServer: true
  enableReactQuery: false
  enumFormat: union
  envVarPrefix: POLAR
  flattenGlobalSecurity: true
  flatteningOrder: body-first
  generateExamples: true
  imports:
    option: openapi
    paths:
      callbacks: models/callbacks
      errors: models/errors
      operations: models/operations
      shared: models/components
      webhooks: models/webhooks
  inputModelSuffix: input
  jsonpath: legacy
  maxMethodParams: 0
  methodArguments: require-security-and-request
  modelPropertyCasing: camel
  moduleFormat: dual
  outputModelSuffix: output
  packageName: '@polar-sh/sdk'
  responseFormat: flat
  sseFlatResponse: false
  templateVersion: v2
  usageSDKInitImports: []
  useIndexModules: false
