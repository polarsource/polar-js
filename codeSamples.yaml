overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    description: \"delightfully fumigate convection though zowie up bulky electronics\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {\n      files: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    allowDiscountCodes: true,\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.create({\n    allowDiscountCodes: true,\n    customerBillingAddress: {\n      country: \"SE\",\n    },\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.update({\n    id: \"<value>\",\n    checkoutUpdate: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    slug: \"<value>\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    billingAddress: {\n      country: \"FR\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.getPaymentMethods({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.addPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    confirmationTokenId: \"<id>\",\n    setDefault: false,\n    returnUrl: \"https://slight-digestive.info\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.customers.deletePaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.get({\n    token: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerSubscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSessions.create({\n    customerId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    externalId: \"usr_1337\",\n    email: \"customer@example.com\",\n    name: \"John Doe\",\n    billingAddress: {\n      country: \"SE\",\n    },\n    taxId: [\n      \"FR61954506077\",\n      \"eu_vat\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.deleteExternal({\n    externalId: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.updateExternal({\n    externalId: \"<id>\",\n    customerUpdate: {\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getStateExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getState({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"forever\",\n    durationInMonths: 417458,\n    type: \"fixed\",\n    amount: 69025,\n    currency: \"usd\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.ingest({\n    events: [\n      {\n        name: \"<value>\",\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        customerId: \"<value>\",\n      },\n      {\n        name: \"<value>\",\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        externalCustomerId: \"<id>\",\n      },\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/external_organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.externalOrganizations.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 638424,\n    upload: {\n      parts: [\n        {\n          number: 417458,\n          chunkStart: 134365,\n          chunkEnd: 69025,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/sys\",\n      parts: [\n        {\n          number: 173116,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 894030,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 673715,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.create({\n    name: \"<value>\",\n    filter: {\n      conjunction: \"and\",\n      clauses: [\n\n      ],\n    },\n    aggregation: {\n      func: \"sum\",\n      property: \"<value>\",\n    },\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.update({\n    id: \"<value>\",\n    meterUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/events"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.events({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.quantities({\n    id: \"<value>\",\n    startTimestamp: new Date(\"2023-09-17T00:45:34.608Z\"),\n    endTimestamp: new Date(\"2023-07-21T18:11:39.069Z\"),\n    interval: \"hour\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types/rfcdate.js\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2025-02-06\"),\n    endDate: new RFCDate(\"2024-09-04\"),\n    interval: \"week\",\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.create({\n    redirectUris: [\n      \"https://inferior-chainstay.com\",\n    ],\n    clientName: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.delete({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.get({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.update({\n    clientId: \"<id>\",\n    oAuth2ClientConfigurationUpdate: {\n      redirectUris: [\n        \"https://grown-worth.name\",\n        \"https://worthwhile-avalanche.org/\",\n        \"https://general-digit.com/\",\n      ],\n      clientName: \"<value>\",\n      clientId: \"<id>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://old-fort.name\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    organizationUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    recurringInterval: \"month\",\n    prices: [\n      {\n        priceCurrency: \"usd\",\n      },\n      {\n        priceCurrency: \"usd\",\n      },\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.create({\n    orderId: \"<value>\",\n    reason: \"customer_request\",\n    amount: 638424,\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.update({\n    id: \"<value>\",\n    repositoryUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.revoke({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.update({\n    id: \"<value>\",\n    subscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-04-15T11:45:18.891Z\"),\n      modifiedAt: new Date(\"2025-06-17T12:04:55.002Z\"),\n      id: \"<value>\",\n      description: \"vastly lest but\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      properties: {\n        archived: {\n          \"key\": false,\n        },\n        files: [\n          \"<value>\",\n        ],\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-11-19T14:31:03.333Z\"),\n      modifiedAt: new Date(\"2023-08-21T02:54:25.671Z\"),\n      id: \"<value>\",\n      description: \"merge when gratefully sparse hmph throughout honesty untried gripping um\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      properties: {\n        repositoryOwner: \"polarsource\",\n        repositoryName: \"private_repo\",\n        permission: \"push\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-01-04T13:03:27.870Z\"),\n      modifiedAt: new Date(\"2023-05-08T00:47:14.556Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-25T12:22:42.430Z\"),\n        modifiedAt: new Date(\"2023-03-03T22:39:55.256Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-04-05T03:50:05.028Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        createdAt: new Date(\"2023-05-08T00:47:14.556Z\"),\n        modifiedAt: new Date(\"2023-02-20T12:28:33.166Z\"),\n        id: \"<value>\",\n        description: \"ick form ack lest plus worriedly gifted\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          archived: {\n            \"key\": false,\n          },\n          files: [\n            \"<value>\",\n          ],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-03-12T10:35:36.881Z\"),\n      modifiedAt: new Date(\"2025-04-12T13:10:16.426Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-03-29T21:56:48.008Z\"),\n        modifiedAt: new Date(\"2025-07-18T16:16:40.562Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-11-01T21:51:36.732Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        createdAt: new Date(\"2025-04-12T13:10:16.426Z\"),\n        modifiedAt: new Date(\"2024-03-08T05:20:11.943Z\"),\n        id: \"<value>\",\n        description: \"incidentally immense scotch meh quaff generously supposing however ugh kindly\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          archived: {\n            \"key\": false,\n          },\n          files: [\n            \"<value>\",\n          ],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-01-02T13:54:42.243Z\"),\n      modifiedAt: new Date(\"2024-02-25T11:58:59.486Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-08T07:44:28.757Z\"),\n        modifiedAt: new Date(\"2024-08-31T04:19:19.970Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 549371,\n          \"key2\": 502350,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-07-15T16:39:59.264Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        createdAt: new Date(\"2024-02-25T11:58:59.486Z\"),\n        modifiedAt: new Date(\"2025-04-04T12:08:04.168Z\"),\n        id: \"<value>\",\n        description: \"oil painfully spring requirement import lest to tragic\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          archived: {\n            \"key\": false,\n          },\n          files: [\n            \"<value>\",\n          ],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-11-12T14:26:42.882Z\"),\n      modifiedAt: new Date(\"2024-05-27T05:08:06.235Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://heavy-beret.com/\",\n      expiresAt: new Date(\"2023-02-25T02:26:48.460Z\"),\n      successUrl: \"https://sardonic-final.info/\",\n      embedOrigin: \"<value>\",\n      amount: 962818,\n      taxAmount: 6400,\n      currency: \"Yen\",\n      subtotalAmount: 648726,\n      totalAmount: 210702,\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      isDiscountApplicable: false,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: false,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n        \"key2\": \"<value>\",\n      },\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2024-02-27T04:46:39.621Z\"),\n          modifiedAt: new Date(\"2024-02-07T04:30:48.802Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"really capitalize um restructure prickly rationale certainly these restfully\",\n          recurringInterval: \"year\",\n          isRecurring: true,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2025-11-19T15:59:15.588Z\"),\n              modifiedAt: new Date(\"2023-11-17T00:11:23.972Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"one_time\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 82334,\n              maximumAmount: 50275,\n              presetAmount: 473871,\n            },\n          ],\n          benefits: [\n            {\n              createdAt: new Date(\"2025-10-01T00:10:58.922Z\"),\n              modifiedAt: new Date(\"2023-01-30T18:58:55.355Z\"),\n              id: \"<value>\",\n              type: \"downloadables\",\n              description: \"via archaeology scientific forsaken who suspiciously mmm bleak\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/usr/include\",\n              mimeType: \"<value>\",\n              size: 169862,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2023-06-26T19:30:29.818Z\"),\n              version: \"<value>\",\n              isUploaded: true,\n              createdAt: new Date(\"2024-10-05T17:30:08.836Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://spanish-essence.name\",\n            },\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/etc/mail\",\n              mimeType: \"<value>\",\n              size: 852701,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2025-01-15T00:45:10.927Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2023-01-18T00:51:17.880Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://best-pharmacopoeia.org/\",\n            },\n          ],\n        },\n        {\n          createdAt: new Date(\"2024-03-12T06:20:21.161Z\"),\n          modifiedAt: new Date(\"2024-06-27T20:20:27.400Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"since hollow massive offensively painfully what questionably destock pish\",\n          recurringInterval: \"year\",\n          isRecurring: true,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2024-04-03T00:20:23.805Z\"),\n              modifiedAt: new Date(\"2025-11-21T05:56:48.487Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"one_time\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              priceAmount: 648726,\n            },\n            {\n              createdAt: new Date(\"2025-04-20T22:18:45.464Z\"),\n              modifiedAt: new Date(\"2024-10-18T10:45:47.767Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"year\",\n              priceCurrency: \"<value>\",\n              priceAmount: 688646,\n            },\n          ],\n          benefits: [\n\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/etc/namedb\",\n              mimeType: \"<value>\",\n              size: 721019,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-01-18T04:40:39.968Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2023-09-29T18:20:07.088Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://similar-impostor.info/\",\n            },\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/root\",\n              mimeType: \"<value>\",\n              size: 907325,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2023-02-26T14:50:51.751Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2025-03-01T12:36:21.395Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://thin-illusion.org/\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2023-09-09T02:18:18.878Z\"),\n        modifiedAt: new Date(\"2025-12-30T17:25:31.182Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"roundabout gah oh hm over\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2025-07-31T13:25:31.669Z\"),\n            modifiedAt: new Date(\"2023-11-12T09:40:10.044Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"year\",\n          },\n          {\n            createdAt: new Date(\"2025-06-25T22:47:14.264Z\"),\n            modifiedAt: new Date(\"2025-01-27T19:10:37.564Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 18677,\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2024-05-22T12:15:14.230Z\"),\n            modifiedAt: new Date(\"2025-05-10T15:49:09.927Z\"),\n            id: \"<value>\",\n            type: \"downloadables\",\n            description: \"consequently pant ha\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n          {\n            createdAt: new Date(\"2024-09-05T11:03:30.226Z\"),\n            modifiedAt: new Date(\"2024-10-27T06:30:15.454Z\"),\n            id: \"<value>\",\n            type: \"custom\",\n            description: \"failing clonk kowtow kookily sunbathe ugh delirious now boohoo lean\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            createdAt: new Date(\"2024-04-20T16:45:08.626Z\"),\n            modifiedAt: new Date(\"2025-10-27T21:24:45.236Z\"),\n            id: \"<value>\",\n            type: \"github_repository\",\n            description: \"until tenderly chapel quantify optimistically excluding aw because amongst emulsify\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc/ppp\",\n            mimeType: \"<value>\",\n            size: 933572,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-12-28T08:49:03.364Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-07-14T04:00:39.280Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://back-pear.name/\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2023-04-02T00:05:42.586Z\"),\n        modifiedAt: new Date(\"2024-12-15T03:02:38.803Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        priceAmount: 825463,\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 41338,\n        type: \"percentage\",\n        basisPoints: 818655,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-01-09T04:38:53.436Z\"),\n            modifiedAt: new Date(\"2024-12-24T07:52:43.518Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {\n              options: [\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n              ],\n            },\n          },\n          order: 552387,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-04-28T02:33:08.095Z\"),\n            modifiedAt: new Date(\"2025-07-27T09:28:36.892Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 576333,\n          required: false,\n        },\n      ],\n      customerMetadata: {\n        \"key\": 667273,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-10-04T13:06:10.658Z\"),\n      modifiedAt: new Date(\"2024-10-02T21:25:15.366Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://square-cafe.biz/\",\n      expiresAt: new Date(\"2025-03-25T08:55:11.873Z\"),\n      successUrl: \"https://physical-import.name/\",\n      embedOrigin: \"<value>\",\n      amount: 245418,\n      taxAmount: 624213,\n      currency: \"Naira\",\n      subtotalAmount: 24587,\n      totalAmount: 447013,\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      isDiscountApplicable: true,\n      isFreeProductPrice: true,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: true,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n      },\n      metadata: {\n\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2024-03-12T12:25:44.387Z\"),\n          modifiedAt: new Date(\"2024-03-10T17:45:08.857Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"on likewise growing capsize lest overcook vice independence strategy magnetize\",\n          recurringInterval: \"year\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n\n          ],\n          benefits: [\n            {\n              createdAt: new Date(\"2023-02-02T21:51:07.680Z\"),\n              modifiedAt: new Date(\"2025-02-22T05:03:37.259Z\"),\n              id: \"<value>\",\n              type: \"github_repository\",\n              description: \"kiddingly likewise inveigle\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n            {\n              createdAt: new Date(\"2024-03-23T22:28:05.345Z\"),\n              modifiedAt: new Date(\"2025-04-30T11:01:37.991Z\"),\n              id: \"<value>\",\n              type: \"license_keys\",\n              description: \"repeatedly perky capsize shred loudly though whoever millet\",\n              selectable: false,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/home\",\n              mimeType: \"<value>\",\n              size: 339556,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-09-01T01:36:50.867Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2025-06-17T05:19:25.570Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://forceful-peninsula.name/\",\n            },\n          ],\n        },\n        {\n          createdAt: new Date(\"2023-01-07T16:39:06.170Z\"),\n          modifiedAt: new Date(\"2024-07-02T04:06:47.300Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"ruin wiggly abaft\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n\n          ],\n          benefits: [\n            {\n              createdAt: new Date(\"2023-01-13T15:01:23.486Z\"),\n              modifiedAt: new Date(\"2025-01-22T18:51:34.092Z\"),\n              id: \"<value>\",\n              type: \"discord\",\n              description: \"that resource whoa scarcely\",\n              selectable: true,\n              deletable: true,\n              organizationId: \"<value>\",\n            },\n            {\n              createdAt: new Date(\"2025-10-31T20:58:36.719Z\"),\n              modifiedAt: new Date(\"2025-11-05T11:15:53.647Z\"),\n              id: \"<value>\",\n              type: \"custom\",\n              description: \"recovery queasily despite concrete independence celsius ouch\",\n              selectable: true,\n              deletable: true,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/boot\",\n              mimeType: \"<value>\",\n              size: 913510,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2023-09-10T21:22:45.561Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2023-05-08T03:57:28.293Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://stable-fort.org\",\n            },\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/System\",\n              mimeType: \"<value>\",\n              size: 604454,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-05-15T10:29:39.214Z\"),\n              version: \"<value>\",\n              isUploaded: true,\n              createdAt: new Date(\"2024-01-19T16:36:20.955Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://simplistic-simple.biz\",\n            },\n          ],\n        },\n        {\n          createdAt: new Date(\"2024-04-10T05:20:18.358Z\"),\n          modifiedAt: new Date(\"2023-06-22T09:12:37.578Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"yesterday bleakly sheathe yawningly tinted untrue\",\n          recurringInterval: \"month\",\n          isRecurring: true,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2025-10-20T04:48:05.954Z\"),\n              modifiedAt: new Date(\"2024-03-12T21:45:21.173Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"recurring\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 316079,\n              maximumAmount: 743040,\n              presetAmount: 306145,\n            },\n            {\n              createdAt: new Date(\"2024-10-03T07:55:07.025Z\"),\n              modifiedAt: new Date(\"2023-09-26T23:29:16.889Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"recurring\",\n              recurringInterval: \"year\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 24587,\n              maximumAmount: 447013,\n              presetAmount: 371362,\n            },\n            {\n              createdAt: new Date(\"2025-08-02T14:33:19.677Z\"),\n              modifiedAt: new Date(\"2024-11-17T10:36:50.593Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 995460,\n              maximumAmount: 461061,\n              presetAmount: 134244,\n            },\n          ],\n          benefits: [\n            {\n              createdAt: new Date(\"2024-07-07T23:56:09.903Z\"),\n              modifiedAt: new Date(\"2024-09-12T11:04:17.318Z\"),\n              id: \"<value>\",\n              type: \"discord\",\n              description: \"knottily huzzah ick\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n            {\n              createdAt: new Date(\"2024-02-14T16:02:41.163Z\"),\n              modifiedAt: new Date(\"2023-04-28T06:23:40.197Z\"),\n              id: \"<value>\",\n              type: \"discord\",\n              description: \"before inasmuch appreciate\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/usr/sbin\",\n              mimeType: \"<value>\",\n              size: 165243,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-06-20T00:42:56.885Z\"),\n              version: \"<value>\",\n              isUploaded: true,\n              createdAt: new Date(\"2024-06-03T23:30:54.188Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://pleasing-provider.biz\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2025-03-02T07:44:00.713Z\"),\n        modifiedAt: new Date(\"2024-11-07T21:48:42.673Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"recommendation soupy tuxedo emboss unlike inscribe frankly zowie um\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2024-03-10T17:45:08.857Z\"),\n            modifiedAt: new Date(\"2025-08-21T20:24:37.634Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 688507,\n            maximumAmount: 907403,\n            presetAmount: 166544,\n          },\n          {\n            createdAt: new Date(\"2025-05-08T16:44:17.277Z\"),\n            modifiedAt: new Date(\"2023-12-03T09:52:08.965Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 751656,\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2023-08-11T22:46:57.443Z\"),\n            modifiedAt: new Date(\"2023-04-27T10:34:15.837Z\"),\n            id: \"<value>\",\n            type: \"github_repository\",\n            description: \"of sit jut\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            createdAt: new Date(\"2024-08-22T01:13:57.044Z\"),\n            modifiedAt: new Date(\"2025-09-18T08:20:48.636Z\"),\n            id: \"<value>\",\n            type: \"downloadables\",\n            description: \"relative curiously grim to\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/home/user\",\n            mimeType: \"<value>\",\n            size: 558866,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-07-21T12:30:10.295Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-11-12T16:29:20.536Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://silver-contractor.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/ports\",\n            mimeType: \"<value>\",\n            size: 934999,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-09-19T02:05:47.978Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-04-19T21:25:09.653Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://ashamed-platter.com\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2024-04-13T13:45:30.435Z\"),\n        modifiedAt: new Date(\"2025-12-31T21:16:51.807Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"percentage\",\n        basisPoints: 701511,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-06-06T19:17:28.589Z\"),\n            modifiedAt: new Date(\"2025-02-23T18:15:44.994Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 343034,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 177975,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-01-18T13:42:58.942Z\"),\n            modifiedAt: new Date(\"2025-09-27T11:53:33.602Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 388366,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 492106,\n          required: true,\n        },\n      ],\n      customerMetadata: {\n        \"key\": 354923,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerCreatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-11-05T00:02:45.979Z\"),\n      modifiedAt: new Date(\"2025-11-25T19:38:56.737Z\"),\n      metadata: {\n        \"key\": true,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-12-23T01:13:50.641Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerDeletedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-23T22:06:15.045Z\"),\n      modifiedAt: new Date(\"2025-04-24T07:05:50.504Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-05-11T04:45:12.206Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerStateChangedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2024-04-26T07:11:39.517Z\"),\n      modifiedAt: new Date(\"2023-06-21T11:54:36.368Z\"),\n      metadata: {\n        \"key\": 661266,\n        \"key1\": 162534,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-11-01T16:24:29.890Z\"),\n      activeSubscriptions: [\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-12-23T00:00:00.457Z\"),\n          modifiedAt: new Date(\"2024-03-19T21:14:46.825Z\"),\n          metadata: {\n\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"year\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          priceId: \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n        },\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-06-03T06:20:38.244Z\"),\n          modifiedAt: new Date(\"2025-06-03T23:57:08.417Z\"),\n          metadata: {\n            \"key\": 903699,\n            \"key1\": 716732,\n            \"key2\": true,\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"month\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          priceId: \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n        },\n      ],\n      grantedBenefits: [\n\n      ],\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerUpdatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-10-11T01:52:16.669Z\"),\n      modifiedAt: new Date(\"2024-07-17T00:54:05.167Z\"),\n      metadata: {\n        \"key\": 906944,\n        \"key1\": \"<value>\",\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-10-11T03:02:11.318Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-11-11T12:46:15.007Z\"),\n      modifiedAt: new Date(\"2024-03-23T03:54:38.261Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n      },\n      status: \"<value>\",\n      subtotalAmount: 485666,\n      discountAmount: 81588,\n      netAmount: 605593,\n      amount: 738083,\n      taxAmount: 409401,\n      totalAmount: 229323,\n      refundedAmount: 543579,\n      refundedTaxAmount: 909216,\n      currency: \"Namibia Dollar\",\n      billingReason: \"subscription_update\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-09-30T05:32:23.391Z\"),\n        modifiedAt: new Date(\"2024-07-09T15:43:21.363Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-08-11T14:36:04.800Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Madisen.Walker@gmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2025-01-19T08:45:08.985Z\"),\n        modifiedAt: new Date(\"2023-05-22T16:28:34.624Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"er especially but searchingly except married whereas healthily the adolescent\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-03-27T08:15:55.821Z\"),\n        modifiedAt: new Date(\"2023-11-08T15:41:27.758Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 81588,\n        maximumAmount: 605593,\n        presetAmount: 738083,\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"percentage\",\n        basisPoints: 818565,\n        createdAt: new Date(\"2023-06-21T07:48:19.604Z\"),\n        modifiedAt: new Date(\"2025-09-20T12:07:51.926Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-10-26T04:20:46.828Z\"),\n        endsAt: new Date(\"2024-02-21T07:49:51.858Z\"),\n        maxRedemptions: 162785,\n        redemptionsCount: 667520,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        createdAt: new Date(\"2023-07-16T15:15:20.704Z\"),\n        modifiedAt: new Date(\"2025-07-20T01:25:23.024Z\"),\n        id: \"<value>\",\n        amount: 913744,\n        currency: \"South Sudanese pound\",\n        recurringInterval: \"month\",\n        status: \"incomplete_expired\",\n        currentPeriodStart: new Date(\"2025-09-25T00:56:37.047Z\"),\n        currentPeriodEnd: new Date(\"2024-09-20T00:41:47.938Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2025-01-27T10:45:43.275Z\"),\n        startedAt: new Date(\"2024-07-14T13:43:10.873Z\"),\n        endsAt: new Date(\"2024-09-26T20:33:45.975Z\"),\n        endedAt: new Date(\"2024-05-22T17:48:45.407Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"switched_service\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2025-09-21T14:39:10.503Z\"),\n          modifiedAt: new Date(\"2024-06-16T21:40:05.453Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 575297,\n          taxAmount: 447313,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2023-09-19T11:57:28.594Z\"),\n          modifiedAt: new Date(\"2025-03-10T19:31:46.233Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 392620,\n          taxAmount: 171855,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderRefundedPost({\n    data: {\n      createdAt: new Date(\"2023-01-02T23:38:59.363Z\"),\n      modifiedAt: new Date(\"2025-02-28T12:31:35.473Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": true,\n        \"key1\": true,\n        \"key2\": \"<value>\",\n      },\n      status: \"<value>\",\n      subtotalAmount: 528865,\n      discountAmount: 824083,\n      netAmount: 158895,\n      amount: 509231,\n      taxAmount: 890779,\n      totalAmount: 952371,\n      refundedAmount: 607176,\n      refundedTaxAmount: 142855,\n      currency: \"Dalasi\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-02-26T15:57:28.522Z\"),\n        modifiedAt: new Date(\"2023-09-11T11:53:56.379Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-10-03T14:13:24.321Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Hipolito63@gmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2023-10-24T08:02:26.369Z\"),\n        modifiedAt: new Date(\"2023-02-24T04:06:14.907Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"apropos morning fess embody outlandish kit metallic willing\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-10-05T18:25:49.221Z\"),\n        modifiedAt: new Date(\"2025-10-25T11:18:00.181Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"percentage\",\n        basisPoints: 374000,\n        createdAt: new Date(\"2025-05-14T18:27:08.842Z\"),\n        modifiedAt: new Date(\"2024-03-29T01:39:29.288Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-03-08T18:37:23.056Z\"),\n        endsAt: new Date(\"2025-08-05T12:12:48.244Z\"),\n        maxRedemptions: 798101,\n        redemptionsCount: 4308,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2024-12-19T01:36:36.664Z\"),\n        modifiedAt: new Date(\"2025-07-25T07:36:05.277Z\"),\n        id: \"<value>\",\n        amount: 586546,\n        currency: \"Dobra\",\n        recurringInterval: \"month\",\n        status: \"incomplete\",\n        currentPeriodStart: new Date(\"2024-12-09T21:53:19.866Z\"),\n        currentPeriodEnd: new Date(\"2025-09-11T14:44:54.680Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2025-05-25T20:59:26.748Z\"),\n        startedAt: new Date(\"2024-11-16T16:43:07.776Z\"),\n        endsAt: new Date(\"2023-11-28T12:56:45.736Z\"),\n        endedAt: new Date(\"2024-11-08T08:38:56.844Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"customer_service\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2024-04-21T09:48:26.479Z\"),\n          modifiedAt: new Date(\"2023-03-11T03:15:27.257Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 531036,\n          taxAmount: 690659,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-08-12T18:45:04.236Z\"),\n      modifiedAt: new Date(\"2025-12-29T16:35:25.119Z\"),\n      id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: \"https://devoted-bump.net\",\n      email: \"Shaylee26@hotmail.com\",\n      website: \"<value>\",\n      socials: [\n        {\n          platform: \"tiktok\",\n          url: \"https://bright-bug.biz\",\n        },\n      ],\n      detailsSubmittedAt: new Date(\"2025-09-21T05:55:39.282Z\"),\n      featureSettings: {},\n      subscriptionSettings: {\n        allowMultipleSubscriptions: false,\n        allowCustomerUpdates: true,\n        prorationBehavior: \"prorate\",\n      },\n      bio: \"<value>\",\n      company: \"Glover and Sons\",\n      blog: \"<value>\",\n      location: \"<value>\",\n      twitterUsername: \"<value>\",\n      pledgeMinimumAmount: 949055,\n      pledgeBadgeShowAmount: false,\n      defaultUpfrontSplitToContributors: 950986,\n      profileSettings: {},\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["pledge.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointpledgeCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-03-12T00:19:41.487Z\"),\n      modifiedAt: new Date(\"2023-04-19T01:42:59.169Z\"),\n      id: \"<value>\",\n      amount: 330877,\n      currency: \"Jamaican Dollar\",\n      state: \"disputed\",\n      type: \"pay_directly\",\n      issue: {\n        id: \"66524b69-aa0b-47ac-bb9a-0cee5d3a9110\",\n        platform: \"github\",\n        number: 280857,\n        title: \"<value>\",\n        state: \"open\",\n        issueCreatedAt: new Date(\"2024-02-26T00:33:35.289Z\"),\n        needsConfirmationSolved: false,\n        funding: {},\n        repository: {\n          id: \"356e14cb-87a4-484c-bcfa-ebfe50487706\",\n          platform: \"github\",\n          isPrivate: true,\n          name: \"MyOrg\",\n          description: \"different premium tinderbox peter under often buzzing hastily\",\n          stars: 1337,\n          license: \"<value>\",\n          homepage: \"<value>\",\n          profileSettings: {},\n          organization: {\n            id: \"29159f56-74c0-464d-b598-8d5bc3b9cdda\",\n            platform: \"github\",\n            name: \"<value>\",\n            avatarUrl: \"https://frightened-poppy.com/\",\n            isPersonal: false,\n            bio: \"<value>\",\n            prettyName: \"<value>\",\n            company: \"Bailey - Towne\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            email: \"Cortez_Stehr70@yahoo.com\",\n            twitterUsername: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n          },\n          internalOrganization: {\n            createdAt: new Date(\"2025-01-03T15:27:13.109Z\"),\n            modifiedAt: new Date(\"2024-02-15T22:10:17.041Z\"),\n            id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            name: \"<value>\",\n            slug: \"<value>\",\n            avatarUrl: \"https://hard-to-find-thyme.org\",\n            email: \"Peter.Windler-Schimmel@gmail.com\",\n            website: \"<value>\",\n            socials: [\n              {\n                platform: \"instagram\",\n                url: \"https://muted-wallaby.com/\",\n              },\n              {\n                platform: \"facebook\",\n                url: \"https://warmhearted-tomography.net/\",\n              },\n            ],\n            detailsSubmittedAt: new Date(\"2024-10-15T23:04:30.538Z\"),\n            featureSettings: {},\n            subscriptionSettings: {\n              allowMultipleSubscriptions: false,\n              allowCustomerUpdates: true,\n              prorationBehavior: \"prorate\",\n            },\n            bio: \"<value>\",\n            company: \"Aufderhar - Moore\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            twitterUsername: \"<value>\",\n            pledgeMinimumAmount: 832231,\n            pledgeBadgeShowAmount: true,\n            defaultUpfrontSplitToContributors: 314718,\n            profileSettings: {},\n          },\n        },\n        pledgeBadgeCurrentlyEmbedded: true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["pledge.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointpledgeUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-11-29T00:10:39.674Z\"),\n      modifiedAt: new Date(\"2025-10-02T21:42:49.754Z\"),\n      id: \"<value>\",\n      amount: 634567,\n      currency: \"Singapore Dollar\",\n      state: \"refunded\",\n      type: \"pay_on_completion\",\n      issue: {\n        id: \"d2e1349d-085a-441c-abf4-379a1f21d0da\",\n        platform: \"github\",\n        number: 218372,\n        title: \"<value>\",\n        state: \"closed\",\n        issueCreatedAt: new Date(\"2024-08-12T14:08:31.083Z\"),\n        needsConfirmationSolved: true,\n        funding: {},\n        repository: {\n          id: \"814bd7c6-3412-4f11-b523-7b38c659f44a\",\n          platform: \"github\",\n          isPrivate: false,\n          name: \"MyOrg\",\n          description: \"hm however microchip\",\n          stars: 1337,\n          license: \"<value>\",\n          homepage: \"<value>\",\n          profileSettings: {},\n          organization: {\n            id: \"3ddd5cc2-de10-41ef-baa1-7551cf671cc3\",\n            platform: \"github\",\n            name: \"<value>\",\n            avatarUrl: \"https://gummy-interviewer.biz\",\n            isPersonal: false,\n            bio: \"<value>\",\n            prettyName: \"<value>\",\n            company: \"Ferry - Tremblay\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            email: \"Reggie_Crist@yahoo.com\",\n            twitterUsername: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n          },\n          internalOrganization: {\n            createdAt: new Date(\"2025-12-13T11:00:39.217Z\"),\n            modifiedAt: new Date(\"2025-12-02T09:51:26.214Z\"),\n            id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            name: \"<value>\",\n            slug: \"<value>\",\n            avatarUrl: \"https://memorable-numeracy.com/\",\n            email: \"Reginald_Jaskolski31@gmail.com\",\n            website: \"<value>\",\n            socials: [\n              {\n                platform: \"facebook\",\n                url: \"https://quarrelsome-traditionalism.biz/\",\n              },\n            ],\n            detailsSubmittedAt: new Date(\"2025-02-01T20:03:12.413Z\"),\n            featureSettings: {},\n            subscriptionSettings: {\n              allowMultipleSubscriptions: true,\n              allowCustomerUpdates: true,\n              prorationBehavior: \"invoice\",\n            },\n            bio: \"<value>\",\n            company: \"Miller LLC\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            twitterUsername: \"<value>\",\n            pledgeMinimumAmount: 502976,\n            pledgeBadgeShowAmount: true,\n            defaultUpfrontSplitToContributors: 99860,\n            profileSettings: {},\n          },\n        },\n        pledgeBadgeCurrentlyEmbedded: true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-03-27T06:36:20.130Z\"),\n      modifiedAt: new Date(\"2025-04-21T12:05:16.637Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"into horst metal grimy clinch big grounded industrialize\",\n      recurringInterval: \"month\",\n      isRecurring: true,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-12-07T23:31:39.577Z\"),\n          modifiedAt: new Date(\"2024-04-25T10:21:28.587Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n        {\n          createdAt: new Date(\"2024-09-06T02:23:36.299Z\"),\n          modifiedAt: new Date(\"2024-10-09T12:20:00.039Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 66164,\n          maximumAmount: 215783,\n          presetAmount: 203043,\n        },\n      ],\n      benefits: [\n        {\n          createdAt: new Date(\"2023-12-13T12:26:05.455Z\"),\n          modifiedAt: new Date(\"2024-04-17T08:36:36.851Z\"),\n          id: \"<value>\",\n          description: \"before requite than throughout\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            note: \"<value>\",\n          },\n          isTaxApplicable: false,\n        },\n        {\n          createdAt: new Date(\"2024-04-16T11:54:19.983Z\"),\n          modifiedAt: new Date(\"2024-09-03T21:44:52.825Z\"),\n          id: \"<value>\",\n          description: \"unaccountably beneath opposite bah hose fellow surge frankly\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            guildId: \"<id>\",\n            roleId: \"<id>\",\n            guildToken: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-07-03T13:23:53.646Z\"),\n          modifiedAt: new Date(\"2025-10-22T11:14:29.082Z\"),\n          id: \"<value>\",\n          description: \"though pace shakily stack carefully wherever\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            archived: {\n              \"key\": false,\n            },\n            files: [\n              \"<value>\",\n            ],\n          },\n        },\n      ],\n      medias: [\n\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-10-19T10:03:16.084Z\"),\n            modifiedAt: new Date(\"2024-05-28T07:55:26.633Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 819470,\n          required: false,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-06-25T03:46:32.479Z\"),\n      modifiedAt: new Date(\"2023-06-04T01:47:33.158Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"er ick birdcage\",\n      recurringInterval: \"month\",\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 498845,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-04-14T23:22:06.974Z\"),\n          modifiedAt: new Date(\"2023-11-27T16:49:54.775Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 147529,\n          maximumAmount: 389871,\n          presetAmount: 137830,\n        },\n      ],\n      benefits: [\n        {\n          createdAt: new Date(\"2025-10-01T01:25:21.739Z\"),\n          modifiedAt: new Date(\"2023-04-13T14:11:42.240Z\"),\n          id: \"<value>\",\n          description: \"ick nauseate louse over snoop consequently glossy probe\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            guildId: \"<id>\",\n            roleId: \"<id>\",\n            guildToken: \"<value>\",\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/etc/defaults\",\n          mimeType: \"<value>\",\n          size: 132814,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2024-04-24T09:18:36.586Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2024-02-12T19:04:33.442Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://kaleidoscopic-quart.name/\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/mnt\",\n          mimeType: \"<value>\",\n          size: 173885,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2023-01-02T06:55:06.076Z\"),\n          version: \"<value>\",\n          isUploaded: true,\n          createdAt: new Date(\"2024-08-06T03:21:47.848Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://total-pigpen.com/\",\n        },\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-05-09T01:31:02.965Z\"),\n            modifiedAt: new Date(\"2025-12-17T05:54:42.907Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 513990,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 326849,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-12-29T06:17:19.062Z\"),\n      modifiedAt: new Date(\"2023-06-28T13:27:59.588Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": false,\n        \"key1\": true,\n      },\n      status: \"canceled\",\n      reason: \"fraudulent\",\n      amount: 872325,\n      taxAmount: 273821,\n      currency: \"New Israeli Sheqel\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: true,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-01-23T03:57:31.216Z\"),\n      modifiedAt: new Date(\"2024-04-24T01:16:45.429Z\"),\n      id: \"<value>\",\n      metadata: {\n\n      },\n      status: \"succeeded\",\n      reason: \"other\",\n      amount: 397442,\n      taxAmount: 509120,\n      currency: \"Rufiyaa\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    data: {\n      createdAt: new Date(\"2023-09-17T11:03:44.679Z\"),\n      modifiedAt: new Date(\"2025-07-24T20:02:17.426Z\"),\n      id: \"<value>\",\n      amount: 116760,\n      currency: \"Quetzal\",\n      recurringInterval: \"month\",\n      status: \"incomplete\",\n      currentPeriodStart: new Date(\"2023-08-25T00:14:50.252Z\"),\n      currentPeriodEnd: new Date(\"2023-12-10T18:25:01.577Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2024-07-05T14:07:23.099Z\"),\n      startedAt: new Date(\"2024-06-30T08:12:48.355Z\"),\n      endsAt: new Date(\"2023-06-29T07:42:54.895Z\"),\n      endedAt: new Date(\"2025-10-30T02:51:06.576Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"switched_service\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": true,\n        \"key1\": \"<value>\",\n        \"key2\": 615212,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-25T08:49:41.567Z\"),\n        modifiedAt: new Date(\"2025-09-05T08:50:11.879Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-04-06T03:26:32.986Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Marisol.Wisozk@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-10-30T00:00:20.195Z\"),\n        modifiedAt: new Date(\"2025-03-11T01:30:09.272Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"thoughtfully skyline ouch openly aboard moisten graffiti\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-05-08T23:16:06.519Z\"),\n            modifiedAt: new Date(\"2023-12-23T21:06:29.057Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2023-08-25T00:14:50.252Z\"),\n            modifiedAt: new Date(\"2023-12-10T18:25:01.577Z\"),\n            id: \"<value>\",\n            description: \"repeat catalyst wiggly table while amidst during\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2023-06-02T05:19:01.352Z\"),\n            modifiedAt: new Date(\"2023-07-07T22:15:53.860Z\"),\n            id: \"<value>\",\n            description: \"until below barring\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2024-03-04T01:17:37.967Z\"),\n            modifiedAt: new Date(\"2023-06-12T20:00:04.431Z\"),\n            id: \"<value>\",\n            description: \"um across colorfully\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"pull\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/boot\",\n            mimeType: \"<value>\",\n            size: 129584,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-09-13T10:52:51.388Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-10-14T14:47:30.399Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://shabby-testimonial.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/dev\",\n            mimeType: \"<value>\",\n            size: 564626,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-12-12T13:31:49.606Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2025-11-11T09:55:50.927Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://grim-tenant.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/rescue\",\n            mimeType: \"<value>\",\n            size: 294552,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-03-31T13:48:09.792Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-07-16T18:15:55.505Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://mature-pressure.net/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-02-17T13:39:50.808Z\"),\n              modifiedAt: new Date(\"2025-03-27T06:27:09.035Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 775460,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 358721,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-01-21T03:01:14.288Z\"),\n              modifiedAt: new Date(\"2025-03-03T05:42:43.472Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 95354,\n            required: true,\n          },\n        ],\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 686324,\n        type: \"percentage\",\n        amount: 897273,\n        currency: \"Venezuelan bolívar\",\n        createdAt: new Date(\"2023-08-10T01:02:56.028Z\"),\n        modifiedAt: new Date(\"2025-07-01T19:13:55.103Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 675072,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-12-04T16:51:09.966Z\"),\n        endsAt: new Date(\"2023-09-05T21:13:45.582Z\"),\n        maxRedemptions: 13893,\n        redemptionsCount: 780374,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2023-03-31T14:01:05.007Z\"),\n        modifiedAt: new Date(\"2023-08-21T14:23:30.730Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"month\",\n      },\n      prices: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    data: {\n      createdAt: new Date(\"2024-02-08T10:04:43.200Z\"),\n      modifiedAt: new Date(\"2023-02-20T09:16:44.963Z\"),\n      id: \"<value>\",\n      amount: 384017,\n      currency: \"Nakfa\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2025-08-29T23:51:26.505Z\"),\n      currentPeriodEnd: new Date(\"2024-01-30T14:57:29.126Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-05-31T10:57:35.559Z\"),\n      startedAt: new Date(\"2024-10-31T08:13:37.012Z\"),\n      endsAt: new Date(\"2023-08-22T21:50:14.399Z\"),\n      endedAt: new Date(\"2023-07-13T20:08:34.251Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n        \"key2\": 199269,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-12-04T19:57:16.999Z\"),\n        modifiedAt: new Date(\"2025-01-03T00:48:16.846Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-06-28T20:02:35.117Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Jazlyn_Botsford@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2025-10-12T16:18:30.796Z\"),\n        modifiedAt: new Date(\"2024-02-08T11:59:00.133Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"excluding pfft upside-down ick rust bestride circa\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-02-25T21:11:48.890Z\"),\n            modifiedAt: new Date(\"2023-10-06T06:04:45.294Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 803599,\n            maximumAmount: 886856,\n            presetAmount: 360058,\n          },\n        ],\n        benefits: [\n\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/root\",\n            mimeType: \"<value>\",\n            size: 856792,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-05-15T05:51:11.123Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-10-19T06:08:48.337Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://delirious-stir-fry.name\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/mnt\",\n            mimeType: \"<value>\",\n            size: 683673,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-12-28T00:16:36.233Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-07-03T23:27:48.693Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://self-reliant-comestible.org\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-05-31T10:57:35.559Z\"),\n              modifiedAt: new Date(\"2024-10-31T08:13:37.012Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 765648,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 559389,\n        type: \"percentage\",\n        basisPoints: 770894,\n        createdAt: new Date(\"2023-08-02T14:46:23.927Z\"),\n        modifiedAt: new Date(\"2025-09-03T03:41:33.199Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": 925408,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-10-27T13:26:08.325Z\"),\n        endsAt: new Date(\"2025-08-04T08:26:05.471Z\"),\n        maxRedemptions: 125035,\n        redemptionsCount: 255928,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2025-06-06T20:18:50.097Z\"),\n        modifiedAt: new Date(\"2023-10-29T03:39:59.256Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        priceAmount: 339100,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-01-03T00:48:16.846Z\"),\n          modifiedAt: new Date(\"2024-03-16T21:08:54.900Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 767689,\n          maximumAmount: 441086,\n          presetAmount: 497112,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-07-03T01:29:40.920Z\"),\n      modifiedAt: new Date(\"2023-02-20T03:35:25.500Z\"),\n      id: \"<value>\",\n      amount: 78980,\n      currency: \"Dong\",\n      recurringInterval: \"month\",\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2025-01-25T02:46:12.208Z\"),\n      currentPeriodEnd: new Date(\"2023-10-08T16:07:22.449Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-10-17T20:21:29.819Z\"),\n      startedAt: new Date(\"2023-02-26T17:52:17.099Z\"),\n      endsAt: new Date(\"2023-07-04T19:46:53.033Z\"),\n      endedAt: new Date(\"2023-09-06T09:33:34.348Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"unused\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 229409,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-01T11:22:10.531Z\"),\n        modifiedAt: new Date(\"2024-06-26T00:08:47.301Z\"),\n        metadata: {\n          \"key\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-05-16T01:12:33.254Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Krystel_Skiles@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-10-31T02:44:33.320Z\"),\n        modifiedAt: new Date(\"2024-06-08T04:17:45.373Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"publication partially afore under subsidy why\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 819907,\n          \"key1\": 966758,\n        },\n        prices: [\n\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2023-02-20T03:35:25.500Z\"),\n            modifiedAt: new Date(\"2023-03-28T13:29:27.613Z\"),\n            id: \"<value>\",\n            description: \"average deer plagiarise carefree qua yippee by capitalise from than\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"pull\",\n            },\n          },\n        ],\n        medias: [\n\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-11-29T01:30:25.624Z\"),\n              modifiedAt: new Date(\"2025-11-25T16:26:54.952Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 144670,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-03-25T07:32:09.500Z\"),\n              modifiedAt: new Date(\"2024-07-07T16:38:42.000Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 819907,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 884463,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 665586,\n        type: \"percentage\",\n        basisPoints: 717090,\n        createdAt: new Date(\"2024-11-25T15:12:50.077Z\"),\n        modifiedAt: new Date(\"2024-02-21T18:53:58.260Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-11-16T14:07:14.983Z\"),\n        endsAt: new Date(\"2025-09-06T05:16:25.831Z\"),\n        maxRedemptions: 552648,\n        redemptionsCount: 691741,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2023-05-12T21:59:55.872Z\"),\n        modifiedAt: new Date(\"2024-05-29T03:00:41.121Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-03-07T15:00:56.495Z\"),\n          modifiedAt: new Date(\"2025-10-04T05:55:28.900Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 626461,\n        },\n        {\n          createdAt: new Date(\"2025-03-02T09:10:39.039Z\"),\n          modifiedAt: new Date(\"2024-01-16T19:00:35.270Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 25452,\n          maximumAmount: 933452,\n          presetAmount: 725754,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-11-29T12:00:55.925Z\"),\n      modifiedAt: new Date(\"2023-03-13T04:36:55.320Z\"),\n      id: \"<value>\",\n      amount: 780683,\n      currency: \"CFP Franc\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2023-06-20T05:55:42.170Z\"),\n      currentPeriodEnd: new Date(\"2024-05-16T17:55:53.899Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2025-10-25T10:04:20.460Z\"),\n      startedAt: new Date(\"2024-09-29T18:36:35.285Z\"),\n      endsAt: new Date(\"2024-02-23T17:26:12.806Z\"),\n      endedAt: new Date(\"2024-01-24T11:12:57.680Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-09-02T15:09:07.489Z\"),\n        modifiedAt: new Date(\"2025-06-23T22:13:15.423Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 182663,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-12-07T07:31:07.439Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Noemi_Gleichner71@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2023-03-09T13:37:07.084Z\"),\n        modifiedAt: new Date(\"2023-09-27T11:29:41.207Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"evenly footrest whoever happy underpants collaborate license irk yuck whether\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": false,\n          \"key1\": 934828,\n        },\n        prices: [\n\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2025-05-05T15:05:02.863Z\"),\n            modifiedAt: new Date(\"2025-11-17T16:25:39.728Z\"),\n            id: \"<value>\",\n            description: \"considering amid scar athwart apropos allegation knavishly\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2024-04-05T10:37:25.336Z\"),\n            modifiedAt: new Date(\"2025-01-29T01:39:55.088Z\"),\n            id: \"<value>\",\n            description: \"begonia verbally blowgun accidentally ick blah altruistic\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 713532,\n                timeframe: \"day\",\n              },\n              activations: {\n                limit: 883164,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 657600,\n            },\n          },\n          {\n            createdAt: new Date(\"2023-01-05T15:16:33.257Z\"),\n            modifiedAt: new Date(\"2025-09-24T13:03:31.087Z\"),\n            id: \"<value>\",\n            description: \"which spew smoggy thoroughly silently\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 920903,\n                timeframe: \"month\",\n              },\n              activations: {\n                limit: 338077,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 77915,\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/opt/lib\",\n            mimeType: \"<value>\",\n            size: 296281,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-10-09T11:50:56.327Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-05-20T13:22:07.886Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://lost-detective.name\",\n          },\n        ],\n        attachedCustomFields: [\n\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 902961,\n        type: \"fixed\",\n        basisPoints: 149973,\n        createdAt: new Date(\"2023-03-27T04:49:53.356Z\"),\n        modifiedAt: new Date(\"2025-06-30T01:25:14.934Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 953242,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-05-26T06:45:28.603Z\"),\n        endsAt: new Date(\"2024-01-15T08:35:53.688Z\"),\n        maxRedemptions: 586120,\n        redemptionsCount: 699352,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2023-05-25T03:41:40.124Z\"),\n        modifiedAt: new Date(\"2025-03-24T11:18:28.141Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-08-02T21:30:57.659Z\"),\n          modifiedAt: new Date(\"2023-10-18T08:45:20.322Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n        },\n        {\n          createdAt: new Date(\"2024-04-20T17:43:03.484Z\"),\n          modifiedAt: new Date(\"2024-07-02T09:45:36.319Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 492830,\n          maximumAmount: 769490,\n          presetAmount: 573396,\n        },\n        {\n          createdAt: new Date(\"2023-02-28T15:08:48.052Z\"),\n          modifiedAt: new Date(\"2024-07-12T16:32:48.057Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 379339,\n          maximumAmount: 206819,\n          presetAmount: 54522,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUncanceledPost({\n    data: {\n      createdAt: new Date(\"2024-06-17T13:11:57.598Z\"),\n      modifiedAt: new Date(\"2025-03-19T00:33:29.972Z\"),\n      id: \"<value>\",\n      amount: 243909,\n      currency: \"Swiss Franc\",\n      recurringInterval: \"month\",\n      status: \"past_due\",\n      currentPeriodStart: new Date(\"2025-04-10T22:53:35.005Z\"),\n      currentPeriodEnd: new Date(\"2025-11-06T14:37:36.152Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-11-20T17:26:51.612Z\"),\n      startedAt: new Date(\"2023-03-17T23:30:29.508Z\"),\n      endsAt: new Date(\"2024-09-26T10:53:58.966Z\"),\n      endedAt: new Date(\"2023-07-03T15:11:27.108Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": 21399,\n        \"key1\": \"<value>\",\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-12-13T17:38:34.053Z\"),\n        modifiedAt: new Date(\"2025-01-30T22:08:30.455Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-04-05T22:18:10.327Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Aurelia7@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2025-01-18T19:23:31.548Z\"),\n        modifiedAt: new Date(\"2025-10-26T16:26:20.901Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"toe grouchy tough why digestive trusting nor\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-09-25T07:47:22.602Z\"),\n            modifiedAt: new Date(\"2023-07-07T10:48:19.585Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n          {\n            createdAt: new Date(\"2025-11-06T14:37:36.152Z\"),\n            modifiedAt: new Date(\"2025-05-03T10:18:29.658Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n          },\n          {\n            createdAt: new Date(\"2023-07-10T12:06:41.430Z\"),\n            modifiedAt: new Date(\"2025-03-15T14:25:14.463Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 271985,\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2025-01-30T22:08:30.455Z\"),\n            modifiedAt: new Date(\"2023-02-02T22:26:23.446Z\"),\n            id: \"<value>\",\n            description: \"yippee vulgarise brr whoever glaring transplant\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              guildToken: \"<value>\",\n            },\n          },\n          {\n            createdAt: new Date(\"2023-05-31T05:38:02.546Z\"),\n            modifiedAt: new Date(\"2025-01-08T21:19:13.910Z\"),\n            id: \"<value>\",\n            description: \"provided whoa gloss whereas tomography misjudge between deeply ah duh\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n          {\n            createdAt: new Date(\"2023-04-15T01:57:40.170Z\"),\n            modifiedAt: new Date(\"2023-03-22T04:24:23.925Z\"),\n            id: \"<value>\",\n            description: \"shovel selfishly softly\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n        ],\n        medias: [\n\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-01-26T13:36:59.644Z\"),\n              modifiedAt: new Date(\"2025-04-24T08:23:27.502Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 322724,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 513038,\n        type: \"fixed\",\n        amount: 397394,\n        currency: \"Cedi\",\n        createdAt: new Date(\"2023-09-27T16:59:20.550Z\"),\n        modifiedAt: new Date(\"2024-08-10T09:10:07.342Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n          \"key1\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-03-21T01:11:20.829Z\"),\n        endsAt: new Date(\"2025-05-08T16:16:52.701Z\"),\n        maxRedemptions: 165579,\n        redemptionsCount: 603449,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2024-02-25T23:13:27.940Z\"),\n        modifiedAt: new Date(\"2025-10-15T05:45:07.118Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-10-13T14:21:09.035Z\"),\n          modifiedAt: new Date(\"2023-06-21T06:00:53.871Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 358515,\n        },\n        {\n          createdAt: new Date(\"2024-01-01T17:59:54.438Z\"),\n          modifiedAt: new Date(\"2025-04-18T01:55:38.007Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-08-16T06:35:49.390Z\"),\n      modifiedAt: new Date(\"2025-11-13T10:48:05.575Z\"),\n      id: \"<value>\",\n      amount: 299644,\n      currency: \"Baht\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2025-10-06T07:01:55.000Z\"),\n      currentPeriodEnd: new Date(\"2025-01-20T06:59:31.349Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-10-04T04:56:04.382Z\"),\n      startedAt: new Date(\"2023-01-22T12:57:07.430Z\"),\n      endsAt: new Date(\"2025-08-08T17:53:12.513Z\"),\n      endedAt: new Date(\"2023-10-08T02:40:52.099Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": 394013,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-09-14T04:37:19.722Z\"),\n        modifiedAt: new Date(\"2025-03-24T00:03:13.207Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": 392900,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-03-10T21:57:02.022Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Abner86@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-08-13T18:10:19.346Z\"),\n        modifiedAt: new Date(\"2024-11-04T08:18:09.170Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"sans now duh mysteriously bleach ack even who joyous\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-11-25T09:50:52.301Z\"),\n            modifiedAt: new Date(\"2025-06-16T22:58:18.488Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"year\",\n          },\n          {\n            createdAt: new Date(\"2025-01-20T06:59:31.349Z\"),\n            modifiedAt: new Date(\"2025-10-02T11:51:36.131Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2025-08-08T17:53:12.513Z\"),\n            modifiedAt: new Date(\"2023-10-08T02:40:52.099Z\"),\n            id: \"<value>\",\n            description: \"crushing rationale phew yet which fibre whereas department\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2024-02-22T02:13:37.066Z\"),\n            modifiedAt: new Date(\"2023-03-20T07:08:33.141Z\"),\n            id: \"<value>\",\n            description: \"bin valuable yippee naturally\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/Library\",\n            mimeType: \"<value>\",\n            size: 12136,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-08-23T08:56:53.557Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2025-11-23T15:10:42.747Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://terrible-request.info\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc\",\n            mimeType: \"<value>\",\n            size: 77973,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-05-08T03:07:17.345Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-07-13T05:37:01.860Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://zealous-minister.com/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-03-05T16:20:52.572Z\"),\n              modifiedAt: new Date(\"2023-04-01T15:22:55.520Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 848282,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 224212,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-01-08T14:04:12.750Z\"),\n              modifiedAt: new Date(\"2023-06-03T02:13:26.324Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 445921,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-03-05T14:45:21.856Z\"),\n              modifiedAt: new Date(\"2025-07-17T05:00:37.853Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 59919,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 948929,\n        type: \"percentage\",\n        basisPoints: 599523,\n        createdAt: new Date(\"2025-02-19T03:27:30.491Z\"),\n        modifiedAt: new Date(\"2023-02-15T16:23:44.018Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-04-11T22:23:28.500Z\"),\n        endsAt: new Date(\"2024-10-23T19:33:31.827Z\"),\n        maxRedemptions: 836331,\n        redemptionsCount: 336922,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2025-08-15T22:46:09.024Z\"),\n        modifiedAt: new Date(\"2023-10-31T03:53:53.771Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 740469,\n        maximumAmount: 560596,\n        presetAmount: 628247,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-01-12T01:41:20.021Z\"),\n          modifiedAt: new Date(\"2023-07-09T02:27:35.033Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n        },\n        {\n          createdAt: new Date(\"2025-05-30T13:10:48.001Z\"),\n          modifiedAt: new Date(\"2025-12-12T00:26:44.150Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 902240,\n          maximumAmount: 199966,\n          presetAmount: 75695,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
