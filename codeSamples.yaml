overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    description: \"mature emergent at outside arrogantly gadzooks zealous equatorial notwithstanding\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    allowDiscountCodes: true,\n    requireBillingAddress: false,\n    productPriceId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.create({\n    customerBillingAddress: {\n      country: \"FR\",\n    },\n    products: [\n      \"<value 1>\",\n      \"<value 2>\",\n      \"<value 3>\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.update({\n    id: \"<value>\",\n    checkoutUpdate: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    slug: \"<value>\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {\n      options: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    billingAddress: {\n      country: \"US\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.getPaymentMethods({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.addPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    confirmationTokenId: \"<id>\",\n    setDefault: false,\n    returnUrl: \"https://yearly-custom.net/\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.customers.deletePaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.get({\n    token: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerSubscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSessions.create({\n    customerExternalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    externalId: \"usr_1337\",\n    email: \"customer@example.com\",\n    name: \"John Doe\",\n    billingAddress: {\n      country: \"FR\",\n    },\n    taxId: [\n      \"FR61954506077\",\n      \"eu_vat\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.deleteExternal({\n    externalId: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.updateExternal({\n    externalId: \"<id>\",\n    customerUpdateExternalID: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getStateExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      externalId: \"usr_1337\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getState({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"once\",\n    type: \"fixed\",\n    basisPoints: 449604,\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.ingest({\n    events: [],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.listNames({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 612128,\n    upload: {\n      parts: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/boot\",\n      parts: [\n        {\n          number: 979613,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 979613,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 979613,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.create({\n    name: \"<value>\",\n    filter: {\n      conjunction: \"or\",\n      clauses: [\n        {\n          property: \"<value>\",\n          operator: \"ne\",\n          value: \"<value>\",\n        },\n      ],\n    },\n    aggregation: {\n      func: \"max\",\n      property: \"<value>\",\n    },\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.update({\n    id: \"<value>\",\n    meterUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.quantities({\n    id: \"<value>\",\n    startTimestamp: new Date(\"2025-11-25T04:37:16.823Z\"),\n    endTimestamp: new Date(\"2025-11-26T17:06:00.727Z\"),\n    interval: \"day\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types/rfcdate.js\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2025-03-14\"),\n    endDate: new RFCDate(\"2025-03-18\"),\n    interval: \"hour\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.create({\n    redirectUris: [\n      \"https://impolite-hippodrome.com/\",\n      \"https://acidic-tomography.net/\",\n    ],\n    clientName: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.delete({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.get({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.update({\n    clientId: \"<id>\",\n    oAuth2ClientConfigurationUpdate: {\n      redirectUris: [\n        \"https://classic-cantaloupe.org\",\n        \"https://corrupt-status.biz/\",\n      ],\n      clientName: \"<value>\",\n      clientId: \"<id>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://memorable-season.name\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    organizationUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    recurringInterval: \"year\",\n    prices: [\n      {\n        priceAmount: 677078,\n        priceCurrency: \"usd\",\n      },\n      {\n        priceCurrency: \"usd\",\n      },\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value 1>\",\n        \"<value 2>\",\n        \"<value 3>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.create({\n    orderId: \"<value>\",\n    reason: \"customer_request\",\n    amount: 90,\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.revoke({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.update({\n    id: \"<value>\",\n    subscriptionUpdate: {\n      productId: \"<value>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-05-25T19:36:21.799Z\"),\n      modifiedAt: new Date(\"2025-05-24T21:27:59.843Z\"),\n      description: \"legitimize yuck rebuff sock supposing\",\n      selectable: true,\n      deletable: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 177361,\n        \"key1\": 2045.02,\n      },\n      properties: {\n        units: 311967,\n        rollover: false,\n        meterId: \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-05-30T17:26:31.997Z\"),\n      modifiedAt: new Date(\"2025-12-28T13:48:13.081Z\"),\n      description: \"yippee friendly pro intend zowie swat approach\",\n      selectable: true,\n      deletable: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": true,\n        \"key1\": 1366.12,\n        \"key2\": \"<value>\",\n      },\n      properties: {\n        archived: {\n          \"key\": false,\n        },\n        files: [\n          \"<value 1>\",\n        ],\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-07-29T09:12:26.895Z\"),\n      modifiedAt: new Date(\"2023-11-11T23:34:59.048Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-06-26T18:19:56.152Z\"),\n        modifiedAt: new Date(\"2024-08-09T21:03:19.855Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-05-12T01:27:02.379Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2023-03-23T19:05:45.700Z\"),\n        modifiedAt: new Date(\"2024-11-02T14:57:00.543Z\"),\n        description: \"consequently sand um plagiarise dearly flowery custom amid gah\",\n        selectable: true,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        properties: {\n          guildId: \"<id>\",\n          roleId: \"<id>\",\n          guildToken: \"<value>\",\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCycledPost({\n    data: {\n      createdAt: new Date(\"2023-11-21T13:26:50.948Z\"),\n      modifiedAt: new Date(\"2023-02-22T18:17:01.231Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-06-08T22:06:37.934Z\"),\n        modifiedAt: new Date(\"2025-09-06T18:50:36.104Z\"),\n        metadata: {\n          \"key\": true,\n          \"key1\": 768723,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-11-09T14:13:49.014Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-08-15T00:34:14.846Z\"),\n        modifiedAt: new Date(\"2025-07-14T03:36:29.696Z\"),\n        description: \"soulful which reapply muddy never pish plus duh up ecliptic\",\n        selectable: true,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": \"<value>\",\n          \"key2\": 9408.41,\n        },\n        properties: {\n          units: 518385,\n          rollover: true,\n          meterId: \"<value>\",\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-10-11T18:40:00.865Z\"),\n      modifiedAt: new Date(\"2023-02-09T22:31:54.601Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-12-06T00:35:53.453Z\"),\n        modifiedAt: new Date(\"2024-05-30T15:42:00.265Z\"),\n        metadata: {\n          \"key\": false,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-09-18T14:08:44.723Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-03-25T22:47:53.350Z\"),\n        modifiedAt: new Date(\"2025-11-04T03:19:52.925Z\"),\n        description: \"yet from although although lest teeming\",\n        selectable: true,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 7296.7,\n          \"key1\": \"<value>\",\n        },\n        properties: {\n          note: \"<value>\",\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-06-15T00:42:20.858Z\"),\n      modifiedAt: new Date(\"2024-10-12T12:24:19.002Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-04-28T04:44:42.040Z\"),\n        modifiedAt: new Date(\"2024-05-06T16:18:09.644Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 491140,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-07-31T10:13:32.391Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-12-12T05:42:20.338Z\"),\n        modifiedAt: new Date(\"2025-03-08T01:15:33.617Z\"),\n        description: \"lest indeed yippee decision obedience whereas lest keenly ragged dissemble\",\n        selectable: true,\n        deletable: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 1684.29,\n          \"key1\": 809943,\n        },\n        properties: {\n          guildId: \"<id>\",\n          roleId: \"<id>\",\n          guildToken: \"<value>\",\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-02-15T15:44:21.478Z\"),\n      modifiedAt: new Date(\"2025-09-12T19:48:15.814Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"expired\",\n      clientSecret: \"<value>\",\n      url: \"https://fair-veto.com/\",\n      expiresAt: new Date(\"2025-03-15T14:26:53.109Z\"),\n      successUrl: \"https://junior-linseed.net/\",\n      embedOrigin: \"<value>\",\n      amount: 631188,\n      discountAmount: 968968,\n      netAmount: 929514,\n      taxAmount: 323773,\n      totalAmount: 115799,\n      currency: \"Som\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      requireBillingAddress: false,\n      isDiscountApplicable: true,\n      isFreeProductPrice: true,\n      isPaymentRequired: true,\n      isPaymentSetupRequired: true,\n      isPaymentFormRequired: true,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n\n      },\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      customerExternalId: \"<id>\",\n      products: [],\n      product: {\n        createdAt: new Date(\"2025-03-29T00:34:40.708Z\"),\n        modifiedAt: new Date(\"2024-04-06T18:48:21.449Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"stall for mousse\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2023-09-13T08:36:46.434Z\"),\n            modifiedAt: new Date(\"2023-09-14T02:01:27.394Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n          {\n            createdAt: new Date(\"2025-03-15T14:26:53.109Z\"),\n            modifiedAt: new Date(\"2023-12-28T10:30:56.042Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"year\",\n            priceCurrency: \"<value>\",\n            priceAmount: 700309,\n          },\n        ],\n        benefits: [],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private/tmp\",\n            mimeType: \"<value>\",\n            size: 225502,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-07-06T07:35:44.280Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-08T20:45:26.653Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://graceful-battle.info\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private/tmp\",\n            mimeType: \"<value>\",\n            size: 225502,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-07-06T07:35:44.280Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-08T20:45:26.653Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://graceful-battle.info\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private/tmp\",\n            mimeType: \"<value>\",\n            size: 225502,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-07-06T07:35:44.280Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-08T20:45:26.653Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://graceful-battle.info\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-10-15T17:56:09.535Z\"),\n        modifiedAt: new Date(\"2023-12-21T20:32:27.858Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        unitAmount: \"<value>\",\n        capAmount: 97012,\n        meterId: \"<value>\",\n        meter: {\n          id: \"<value>\",\n          name: \"<value>\",\n        },\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        amount: 405691,\n        currency: \"Dobra\",\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-06-07T12:37:50.969Z\"),\n            modifiedAt: new Date(\"2023-11-20T09:37:39.033Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": true,\n              \"key1\": \"<value>\",\n              \"key2\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 168537,\n          required: false,\n        },\n      ],\n      customerMetadata: {\n        \"key\": true,\n        \"key1\": false,\n        \"key2\": 851435,\n      },\n      customerBillingAddressFields: {\n        country: false,\n        state: true,\n        city: false,\n        postalCode: true,\n        line1: true,\n        line2: false,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-03-19T05:40:46.816Z\"),\n      modifiedAt: new Date(\"2024-09-17T13:52:37.257Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"succeeded\",\n      clientSecret: \"<value>\",\n      url: \"https://grave-tusk.info\",\n      expiresAt: new Date(\"2025-02-28T06:09:51.100Z\"),\n      successUrl: \"https://silent-thyme.name\",\n      embedOrigin: \"<value>\",\n      amount: 558100,\n      discountAmount: 443582,\n      netAmount: 328864,\n      taxAmount: 67168,\n      totalAmount: 710560,\n      currency: \"CFP Franc\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      requireBillingAddress: false,\n      isDiscountApplicable: false,\n      isFreeProductPrice: true,\n      isPaymentRequired: true,\n      isPaymentSetupRequired: true,\n      isPaymentFormRequired: true,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n\n      },\n      metadata: {\n        \"key\": 70808,\n        \"key1\": \"<value>\",\n        \"key2\": 6755.63,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2023-11-03T00:27:36.754Z\"),\n          modifiedAt: new Date(\"2025-07-16T15:01:26.410Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"wherever wisely provided\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2024-11-07T08:23:01.152Z\"),\n              modifiedAt: new Date(\"2024-01-01T01:21:07.047Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"recurring\",\n              recurringInterval: \"month\",\n            },\n            {\n              createdAt: new Date(\"2025-03-26T06:13:51.386Z\"),\n              modifiedAt: new Date(\"2025-09-27T00:00:25.178Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"recurring\",\n              recurringInterval: \"year\",\n            },\n          ],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [],\n        },\n        {\n          createdAt: new Date(\"2023-11-03T00:27:36.754Z\"),\n          modifiedAt: new Date(\"2025-07-16T15:01:26.410Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"wherever wisely provided\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2023-03-15T14:47:23.166Z\"),\n              modifiedAt: new Date(\"2025-02-17T18:34:23.852Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"year\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 164230,\n              maximumAmount: 754328,\n              presetAmount: 867510,\n            },\n            {\n              createdAt: new Date(\"2023-06-04T08:35:03.062Z\"),\n              modifiedAt: new Date(\"2024-02-14T15:23:14.834Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 59172,\n              maximumAmount: 866385,\n              presetAmount: 426798,\n            },\n          ],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [],\n        },\n        {\n          createdAt: new Date(\"2023-11-03T00:27:36.754Z\"),\n          modifiedAt: new Date(\"2025-07-16T15:01:26.410Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"wherever wisely provided\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2025-01-03T13:19:57.814Z\"),\n              modifiedAt: new Date(\"2024-09-04T04:29:40.366Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"year\",\n            },\n            {\n              createdAt: new Date(\"2025-07-16T15:01:26.410Z\"),\n              modifiedAt: new Date(\"2023-05-11T04:03:01.193Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"recurring\",\n              recurringInterval: \"year\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 872981,\n              maximumAmount: 234369,\n              presetAmount: 388871,\n            },\n          ],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n              modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n              type: \"meter_credit\",\n              description: \"rapidly ugh regarding\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2024-07-29T03:49:32.399Z\"),\n        modifiedAt: new Date(\"2025-12-15T21:21:03.211Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"strict militate soupy partially simple gleefully upon\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2025-10-14T04:57:44.285Z\"),\n            modifiedAt: new Date(\"2024-02-06T13:10:07.718Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"year\",\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n            modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n            type: \"meter_credit\",\n            description: \"rapidly ugh regarding\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-12-25T20:10:09.580Z\"),\n            modifiedAt: new Date(\"2025-11-13T22:40:13.181Z\"),\n            type: \"meter_credit\",\n            description: \"rapidly ugh regarding\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/home\",\n            mimeType: \"<value>\",\n            size: 984517,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-01-14T03:40:20.035Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-12-10T00:12:54.180Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://edible-chops.biz\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/home\",\n            mimeType: \"<value>\",\n            size: 984517,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-01-14T03:40:20.035Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-12-10T00:12:54.180Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://edible-chops.biz\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/home\",\n            mimeType: \"<value>\",\n            size: 984517,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-01-14T03:40:20.035Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-12-10T00:12:54.180Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://edible-chops.biz\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2024-06-16T19:55:05.566Z\"),\n        modifiedAt: new Date(\"2025-11-27T17:16:31.119Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        priceAmount: 630228,\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 878100,\n        type: \"percentage\",\n        basisPoints: 908913,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-07-30T15:59:44.918Z\"),\n            modifiedAt: new Date(\"2024-09-18T19:29:21.169Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 9574.64,\n              \"key1\": 54261,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {\n              options: [\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n              ],\n            },\n          },\n          order: 509308,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-07-30T15:59:44.918Z\"),\n            modifiedAt: new Date(\"2024-09-18T19:29:21.169Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 9574.64,\n              \"key1\": 54261,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {\n              options: [\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n              ],\n            },\n          },\n          order: 509308,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-07-30T15:59:44.918Z\"),\n            modifiedAt: new Date(\"2024-09-18T19:29:21.169Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 9574.64,\n              \"key1\": 54261,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {\n              options: [\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n              ],\n            },\n          },\n          order: 509308,\n          required: true,\n        },\n      ],\n      customerMetadata: {\n\n      },\n      customerBillingAddressFields: {\n        country: false,\n        state: true,\n        city: true,\n        postalCode: true,\n        line1: false,\n        line2: true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerCreatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2025-10-24T17:37:29.711Z\"),\n      modifiedAt: new Date(\"2025-03-08T02:57:16.205Z\"),\n      metadata: {\n        \"key\": 839.34,\n        \"key1\": 9709.6,\n        \"key2\": \"<value>\",\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-02-27T17:05:51.236Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerDeletedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-12T21:40:34.752Z\"),\n      modifiedAt: new Date(\"2025-12-23T11:32:42.100Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 167596,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2023-10-23T07:31:03.515Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerStateChangedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2025-05-22T16:03:32.369Z\"),\n      modifiedAt: new Date(\"2023-07-25T20:57:42.542Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2023-12-14T20:20:13.605Z\"),\n      activeSubscriptions: [\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2024-05-14T11:40:16.140Z\"),\n          modifiedAt: new Date(\"2025-06-22T09:12:55.079Z\"),\n          metadata: {\n            \"key\": 2880.88,\n            \"key1\": true,\n            \"key2\": 2021.35,\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"month\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          meters: [\n            {\n              createdAt: new Date(\"2023-10-04T09:01:19.436Z\"),\n              modifiedAt: new Date(\"2025-10-06T05:33:46.651Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2023-10-04T09:01:19.436Z\"),\n              modifiedAt: new Date(\"2025-10-06T05:33:46.651Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n          ],\n        },\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2024-05-14T11:40:16.140Z\"),\n          modifiedAt: new Date(\"2025-06-22T09:12:55.079Z\"),\n          metadata: {\n            \"key\": 2880.88,\n            \"key1\": true,\n            \"key2\": 2021.35,\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"month\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          meters: [\n            {\n              createdAt: new Date(\"2023-10-04T09:01:19.436Z\"),\n              modifiedAt: new Date(\"2025-10-06T05:33:46.651Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2023-10-04T09:01:19.436Z\"),\n              modifiedAt: new Date(\"2025-10-06T05:33:46.651Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n          ],\n        },\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2024-05-14T11:40:16.140Z\"),\n          modifiedAt: new Date(\"2025-06-22T09:12:55.079Z\"),\n          metadata: {\n            \"key\": 2880.88,\n            \"key1\": true,\n            \"key2\": 2021.35,\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"month\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          meters: [\n            {\n              createdAt: new Date(\"2023-10-04T09:01:19.436Z\"),\n              modifiedAt: new Date(\"2025-10-06T05:33:46.651Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2023-10-04T09:01:19.436Z\"),\n              modifiedAt: new Date(\"2025-10-06T05:33:46.651Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n          ],\n        },\n      ],\n      grantedBenefits: [\n        {\n          id: \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n          createdAt: new Date(\"2023-01-02T05:48:36.908Z\"),\n          modifiedAt: new Date(\"2025-11-28T20:08:57.630Z\"),\n          grantedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          benefitId: \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n          benefitType: \"downloadables\",\n          properties: {},\n        },\n        {\n          id: \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n          createdAt: new Date(\"2023-01-02T05:48:36.908Z\"),\n          modifiedAt: new Date(\"2025-11-28T20:08:57.630Z\"),\n          grantedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          benefitId: \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n          benefitType: \"downloadables\",\n          properties: {},\n        },\n        {\n          id: \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n          createdAt: new Date(\"2023-01-02T05:48:36.908Z\"),\n          modifiedAt: new Date(\"2025-11-28T20:08:57.630Z\"),\n          grantedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          benefitId: \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n          benefitType: \"downloadables\",\n          properties: {},\n        },\n      ],\n      activeMeters: [],\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerUpdatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-09T20:22:33.716Z\"),\n      modifiedAt: new Date(\"2024-07-18T23:25:12.977Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 4186.2,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-09-04T05:46:10.440Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-08-21T06:55:49.348Z\"),\n      modifiedAt: new Date(\"2023-01-02T23:31:01.991Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 952546,\n      discountAmount: 47294,\n      netAmount: 220865,\n      amount: 835005,\n      taxAmount: 913636,\n      totalAmount: 727987,\n      refundedAmount: 597376,\n      refundedTaxAmount: 864844,\n      currency: \"Kip\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-09T17:02:40.706Z\"),\n        modifiedAt: new Date(\"2025-03-27T22:54:28.054Z\"),\n        metadata: {\n          \"key\": true,\n          \"key1\": 2184.01,\n          \"key2\": \"<value>\",\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-06-30T16:49:49.935Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n          \"key\": 268152,\n          \"key1\": 4807.86,\n          \"key2\": 271259,\n        },\n        createdAt: new Date(\"2023-07-25T14:06:55.496Z\"),\n        modifiedAt: new Date(\"2025-02-09T20:19:15.400Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"hence hoof amid nimble\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"percentage\",\n        basisPoints: 734817,\n        createdAt: new Date(\"2023-01-30T13:01:14.788Z\"),\n        modifiedAt: new Date(\"2025-04-19T01:44:34.202Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 165492,\n          \"key1\": 3496.27,\n          \"key2\": 5903.56,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-11-16T22:02:37.250Z\"),\n        endsAt: new Date(\"2024-11-14T21:15:37.421Z\"),\n        maxRedemptions: 564618,\n        redemptionsCount: 59456,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2023-02-01T10:16:46.294Z\"),\n        modifiedAt: new Date(\"2025-11-26T14:34:44.815Z\"),\n        id: \"<value>\",\n        amount: 431864,\n        currency: \"Cedi\",\n        recurringInterval: \"month\",\n        status: \"incomplete_expired\",\n        currentPeriodStart: new Date(\"2025-12-03T03:30:23.797Z\"),\n        currentPeriodEnd: new Date(\"2023-11-24T08:15:27.683Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2023-07-04T06:42:37.163Z\"),\n        startedAt: new Date(\"2023-08-21T01:49:53.293Z\"),\n        endsAt: new Date(\"2023-07-06T04:28:24.973Z\"),\n        endedAt: new Date(\"2024-04-25T04:13:04.313Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"switched_service\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-10-13T16:35:24.054Z\"),\n          modifiedAt: new Date(\"2025-08-06T13:46:26.730Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 425196,\n          taxAmount: 196715,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderPaidPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-12-05T07:44:21.172Z\"),\n      modifiedAt: new Date(\"2025-07-27T09:45:49.517Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 650431,\n      discountAmount: 806442,\n      netAmount: 990825,\n      amount: 746396,\n      taxAmount: 341385,\n      totalAmount: 486648,\n      refundedAmount: 562504,\n      refundedTaxAmount: 314047,\n      currency: \"Ouguiya\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": false,\n        \"key2\": \"<value>\",\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-08-30T09:47:22.437Z\"),\n        modifiedAt: new Date(\"2025-10-27T20:31:30.562Z\"),\n        metadata: {\n          \"key\": true,\n          \"key1\": \"<value>\",\n          \"key2\": false,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-12-20T02:23:05.399Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2023-05-18T09:50:39.456Z\"),\n        modifiedAt: new Date(\"2024-06-08T00:11:47.056Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"easily carouse plus quietly reservation bright injunction plastic gah\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 400985,\n        type: \"percentage\",\n        amount: 268755,\n        currency: \"Metical\",\n        createdAt: new Date(\"2024-02-16T18:36:48.341Z\"),\n        modifiedAt: new Date(\"2024-09-15T08:32:57.027Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 4661.41,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-11-24T17:59:56.836Z\"),\n        endsAt: new Date(\"2023-11-15T15:18:02.031Z\"),\n        maxRedemptions: 871130,\n        redemptionsCount: 568256,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 5641.72,\n          \"key1\": \"<value>\",\n        },\n        createdAt: new Date(\"2025-07-17T03:39:23.964Z\"),\n        modifiedAt: new Date(\"2023-09-16T09:43:57.152Z\"),\n        id: \"<value>\",\n        amount: 943292,\n        currency: \"Denar\",\n        recurringInterval: \"year\",\n        status: \"past_due\",\n        currentPeriodStart: new Date(\"2025-06-10T20:57:22.896Z\"),\n        currentPeriodEnd: new Date(\"2023-02-24T15:15:22.018Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2023-12-07T15:09:08.144Z\"),\n        startedAt: new Date(\"2025-06-21T05:10:18.037Z\"),\n        endsAt: new Date(\"2023-11-20T10:20:23.628Z\"),\n        endedAt: new Date(\"2023-07-01T03:36:16.430Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"unused\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-12-05T06:32:48.307Z\"),\n          modifiedAt: new Date(\"2023-01-21T03:35:38.158Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 870773,\n          taxAmount: 305914,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2023-12-05T06:32:48.307Z\"),\n          modifiedAt: new Date(\"2023-01-21T03:35:38.158Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 870773,\n          taxAmount: 305914,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderRefundedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-07-23T18:00:11.615Z\"),\n      modifiedAt: new Date(\"2025-03-19T11:53:59.744Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 638840,\n      discountAmount: 678552,\n      netAmount: 294178,\n      amount: 721778,\n      taxAmount: 913001,\n      totalAmount: 518308,\n      refundedAmount: 820663,\n      refundedTaxAmount: 472431,\n      currency: \"Hryvnia\",\n      billingReason: \"subscription_create\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": 5486.55,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-04-02T07:55:28.069Z\"),\n        modifiedAt: new Date(\"2024-02-03T04:00:16.399Z\"),\n        metadata: {\n          \"key\": 537174,\n          \"key1\": 494.76,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-06-26T08:20:21.481Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2023-12-07T01:03:54.754Z\"),\n        modifiedAt: new Date(\"2025-11-16T15:53:42.571Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"until righteously grave\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        basisPoints: 131950,\n        createdAt: new Date(\"2023-12-23T12:07:28.553Z\"),\n        modifiedAt: new Date(\"2023-02-07T04:47:48.033Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 7376.79,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-12-17T15:59:13.647Z\"),\n        endsAt: new Date(\"2025-01-27T15:44:47.653Z\"),\n        maxRedemptions: 956321,\n        redemptionsCount: 185464,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2025-04-24T02:49:46.525Z\"),\n        modifiedAt: new Date(\"2024-08-12T02:18:50.288Z\"),\n        id: \"<value>\",\n        amount: 443730,\n        currency: \"Pa'anga\",\n        recurringInterval: \"month\",\n        status: \"past_due\",\n        currentPeriodStart: new Date(\"2025-08-22T13:19:25.286Z\"),\n        currentPeriodEnd: new Date(\"2024-03-10T13:09:21.650Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2024-02-07T00:48:11.521Z\"),\n        startedAt: new Date(\"2025-03-07T08:42:11.322Z\"),\n        endsAt: new Date(\"2023-11-21T12:57:47.903Z\"),\n        endedAt: new Date(\"2024-02-02T10:49:58.055Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"low_quality\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-10-30T23:29:28.584Z\"),\n          modifiedAt: new Date(\"2023-07-17T15:21:26.230Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 794498,\n          taxAmount: 469710,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderUpdatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-10-25T00:08:50.290Z\"),\n      modifiedAt: new Date(\"2024-04-30T23:35:35.375Z\"),\n      status: \"paid\",\n      paid: true,\n      subtotalAmount: 804823,\n      discountAmount: 198772,\n      netAmount: 338283,\n      amount: 321919,\n      taxAmount: 827864,\n      totalAmount: 380359,\n      refundedAmount: 596980,\n      refundedTaxAmount: 404069,\n      currency: \"Russian Ruble\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": true,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-03-08T23:35:59.086Z\"),\n        modifiedAt: new Date(\"2025-02-15T17:44:03.209Z\"),\n        metadata: {\n          \"key\": 4784.54,\n          \"key1\": \"<value>\",\n          \"key2\": 2744.69,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-01-17T18:03:47.629Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2024-09-18T06:12:57.188Z\"),\n        modifiedAt: new Date(\"2023-06-26T15:51:37.068Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"unwelcome limply optimistically rudely\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"percentage\",\n        amount: 400666,\n        currency: \"Lesotho Loti\",\n        createdAt: new Date(\"2024-06-18T02:52:24.759Z\"),\n        modifiedAt: new Date(\"2024-02-28T06:12:39.096Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-10-01T05:16:42.046Z\"),\n        endsAt: new Date(\"2023-01-01T17:07:32.356Z\"),\n        maxRedemptions: 945673,\n        redemptionsCount: 550178,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": true,\n          \"key1\": 970746,\n        },\n        createdAt: new Date(\"2023-12-11T14:38:48.351Z\"),\n        modifiedAt: new Date(\"2023-04-07T09:45:48.153Z\"),\n        id: \"<value>\",\n        amount: 617041,\n        currency: \"Metical\",\n        recurringInterval: \"month\",\n        status: \"incomplete\",\n        currentPeriodStart: new Date(\"2023-09-07T20:14:26.104Z\"),\n        currentPeriodEnd: new Date(\"2024-05-12T23:36:17.099Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2023-03-20T19:10:25.976Z\"),\n        startedAt: new Date(\"2025-08-02T14:17:04.679Z\"),\n        endsAt: new Date(\"2023-05-05T04:27:56.002Z\"),\n        endedAt: new Date(\"2023-04-10T21:27:35.876Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"too_complex\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-08-19T15:02:44.139Z\"),\n      modifiedAt: new Date(\"2025-05-07T21:24:48.059Z\"),\n      id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: \"https://bustling-cellar.com\",\n      email: \"Gerardo.Pagac@yahoo.com\",\n      website: \"<value>\",\n      socials: [\n        {\n          platform: \"tiktok\",\n          url: \"https://grizzled-patroller.info/\",\n        },\n        {\n          platform: \"tiktok\",\n          url: \"https://grizzled-patroller.info/\",\n        },\n      ],\n      detailsSubmittedAt: new Date(\"2023-03-18T14:40:01.326Z\"),\n      featureSettings: {},\n      subscriptionSettings: {\n        allowMultipleSubscriptions: true,\n        allowCustomerUpdates: true,\n        prorationBehavior: \"prorate\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-10-13T02:47:55.082Z\"),\n      modifiedAt: new Date(\"2023-01-15T03:15:59.062Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"mash generously as at filthy busy athwart\",\n      recurringInterval: \"month\",\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 4134.56,\n        \"key1\": \"<value>\",\n        \"key2\": 984082,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-07-28T01:37:16.074Z\"),\n          modifiedAt: new Date(\"2023-07-04T11:33:29.001Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 11607,\n          maximumAmount: 141385,\n          presetAmount: 130829,\n        },\n      ],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2025-05-31T08:27:53.858Z\"),\n          modifiedAt: new Date(\"2023-10-30T14:13:01.119Z\"),\n          description: \"ick gadzooks thunderbolt unlawful usable\",\n          selectable: true,\n          deletable: false,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": true,\n            \"key1\": 514522,\n            \"key2\": 495299,\n          },\n          properties: {\n            prefix: \"<value>\",\n            expires: {\n              ttl: 887459,\n              timeframe: \"year\",\n            },\n            activations: {\n              limit: 251979,\n              enableCustomerAdmin: false,\n            },\n            limitUsage: 580706,\n          },\n        },\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2024-08-09T04:26:50.545Z\"),\n          modifiedAt: new Date(\"2023-11-03T22:51:45.017Z\"),\n          description: \"whose inspect honored whether\",\n          selectable: true,\n          deletable: true,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": true,\n            \"key1\": true,\n            \"key2\": true,\n          },\n          properties: {\n            guildId: \"<id>\",\n            roleId: \"<id>\",\n            guildToken: \"<value>\",\n          },\n        },\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2024-03-09T12:18:57.121Z\"),\n          modifiedAt: new Date(\"2025-07-23T06:34:18.245Z\"),\n          description: \"granular an yippee\",\n          selectable: true,\n          deletable: true,\n          organizationId: \"<value>\",\n          metadata: {\n\n          },\n          properties: {\n            repositoryOwner: \"polarsource\",\n            repositoryName: \"private_repo\",\n            permission: \"maintain\",\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/System\",\n          mimeType: \"<value>\",\n          size: 555924,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2024-03-02T06:30:18.185Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2023-11-29T05:57:23.958Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://worthless-strait.name\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/System\",\n          mimeType: \"<value>\",\n          size: 555924,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2024-03-02T06:30:18.185Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2023-11-29T05:57:23.958Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://worthless-strait.name\",\n        },\n      ],\n      attachedCustomFields: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-08-25T02:00:54.049Z\"),\n      modifiedAt: new Date(\"2025-02-11T18:19:05.372Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"aha square extract modulo\",\n      recurringInterval: \"year\",\n      isRecurring: true,\n      isArchived: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 7221.66,\n        \"key1\": \"<value>\",\n        \"key2\": \"<value>\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-07-21T03:22:42.071Z\"),\n          modifiedAt: new Date(\"2025-07-31T19:14:23.351Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"year\",\n        },\n      ],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-05-13T14:14:38.012Z\"),\n          modifiedAt: new Date(\"2025-08-18T15:37:39.268Z\"),\n          description: \"mmm dependency softly desecrate carelessly inasmuch magnetize\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": 6051.07,\n            \"key1\": 327689,\n            \"key2\": \"<value>\",\n          },\n          properties: {\n            archived: {\n              \"key\": false,\n              \"key1\": true,\n            },\n            files: [\n              \"<value 1>\",\n            ],\n          },\n        },\n      ],\n      medias: [],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-06-10T10:15:04.582Z\"),\n            modifiedAt: new Date(\"2023-03-30T01:46:17.072Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": true,\n              \"key1\": 323621,\n              \"key2\": 4226.98,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 844128,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-02-15T13:46:01.700Z\"),\n      modifiedAt: new Date(\"2023-12-02T00:48:24.931Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": 3056.87,\n        \"key1\": \"<value>\",\n      },\n      status: \"pending\",\n      reason: \"other\",\n      amount: 104569,\n      taxAmount: 295454,\n      currency: \"Solomon Islands Dollar\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-01-08T20:35:39.672Z\"),\n      modifiedAt: new Date(\"2025-03-28T13:42:04.506Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": 601.27,\n        \"key1\": \"<value>\",\n        \"key2\": 8995.61,\n      },\n      status: \"pending\",\n      reason: \"other\",\n      amount: 911882,\n      taxAmount: 172196,\n      currency: \"Cedi\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    data: {\n      createdAt: new Date(\"2023-08-13T01:28:21.362Z\"),\n      modifiedAt: new Date(\"2023-10-12T10:17:29.274Z\"),\n      id: \"<value>\",\n      amount: 493639,\n      currency: \"Guinea Franc\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2024-10-11T10:49:29.519Z\"),\n      currentPeriodEnd: new Date(\"2023-06-09T14:14:48.363Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-02-09T14:19:47.352Z\"),\n      startedAt: new Date(\"2023-02-11T00:38:47.217Z\"),\n      endsAt: new Date(\"2024-09-09T22:42:06.531Z\"),\n      endedAt: new Date(\"2023-07-21T07:29:31.409Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_complex\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 5594.76,\n        \"key1\": 487098,\n        \"key2\": 514935,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-02-28T12:08:18.728Z\"),\n        modifiedAt: new Date(\"2023-11-01T07:50:51.068Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 667866,\n          \"key2\": 6670.85,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-05-22T16:11:00.138Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-01-22T16:21:33.475Z\"),\n        modifiedAt: new Date(\"2023-04-08T22:28:00.101Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"over wrongly lest celebrate er through carelessly sleepily instead hmph\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 493639,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-11-16T22:20:37.931Z\"),\n            modifiedAt: new Date(\"2024-10-11T10:49:29.519Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n          {\n            createdAt: new Date(\"2023-02-11T00:38:47.217Z\"),\n            modifiedAt: new Date(\"2024-09-09T22:42:06.531Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 568101,\n            maximumAmount: 864494,\n            presetAmount: 525739,\n          },\n          {\n            createdAt: new Date(\"2024-06-17T20:38:09.011Z\"),\n            modifiedAt: new Date(\"2023-10-10T03:15:20.759Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"year\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 277670,\n            maximumAmount: 761885,\n            presetAmount: 783985,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-01-14T00:31:48.628Z\"),\n            modifiedAt: new Date(\"2024-03-09T18:43:38.001Z\"),\n            description: \"whoever meanwhile impact trouser since likewise boo fictionalize\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n              \"key1\": 3836.22,\n              \"key2\": 4786.4,\n            },\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              guildToken: \"<value>\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-10-05T22:54:04.847Z\"),\n            modifiedAt: new Date(\"2023-08-05T01:14:52.294Z\"),\n            description: \"wisely unfreeze upliftingly\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 522492,\n              \"key1\": \"<value>\",\n              \"key2\": \"<value>\",\n            },\n            properties: {\n              units: 313365,\n              rollover: false,\n              meterId: \"<value>\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-06-08T12:15:29.494Z\"),\n            modifiedAt: new Date(\"2025-08-06T11:32:20.929Z\"),\n            description: \"dime front schlep vaguely astride caring what\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n\n            },\n            properties: {\n              archived: {\n                \"key\": false,\n                \"key1\": false,\n                \"key2\": true,\n              },\n              files: [],\n            },\n          },\n        ],\n        medias: [],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 562004,\n        type: \"percentage\",\n        amount: 118341,\n        currency: \"Gibraltar Pound\",\n        createdAt: new Date(\"2024-10-08T16:07:35.852Z\"),\n        modifiedAt: new Date(\"2023-10-05T03:31:51.188Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n          \"key1\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-11-05T21:10:11.986Z\"),\n        endsAt: new Date(\"2023-05-17T22:52:59.366Z\"),\n        maxRedemptions: 981359,\n        redemptionsCount: 903286,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-01-01T03:00:09.282Z\"),\n          modifiedAt: new Date(\"2025-03-11T11:17:02.540Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n        },\n        {\n          createdAt: new Date(\"2025-11-05T10:18:40.300Z\"),\n          modifiedAt: new Date(\"2023-07-14T06:57:35.554Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 835486,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2024-03-04T15:06:28.623Z\"),\n          modifiedAt: new Date(\"2025-07-25T23:22:10.470Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 731602,\n              \"key1\": 7389.38,\n              \"key2\": \"<value>\",\n            },\n            createdAt: new Date(\"2023-08-14T13:30:57.852Z\"),\n            modifiedAt: new Date(\"2023-02-28T10:09:49.453Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"lt\",\n                  value: \"<value>\",\n                },\n              ],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2024-03-04T15:06:28.623Z\"),\n          modifiedAt: new Date(\"2025-07-25T23:22:10.470Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 731602,\n              \"key1\": 7389.38,\n              \"key2\": \"<value>\",\n            },\n            createdAt: new Date(\"2023-08-14T13:30:57.852Z\"),\n            modifiedAt: new Date(\"2023-02-28T10:09:49.453Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"lt\",\n                  value: \"<value>\",\n                },\n              ],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2024-03-04T15:06:28.623Z\"),\n          modifiedAt: new Date(\"2025-07-25T23:22:10.470Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 731602,\n              \"key1\": 7389.38,\n              \"key2\": \"<value>\",\n            },\n            createdAt: new Date(\"2023-08-14T13:30:57.852Z\"),\n            modifiedAt: new Date(\"2023-02-28T10:09:49.453Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"lt\",\n                  value: \"<value>\",\n                },\n              ],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    data: {\n      createdAt: new Date(\"2025-02-09T04:39:02.332Z\"),\n      modifiedAt: new Date(\"2025-04-09T17:46:08.645Z\"),\n      id: \"<value>\",\n      amount: 98032,\n      currency: \"Pula\",\n      recurringInterval: \"year\",\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2024-08-12T22:41:41.907Z\"),\n      currentPeriodEnd: new Date(\"2023-06-17T04:15:56.819Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-06-02T15:48:16.857Z\"),\n      startedAt: new Date(\"2025-03-21T15:50:39.816Z\"),\n      endsAt: new Date(\"2025-07-17T03:56:59.092Z\"),\n      endedAt: new Date(\"2024-01-07T18:54:45.602Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"unused\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 544796,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-07-21T16:25:14.433Z\"),\n        modifiedAt: new Date(\"2023-01-03T22:38:10.292Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-08-10T09:00:25.178Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2023-10-25T05:52:42.846Z\"),\n        modifiedAt: new Date(\"2023-05-20T04:28:47.140Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"whereas neatly between publicize\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 6152.44,\n          \"key1\": 518.97,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-04-18T10:38:03.481Z\"),\n            modifiedAt: new Date(\"2023-05-31T13:57:32.256Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            unitAmount: \"<value>\",\n            capAmount: 538272,\n            meterId: \"<value>\",\n            meter: {\n              id: \"<value>\",\n              name: \"<value>\",\n            },\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-09-27T01:00:49.025Z\"),\n            modifiedAt: new Date(\"2024-03-30T17:01:44.580Z\"),\n            description: \"inside beneath ack stylish or yuck bah circa consequently broadcast\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n\n            },\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              guildToken: \"<value>\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-09-27T01:00:49.025Z\"),\n            modifiedAt: new Date(\"2024-03-30T17:01:44.580Z\"),\n            description: \"inside beneath ack stylish or yuck bah circa consequently broadcast\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n\n            },\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              guildToken: \"<value>\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-01-24T04:52:40.375Z\"),\n            modifiedAt: new Date(\"2023-06-12T01:01:05.841Z\"),\n            description: \"near failing gloomy phooey opposite cannibalise ew\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 2707.01,\n              \"key1\": 808088,\n              \"key2\": \"<value>\",\n            },\n            properties: {\n              archived: {\n                \"key\": false,\n                \"key1\": false,\n                \"key2\": false,\n              },\n              files: [\n                \"<value 1>\",\n                \"<value 2>\",\n                \"<value 3>\",\n              ],\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc\",\n            mimeType: \"<value>\",\n            size: 712321,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-08-04T15:57:39.277Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-09-22T03:23:09.725Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://sad-nephew.info/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc\",\n            mimeType: \"<value>\",\n            size: 712321,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-08-04T15:57:39.277Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-09-22T03:23:09.725Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://sad-nephew.info/\",\n          },\n        ],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"percentage\",\n        amount: 426614,\n        currency: \"Leone\",\n        createdAt: new Date(\"2023-09-18T16:23:07.059Z\"),\n        modifiedAt: new Date(\"2024-03-16T14:49:43.969Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-06-07T09:41:45.226Z\"),\n        endsAt: new Date(\"2024-01-20T14:29:52.074Z\"),\n        maxRedemptions: 860957,\n        redemptionsCount: 614440,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-06-02T15:48:16.857Z\"),\n          modifiedAt: new Date(\"2025-03-21T15:50:39.816Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 339222,\n          maximumAmount: 765022,\n          presetAmount: 715800,\n        },\n        {\n          createdAt: new Date(\"2024-08-20T02:19:30.433Z\"),\n          modifiedAt: new Date(\"2023-07-21T16:25:14.433Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 25751,\n          maximumAmount: 79919,\n          presetAmount: 968084,\n        },\n      ],\n      meters: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-05-03T11:46:21.459Z\"),\n      modifiedAt: new Date(\"2023-12-03T10:52:23.880Z\"),\n      id: \"<value>\",\n      amount: 677255,\n      currency: \"Kuwaiti Dinar\",\n      recurringInterval: \"month\",\n      status: \"unpaid\",\n      currentPeriodStart: new Date(\"2023-05-17T21:41:04.799Z\"),\n      currentPeriodEnd: new Date(\"2024-01-07T06:33:36.381Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2024-07-30T16:54:44.427Z\"),\n      startedAt: new Date(\"2023-10-20T18:48:25.568Z\"),\n      endsAt: new Date(\"2025-01-24T01:20:23.589Z\"),\n      endedAt: new Date(\"2023-09-10T18:39:16.136Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 4962.75,\n        \"key1\": \"<value>\",\n        \"key2\": 673.37,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-06-29T01:44:05.919Z\"),\n        modifiedAt: new Date(\"2024-04-01T08:29:51.925Z\"),\n        metadata: {\n          \"key\": 3500.62,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-05-18T22:55:50.482Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2024-09-10T08:59:46.091Z\"),\n        modifiedAt: new Date(\"2024-08-04T23:52:10.438Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"cluttered knavishly penalise jeopardise easily now generally\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 827138,\n          \"key1\": 7184.85,\n          \"key2\": 164793,\n        },\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-08-21T20:10:38.723Z\"),\n            modifiedAt: new Date(\"2023-07-11T09:43:44.061Z\"),\n            description: \"clearly drug wonderfully coincide pop phony why\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 652379,\n            },\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 987410,\n                timeframe: \"day\",\n              },\n              activations: {\n                limit: 521439,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 166124,\n            },\n          },\n        ],\n        medias: [],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 585274,\n        type: \"percentage\",\n        basisPoints: 20618,\n        createdAt: new Date(\"2025-09-23T22:50:26.075Z\"),\n        modifiedAt: new Date(\"2023-04-06T04:38:07.420Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n          \"key1\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-06-26T04:13:56.448Z\"),\n        endsAt: new Date(\"2024-05-15T09:08:15.414Z\"),\n        maxRedemptions: 329079,\n        redemptionsCount: 112539,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-01-12T06:30:14.360Z\"),\n          modifiedAt: new Date(\"2024-05-29T05:21:44.072Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 990795,\n          maximumAmount: 124912,\n          presetAmount: 338753,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2024-07-10T07:47:06.998Z\"),\n          modifiedAt: new Date(\"2024-12-27T22:27:01.664Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 526190,\n            },\n            createdAt: new Date(\"2024-12-03T20:34:07.084Z\"),\n            modifiedAt: new Date(\"2023-02-24T10:59:35.793Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"ne\",\n                  value: \"<value>\",\n                },\n              ],\n            },\n            aggregation: {},\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    data: {\n      createdAt: new Date(\"2024-01-02T06:40:50.860Z\"),\n      modifiedAt: new Date(\"2023-03-16T08:42:29.566Z\"),\n      id: \"<value>\",\n      amount: 357630,\n      currency: \"Fiji Dollar\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-04-30T10:39:59.432Z\"),\n      currentPeriodEnd: new Date(\"2023-05-30T02:07:20.021Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-06-01T18:10:42.435Z\"),\n      startedAt: new Date(\"2023-11-20T08:24:19.529Z\"),\n      endsAt: new Date(\"2023-02-17T04:59:11.584Z\"),\n      endedAt: new Date(\"2024-08-10T07:05:17.018Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"missing_features\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": true,\n        \"key1\": \"<value>\",\n        \"key2\": 375849,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-01-26T10:24:50.250Z\"),\n        modifiedAt: new Date(\"2023-05-15T02:43:42.966Z\"),\n        metadata: {\n          \"key\": 298861,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-07-31T11:36:41.678Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-12-12T02:48:12.123Z\"),\n        modifiedAt: new Date(\"2024-11-12T05:10:40.368Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"whereas longingly apparatus since acidly anti canter dimly fatherly\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 726.87,\n          \"key2\": true,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-01-27T23:05:56.976Z\"),\n            modifiedAt: new Date(\"2023-10-28T01:20:21.930Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 811590,\n            maximumAmount: 442924,\n            presetAmount: 136029,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-11-28T05:50:39.876Z\"),\n            modifiedAt: new Date(\"2023-05-09T16:38:05.908Z\"),\n            description: \"after plus meh\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n              \"key1\": \"<value>\",\n            },\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"pull\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-05-08T05:18:14.835Z\"),\n            modifiedAt: new Date(\"2024-11-15T04:33:33.776Z\"),\n            description: \"mid accomplished furthermore even second closely onto fun amid kaleidoscopic\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 2400.14,\n            },\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              guildToken: \"<value>\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-06-26T17:31:52.486Z\"),\n            modifiedAt: new Date(\"2024-09-11T21:28:54.462Z\"),\n            description: \"busy gadzooks solidly\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": true,\n              \"key1\": 3822.1,\n            },\n            properties: {\n              units: 802217,\n              rollover: false,\n              meterId: \"<value>\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private/tmp\",\n            mimeType: \"<value>\",\n            size: 174338,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-08-09T21:14:20.503Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-04-15T21:30:37.498Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://monthly-intervention.info\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-10-05T19:08:04.228Z\"),\n              modifiedAt: new Date(\"2024-04-03T03:31:05.112Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 22381,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-10-05T19:08:04.228Z\"),\n              modifiedAt: new Date(\"2024-04-03T03:31:05.112Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 22381,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-10-05T19:08:04.228Z\"),\n              modifiedAt: new Date(\"2024-04-03T03:31:05.112Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 22381,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"fixed\",\n        amount: 649519,\n        currency: \"UAE Dirham\",\n        createdAt: new Date(\"2023-02-23T07:57:08.868Z\"),\n        modifiedAt: new Date(\"2023-03-07T06:41:13.984Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 115143,\n          \"key1\": true,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-01-21T17:43:15.113Z\"),\n        endsAt: new Date(\"2023-06-11T15:49:01.684Z\"),\n        maxRedemptions: 398641,\n        redemptionsCount: 352059,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-11-20T08:24:19.529Z\"),\n          modifiedAt: new Date(\"2023-02-17T04:59:11.584Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 826880,\n        },\n      ],\n      meters: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUncanceledPost({\n    data: {\n      createdAt: new Date(\"2023-02-06T17:25:10.106Z\"),\n      modifiedAt: new Date(\"2023-05-13T11:53:26.507Z\"),\n      id: \"<value>\",\n      amount: 22176,\n      currency: \"Swedish Krona\",\n      recurringInterval: \"month\",\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2025-06-06T02:06:49.326Z\"),\n      currentPeriodEnd: new Date(\"2024-04-11T19:08:16.655Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-08-23T01:03:59.107Z\"),\n      startedAt: new Date(\"2023-10-03T23:40:30.923Z\"),\n      endsAt: new Date(\"2024-08-30T15:34:10.479Z\"),\n      endedAt: new Date(\"2024-11-16T02:01:16.824Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"customer_service\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 658685,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-10-18T16:25:47.209Z\"),\n        modifiedAt: new Date(\"2025-08-14T20:42:46.275Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-10-28T17:32:11.511Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2023-04-15T22:44:37.320Z\"),\n        modifiedAt: new Date(\"2025-10-01T20:42:25.530Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"once scared upwardly shell excitedly stabilise\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-01-25T07:20:02.381Z\"),\n            modifiedAt: new Date(\"2025-04-08T06:52:54.664Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 166712,\n            maximumAmount: 809387,\n            presetAmount: 425910,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-12-20T04:38:50.493Z\"),\n            modifiedAt: new Date(\"2023-11-01T03:56:36.911Z\"),\n            description: \"vibrant upset meanwhile into huzzah\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n\n            },\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"push\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-02-26T20:51:31.258Z\"),\n            modifiedAt: new Date(\"2024-08-25T04:34:39.417Z\"),\n            description: \"now lady healthily accountability pish brave account jealously whoever rudely\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n              \"key1\": 3416.92,\n              \"key2\": 3760.98,\n            },\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              guildToken: \"<value>\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-07-24T08:03:07.011Z\"),\n            modifiedAt: new Date(\"2025-10-28T06:54:00.088Z\"),\n            description: \"zesty whereas before instruction unearth loftily blah yippee bleakly\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n              \"key1\": 6504.59,\n              \"key2\": \"<value>\",\n            },\n            properties: {\n              units: 569407,\n              rollover: true,\n              meterId: \"<value>\",\n            },\n          },\n        ],\n        medias: [],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-05-04T03:50:13.687Z\"),\n              modifiedAt: new Date(\"2023-08-11T10:26:43.160Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 5554.11,\n                \"key1\": 554424,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 138280,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 941515,\n        type: \"percentage\",\n        basisPoints: 167188,\n        createdAt: new Date(\"2025-08-26T15:24:24.781Z\"),\n        modifiedAt: new Date(\"2025-10-15T04:26:03.108Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 348.27,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-08-16T23:40:35.980Z\"),\n        endsAt: new Date(\"2025-04-21T03:02:05.553Z\"),\n        maxRedemptions: 205092,\n        redemptionsCount: 782565,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-12-22T22:02:24.412Z\"),\n          modifiedAt: new Date(\"2024-10-18T16:25:47.209Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 18501,\n          maximumAmount: 186202,\n          presetAmount: 138645,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2024-05-09T09:03:29.862Z\"),\n          modifiedAt: new Date(\"2023-04-03T07:00:26.646Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": \"<value>\",\n              \"key1\": false,\n            },\n            createdAt: new Date(\"2023-09-01T09:11:21.542Z\"),\n            modifiedAt: new Date(\"2024-02-11T19:32:01.843Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"min\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-06-24T13:26:25.969Z\"),\n      modifiedAt: new Date(\"2024-05-25T12:11:24.717Z\"),\n      id: \"<value>\",\n      amount: 597339,\n      currency: \"Sri Lanka Rupee\",\n      recurringInterval: \"month\",\n      status: \"active\",\n      currentPeriodStart: new Date(\"2025-03-19T13:26:31.175Z\"),\n      currentPeriodEnd: new Date(\"2024-06-19T12:29:28.503Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-08-24T22:14:10.131Z\"),\n      startedAt: new Date(\"2025-04-17T18:51:57.213Z\"),\n      endsAt: new Date(\"2025-12-11T02:41:54.261Z\"),\n      endedAt: new Date(\"2025-08-31T06:08:08.476Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"other\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-10-12T01:39:46.850Z\"),\n        modifiedAt: new Date(\"2025-01-23T22:07:32.693Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 7698.72,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-04-17T07:25:40.078Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2023-11-21T01:50:00.976Z\"),\n        modifiedAt: new Date(\"2024-06-07T17:53:19.130Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"lay towards than ew reiterate ack mmm prudent sensitize upward\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-07-08T02:17:23.799Z\"),\n            modifiedAt: new Date(\"2024-01-05T22:20:15.867Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 737738,\n          },\n        ],\n        benefits: [],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc/mail\",\n            mimeType: \"<value>\",\n            size: 190194,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-02-18T21:04:21.628Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-10-03T10:28:13.472Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://lean-mortise.info/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc/mail\",\n            mimeType: \"<value>\",\n            size: 190194,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-02-18T21:04:21.628Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-10-03T10:28:13.472Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://lean-mortise.info/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-10-30T07:18:57.755Z\"),\n              modifiedAt: new Date(\"2024-02-01T04:27:33.638Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 200325,\n            required: true,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"percentage\",\n        amount: 842251,\n        currency: \"Kuwaiti Dinar\",\n        createdAt: new Date(\"2023-09-03T20:25:41.136Z\"),\n        modifiedAt: new Date(\"2025-09-04T19:30:54.013Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-06-09T06:11:59.062Z\"),\n        endsAt: new Date(\"2025-04-06T20:17:51.689Z\"),\n        maxRedemptions: 580493,\n        redemptionsCount: 595442,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-08-24T22:14:10.131Z\"),\n          modifiedAt: new Date(\"2025-04-17T18:51:57.213Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 888007,\n          maximumAmount: 997348,\n          presetAmount: 138078,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2023-02-28T06:14:05.829Z\"),\n          modifiedAt: new Date(\"2024-09-22T05:03:44.888Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": \"<value>\",\n              \"key1\": 957478,\n              \"key2\": 6882,\n            },\n            createdAt: new Date(\"2024-01-07T22:47:09.497Z\"),\n            modifiedAt: new Date(\"2024-09-01T20:11:20.592Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-02-28T06:14:05.829Z\"),\n          modifiedAt: new Date(\"2024-09-22T05:03:44.888Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": \"<value>\",\n              \"key1\": 957478,\n              \"key2\": 6882,\n            },\n            createdAt: new Date(\"2024-01-07T22:47:09.497Z\"),\n            modifiedAt: new Date(\"2024-09-01T20:11:20.592Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
