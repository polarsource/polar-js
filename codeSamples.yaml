overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    type: \"license_keys\",\n    description: \"mature emergent at outside arrogantly gadzooks zealous equatorial notwithstanding\",\n    properties: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {\n      type: \"meter_credit\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    paymentProcessor: \"stripe\",\n    allowDiscountCodes: true,\n    requireBillingAddress: false,\n    productPriceId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.create({\n    customerBillingAddress: {\n      country: \"US\",\n    },\n    products: [\n      \"<value 1>\",\n      \"<value 2>\",\n      \"<value 3>\",\n    ],\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {\n      customerBillingAddress: null,\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.update({\n    id: \"<value>\",\n    checkoutUpdate: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    type: \"select\",\n    slug: \"<value>\",\n    name: \"<value>\",\n    properties: {\n      options: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {\n      type: \"date\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: null,\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {\n      benefitType: \"license_keys\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    billingAddress: {\n      country: \"US\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.listPaymentMethods({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.addPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    confirmationTokenId: \"<id>\",\n    setDefault: false,\n    returnUrl: \"https://yearly-custom.net/\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.customers.deletePaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerOrderUpdate: {\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/confirm-payment"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.confirmRetryPayment({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerOrderConfirmPayment: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.generateInvoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/payment-status"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.getPaymentStatus({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerSubscriptionUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSessions.create({\n    externalCustomerId: \"<id>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    externalId: \"usr_1337\",\n    email: \"customer@example.com\",\n    name: \"John Doe\",\n    billingAddress: {\n      country: \"US\",\n    },\n    taxId: [\n      \"911144442\",\n      \"us_ein\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.deleteExternal({\n    externalId: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getExternal({\n    externalId: \"<id>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.updateExternal({\n    externalId: \"<id>\",\n    customerUpdateExternalID: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: null,\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getStateExternal({\n    externalId: \"<id>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      externalId: \"usr_1337\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getState({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"once\",\n    type: \"fixed\",\n    basisPoints: 449604,\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.ingest({\n    events: [],\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.listNames({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 612128,\n    upload: {\n      parts: [],\n    },\n    service: \"downloadable\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/boot\",\n      parts: [\n        {\n          number: 979613,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.create({\n    name: \"<value>\",\n    filter: {\n      conjunction: \"or\",\n      clauses: [],\n    },\n    aggregation: {\n      func: \"count\",\n    },\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.update({\n    id: \"<value>\",\n    meterUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.quantities({\n    id: \"<value>\",\n    startTimestamp: new Date(\"2025-11-25T04:37:16.823Z\"),\n    endTimestamp: new Date(\"2025-11-26T17:06:00.727Z\"),\n    interval: \"day\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types/rfcdate.js\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2025-03-14\"),\n    endDate: new RFCDate(\"2025-03-18\"),\n    interval: \"hour\",\n    organizationId: null,\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    grantType: \"authorization_code\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://memorable-season.name\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.update({\n    id: \"<value>\",\n    orderUpdate: {\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.generateInvoice({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    organizationUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({\n    organizationId: null,\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    recurringInterval: \"year\",\n    prices: [],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value 1>\",\n        \"<value 2>\",\n        \"<value 3>\",\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.create({\n    orderId: \"<value>\",\n    reason: \"customer_request\",\n    amount: 90,\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.revoke({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.update({\n    id: \"<value>\",\n    subscriptionUpdate: {\n      discountId: \"<value>\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/deliveries"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.listWebhookDeliveries({});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.listWebhookEndpoints({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.createWebhookEndpoint({\n    url: \"https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0\",\n    format: \"slack\",\n    events: [\n      \"subscription.uncanceled\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.webhooks.deleteWebhookEndpoint({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.getWebhookEndpoint({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.updateWebhookEndpoint({\n    id: \"<value>\",\n    webhookEndpointUpdate: {\n      url: \"https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}/secret"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.resetWebhookEndpointSecret({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/events/{id}/redeliver"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.redeliverWebhookEvent({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    type: \"benefit.created\",\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-05-25T19:36:21.799Z\"),\n      modifiedAt: new Date(\"2023-12-03T18:35:26.911Z\"),\n      type: \"meter_credit\",\n      description: \"futon redraw forenenst pecan evince if\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      properties: {\n        units: 623977,\n        rollover: true,\n        meterId: \"<value>\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    type: \"benefit.updated\",\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-05-30T17:26:31.997Z\"),\n      modifiedAt: new Date(\"2024-07-30T05:38:56.086Z\"),\n      type: \"downloadables\",\n      description: \"metal preregister psst woot somber\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      metadata: {\n\n      },\n      properties: {\n        archived: {\n          \"key\": true,\n          \"key1\": false,\n        },\n        files: [\n          \"<value 1>\",\n        ],\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    type: \"benefit_grant.created\",\n    data: {\n      createdAt: new Date(\"2025-07-29T09:12:26.895Z\"),\n      modifiedAt: new Date(\"2025-07-26T11:51:14.320Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-05-22T17:07:22.158Z\"),\n        modifiedAt: new Date(\"2025-05-12T01:27:02.379Z\"),\n        metadata: {\n          \"key\": 74631,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-02-21T01:01:33.050Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-02-04T07:22:26.555Z\"),\n        modifiedAt: new Date(\"2024-01-11T07:21:59.726Z\"),\n        type: \"discord\",\n        description: \"sand um plagiarise dearly\",\n        selectable: false,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": false,\n        },\n        properties: {\n          guildId: \"<id>\",\n          roleId: \"<id>\",\n          kickMember: false,\n          guildToken: \"<value>\",\n        },\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCycledPost({\n    type: \"benefit_grant.cycled\",\n    data: {\n      createdAt: new Date(\"2023-11-21T13:26:50.948Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-02-09T07:31:14.605Z\"),\n        modifiedAt: new Date(\"2024-01-29T22:31:09.229Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-02-26T15:17:14.361Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-09-22T10:01:13.690Z\"),\n        modifiedAt: new Date(\"2025-07-14T03:36:29.696Z\"),\n        type: \"meter_credit\",\n        description: \"soulful which reapply muddy never pish plus duh up ecliptic\",\n        selectable: true,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        properties: {\n          units: 107264,\n          rollover: false,\n          meterId: \"<value>\",\n        },\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    type: \"benefit_grant.revoked\",\n    data: {\n      createdAt: new Date(\"2025-10-11T18:40:00.865Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-02-19T18:50:01.394Z\"),\n        modifiedAt: new Date(\"2024-11-20T19:24:54.327Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-05-31T18:00:43.998Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-11-04T03:19:52.925Z\"),\n        modifiedAt: new Date(\"2024-12-07T07:46:15.545Z\"),\n        type: \"github_repository\",\n        description: \"maestro silk er hence furthermore commandeer practical\",\n        selectable: true,\n        deletable: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": false,\n        },\n        properties: {\n          repositoryOwner: \"polarsource\",\n          repositoryName: \"private_repo\",\n          permission: \"maintain\",\n        },\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    type: \"benefit_grant.updated\",\n    data: {\n      createdAt: new Date(\"2023-06-15T00:42:20.858Z\"),\n      modifiedAt: new Date(\"2023-09-09T02:35:13.085Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-07-19T15:08:59.439Z\"),\n        modifiedAt: new Date(\"2024-06-22T06:57:35.281Z\"),\n        metadata: {\n          \"key\": false,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-12-12T05:42:20.338Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-09-22T18:19:02.554Z\"),\n        modifiedAt: new Date(\"2023-12-23T22:21:47.780Z\"),\n        type: \"meter_credit\",\n        description: \"diligently phony super boo veg crafty\",\n        selectable: false,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        properties: {\n          units: 763456,\n          rollover: false,\n          meterId: \"<value>\",\n        },\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    type: \"checkout.created\",\n    data: {\n      createdAt: new Date(\"2023-02-15T15:44:21.478Z\"),\n      modifiedAt: new Date(\"2023-09-13T08:36:46.434Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"expired\",\n      clientSecret: \"<value>\",\n      url: \"https://whole-aftermath.net/\",\n      expiresAt: new Date(\"2023-12-28T10:30:56.042Z\"),\n      successUrl: \"https://moral-premier.name/\",\n      embedOrigin: \"<value>\",\n      amount: 929514,\n      discountAmount: 323773,\n      netAmount: 115799,\n      taxAmount: 97012,\n      totalAmount: 859980,\n      currency: \"Fiji Dollar\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: null,\n      allowDiscountCodes: true,\n      requireBillingAddress: true,\n      isDiscountApplicable: true,\n      isFreeProductPrice: true,\n      isPaymentRequired: true,\n      isPaymentSetupRequired: true,\n      isPaymentFormRequired: true,\n      customerId: \"<value>\",\n      isBusinessCustomer: false,\n      customerName: \"<value>\",\n      customerEmail: null,\n      customerIpAddress: null,\n      customerBillingName: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n        \"key2\": \"<value>\",\n      },\n      billingAddressFields: {\n        country: \"disabled\",\n        state: \"disabled\",\n        city: \"disabled\",\n        postalCode: \"disabled\",\n        line1: \"disabled\",\n        line2: \"disabled\",\n      },\n      metadata: {\n\n      },\n      externalCustomerId: \"<id>\",\n      customerExternalId: \"<id>\",\n      products: [],\n      product: {\n        createdAt: new Date(\"2024-09-25T08:09:25.820Z\"),\n        modifiedAt: new Date(\"2025-04-15T15:50:37.647Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"gee noisily mouser tentacle\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [],\n        benefits: [],\n        medias: [],\n      },\n      productPrice: {\n        createdAt: new Date(\"2023-10-02T03:50:07.919Z\"),\n        modifiedAt: new Date(\"2025-06-07T12:37:50.969Z\"),\n        id: \"<value>\",\n        amountType: \"free\",\n        isArchived: true,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n        legacy: true,\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        amount: 168537,\n        currency: \"Tala\",\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [],\n      customerMetadata: {\n        \"key\": true,\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    type: \"checkout.updated\",\n    data: {\n      createdAt: new Date(\"2023-03-19T05:40:46.816Z\"),\n      modifiedAt: new Date(\"2025-01-17T21:45:54.449Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"succeeded\",\n      clientSecret: \"<value>\",\n      url: \"https://wasteful-kinase.net/\",\n      expiresAt: new Date(\"2024-07-13T07:40:45.762Z\"),\n      successUrl: \"https://unwieldy-lift.name\",\n      embedOrigin: \"<value>\",\n      amount: 328864,\n      discountAmount: 67168,\n      netAmount: 710560,\n      taxAmount: 164230,\n      totalAmount: 754328,\n      currency: \"New Taiwan Dollar\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      requireBillingAddress: true,\n      isDiscountApplicable: true,\n      isFreeProductPrice: true,\n      isPaymentRequired: true,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: true,\n      customerId: null,\n      isBusinessCustomer: false,\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingName: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n\n      },\n      billingAddressFields: {\n        country: \"disabled\",\n        state: \"disabled\",\n        city: \"disabled\",\n        postalCode: \"required\",\n        line1: \"optional\",\n        line2: \"required\",\n      },\n      metadata: {\n        \"key\": true,\n      },\n      externalCustomerId: \"<id>\",\n      customerExternalId: \"<id>\",\n      products: [],\n      product: {\n        createdAt: new Date(\"2024-06-16T19:55:05.566Z\"),\n        modifiedAt: new Date(\"2025-10-23T11:11:52.082Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"under past upside-down tempting by or hippodrome mountain\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-06-02T16:08:47.056Z\"),\n            modifiedAt: new Date(\"2024-07-14T16:21:23.700Z\"),\n            type: \"github_repository\",\n            description: \"mid stained mmm splendid\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [],\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-12-11T13:44:40.797Z\"),\n        modifiedAt: new Date(\"2024-04-10T22:07:41.629Z\"),\n        id: \"<value>\",\n        amountType: \"fixed\",\n        isArchived: true,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        priceAmount: 351578,\n        legacy: true,\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        basisPoints: 237002,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-08-12T14:24:20.342Z\"),\n            modifiedAt: new Date(\"2023-08-01T03:55:09.650Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 6493.42,\n            },\n            type: \"select\",\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {\n              options: [],\n            },\n          },\n          order: 519931,\n          required: true,\n        },\n      ],\n      customerMetadata: {\n\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerCreatedPost({\n    type: \"customer.created\",\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2025-10-24T17:37:29.711Z\"),\n      modifiedAt: new Date(\"2025-07-16T19:46:09.413Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2023-03-24T20:28:46.681Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerDeletedPost({\n    type: \"customer.deleted\",\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-12T21:40:34.752Z\"),\n      modifiedAt: new Date(\"2025-02-26T09:36:28.870Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2023-07-08T00:32:27.730Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerStateChangedPost({\n    type: \"customer.state_changed\",\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2025-05-22T16:03:32.369Z\"),\n      modifiedAt: new Date(\"2023-04-17T22:11:17.879Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-09-08T18:19:10.187Z\"),\n      activeSubscriptions: [],\n      grantedBenefits: [\n        {\n          id: \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n          createdAt: new Date(\"2025-09-01T02:21:29.525Z\"),\n          modifiedAt: new Date(\"2023-11-12T17:51:37.646Z\"),\n          grantedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          benefitId: \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n          benefitType: \"meter_credit\",\n          benefitMetadata: {\n            \"key\": \"value\",\n          },\n          properties: {},\n        },\n      ],\n      activeMeters: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-08-10T12:57:32.427Z\"),\n          modifiedAt: new Date(\"2024-11-09T02:09:01.550Z\"),\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          balance: 75,\n        },\n      ],\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerUpdatedPost({\n    type: \"customer.updated\",\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-09T20:22:33.716Z\"),\n      modifiedAt: new Date(\"2024-10-16T21:39:43.150Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-12-14T00:37:03.564Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    type: \"order.created\",\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-08-21T06:55:49.348Z\"),\n      modifiedAt: null,\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 952546,\n      discountAmount: 47294,\n      netAmount: 220865,\n      taxAmount: 835005,\n      totalAmount: 913636,\n      refundedAmount: 727987,\n      refundedTaxAmount: 597376,\n      currency: \"New Taiwan Dollar\",\n      billingReason: \"subscription_create\",\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n      isInvoiceGenerated: true,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": 701529,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-08-28T08:49:40.562Z\"),\n        modifiedAt: null,\n        metadata: {\n          \"key\": 807321,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-07-30T20:36:36.637Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2023-10-18T19:16:06.791Z\"),\n        modifiedAt: new Date(\"2023-07-25T14:06:55.496Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"hence hoof amid nimble\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"fixed\",\n        basisPoints: 765577,\n        createdAt: new Date(\"2025-12-27T11:04:16.188Z\"),\n        modifiedAt: new Date(\"2023-07-01T09:05:58.012Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 736909,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-11-14T21:15:37.421Z\"),\n        endsAt: new Date(\"2023-03-07T03:56:36.953Z\"),\n        maxRedemptions: 28675,\n        redemptionsCount: 967708,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2023-01-24T21:36:11.677Z\"),\n        modifiedAt: new Date(\"2025-12-03T03:30:23.797Z\"),\n        id: \"<value>\",\n        amount: 298671,\n        currency: \"Boliviano boliviano\",\n        recurringInterval: \"month\",\n        status: \"incomplete_expired\",\n        currentPeriodStart: new Date(\"2023-07-06T04:28:24.973Z\"),\n        currentPeriodEnd: new Date(\"2024-04-03T16:38:36.332Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2025-08-06T13:46:26.730Z\"),\n        startedAt: new Date(\"2023-08-04T14:24:05.390Z\"),\n        endsAt: new Date(\"2023-01-25T10:47:26.689Z\"),\n        endedAt: null,\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: null,\n        customerCancellationReason: \"missing_features\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderPaidPost({\n    type: \"order.paid\",\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-12-05T07:44:21.172Z\"),\n      modifiedAt: new Date(\"2024-12-11T22:14:44.762Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 806442,\n      discountAmount: 990825,\n      netAmount: 746396,\n      taxAmount: 341385,\n      totalAmount: 486648,\n      refundedAmount: 562504,\n      refundedTaxAmount: 314047,\n      currency: \"Ouguiya\",\n      billingReason: \"subscription_cycle\",\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n      isInvoiceGenerated: true,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: null,\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-10-27T20:31:30.562Z\"),\n        modifiedAt: new Date(\"2025-04-26T07:56:18.616Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-08-01T03:33:20.782Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n          \"key\": 179185,\n        },\n        createdAt: new Date(\"2023-05-18T09:50:39.456Z\"),\n        modifiedAt: new Date(\"2025-07-31T08:10:01.120Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"though rigidly gradient pure whimsical ew personalise exalt scorn gee\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 871130,\n        type: \"percentage\",\n        amount: 727805,\n        currency: \"Kwacha\",\n        createdAt: new Date(\"2024-09-10T07:58:34.888Z\"),\n        modifiedAt: new Date(\"2025-07-17T03:39:23.964Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-07-29T13:43:57.010Z\"),\n        endsAt: new Date(\"2025-06-10T20:57:22.896Z\"),\n        maxRedemptions: null,\n        redemptionsCount: 499443,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 165283,\n        },\n        createdAt: new Date(\"2025-08-05T06:11:40.745Z\"),\n        modifiedAt: new Date(\"2023-12-05T06:32:48.307Z\"),\n        id: \"<value>\",\n        amount: 18384,\n        currency: \"Tanzanian Shilling\",\n        recurringInterval: \"month\",\n        status: \"incomplete_expired\",\n        currentPeriodStart: new Date(\"2024-06-19T05:54:14.128Z\"),\n        currentPeriodEnd: new Date(\"2025-08-28T12:32:52.795Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2023-08-04T10:17:52.706Z\"),\n        startedAt: new Date(\"2025-08-27T04:13:10.004Z\"),\n        endsAt: null,\n        endedAt: new Date(\"2024-06-22T19:17:00.470Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"too_complex\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2024-07-19T20:12:40.543Z\"),\n          modifiedAt: null,\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 116439,\n          taxAmount: 200966,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderRefundedPost({\n    type: \"order.refunded\",\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-07-23T18:00:11.615Z\"),\n      modifiedAt: new Date(\"2024-08-23T03:13:11.383Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 678552,\n      discountAmount: 294178,\n      netAmount: 721778,\n      taxAmount: 913001,\n      totalAmount: 518308,\n      refundedAmount: 820663,\n      refundedTaxAmount: 472431,\n      currency: \"Hryvnia\",\n      billingReason: \"subscription_create\",\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n      isInvoiceGenerated: false,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": 537174,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-08-19T02:54:30.835Z\"),\n        modifiedAt: null,\n        metadata: {\n          \"key\": 97027,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-01-26T21:26:48.872Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2023-01-16T07:26:04.196Z\"),\n        modifiedAt: new Date(\"2025-01-18T16:58:42.976Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"anxiously notwithstanding softly wilderness drat helpless conservation ew\",\n        recurringInterval: null,\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 177173,\n        type: \"percentage\",\n        basisPoints: 175227,\n        createdAt: new Date(\"2024-06-23T22:24:00.212Z\"),\n        modifiedAt: new Date(\"2025-09-20T03:04:20.355Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-09-22T11:17:00.498Z\"),\n        endsAt: new Date(\"2023-01-04T20:02:20.162Z\"),\n        maxRedemptions: 477690,\n        redemptionsCount: 429180,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": true,\n        },\n        createdAt: new Date(\"2023-12-28T02:40:16.151Z\"),\n        modifiedAt: null,\n        id: \"<value>\",\n        amount: 801440,\n        currency: \"Kwanza\",\n        recurringInterval: \"month\",\n        status: \"unpaid\",\n        currentPeriodStart: new Date(\"2025-12-13T00:18:40.316Z\"),\n        currentPeriodEnd: new Date(\"2025-09-10T16:01:49.333Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2023-11-12T03:39:13.416Z\"),\n        startedAt: new Date(\"2024-11-06T04:39:52.000Z\"),\n        endsAt: new Date(\"2024-06-22T23:44:00.447Z\"),\n        endedAt: new Date(\"2024-11-02T04:41:56.340Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"missing_features\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2024-06-01T22:10:54.514Z\"),\n          modifiedAt: null,\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 584605,\n          taxAmount: 493789,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderUpdatedPost({\n    type: \"order.updated\",\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-10-25T00:08:50.290Z\"),\n      modifiedAt: new Date(\"2024-01-08T20:00:47.692Z\"),\n      status: \"partially_refunded\",\n      paid: true,\n      subtotalAmount: 198772,\n      discountAmount: 338283,\n      netAmount: 321919,\n      taxAmount: 827864,\n      totalAmount: 380359,\n      refundedAmount: 596980,\n      refundedTaxAmount: 404069,\n      currency: \"Russian Ruble\",\n      billingReason: \"subscription_cycle\",\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n      isInvoiceGenerated: false,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": 4784.54,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-07-25T12:14:47.758Z\"),\n        modifiedAt: new Date(\"2023-10-28T19:38:51.490Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: null,\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: null,\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        createdAt: new Date(\"2023-09-09T23:29:46.282Z\"),\n        modifiedAt: new Date(\"2023-12-07T14:52:42.853Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"uniform waver pish coliseum consign absent drat cap including oof\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 860052,\n        type: \"fixed\",\n        basisPoints: 650798,\n        createdAt: new Date(\"2024-02-06T09:06:51.703Z\"),\n        modifiedAt: null,\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-11-03T05:13:30.202Z\"),\n        endsAt: new Date(\"2024-03-03T03:52:46.888Z\"),\n        maxRedemptions: 858600,\n        redemptionsCount: 637128,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: null,\n      items: [\n        {\n          createdAt: new Date(\"2024-02-19T19:25:59.986Z\"),\n          modifiedAt: new Date(\"2025-07-23T06:42:36.223Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 669405,\n          taxAmount: 12321,\n          proration: false,\n          productPriceId: null,\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    type: \"organization.updated\",\n    data: {\n      createdAt: new Date(\"2025-08-19T15:02:44.139Z\"),\n      modifiedAt: new Date(\"2025-08-23T00:45:50.780Z\"),\n      id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: null,\n      email: \"Lemuel44@gmail.com\",\n      website: \"<value>\",\n      socials: [\n        {\n          platform: \"tiktok\",\n          url: \"https://grizzled-patroller.info/\",\n        },\n      ],\n      status: \"created\",\n      detailsSubmittedAt: new Date(\"2024-05-05T12:48:25.627Z\"),\n      featureSettings: {},\n      subscriptionSettings: {\n        allowMultipleSubscriptions: true,\n        allowCustomerUpdates: false,\n        prorationBehavior: \"prorate\",\n      },\n      notificationSettings: {\n        newOrder: true,\n        newSubscription: true,\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    type: \"product.created\",\n    data: {\n      createdAt: new Date(\"2023-10-13T02:47:55.082Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"till that ew put\",\n      recurringInterval: \"month\",\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 785881,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-01-03T22:29:57.701Z\"),\n          modifiedAt: new Date(\"2023-04-17T15:58:24.892Z\"),\n          id: \"<value>\",\n          amountType: \"metered_unit\",\n          isArchived: true,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          unitAmount: \"<value>\",\n          capAmount: 348450,\n          meterId: \"<value>\",\n          meter: {\n            id: \"<value>\",\n            name: \"<value>\",\n          },\n        },\n      ],\n      benefits: [],\n      medias: [],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-11-01T01:55:57.043Z\"),\n            modifiedAt: new Date(\"2024-03-29T03:32:13.399Z\"),\n            id: \"<value>\",\n            metadata: {\n\n            },\n            type: \"number\",\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 253980,\n          required: false,\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    type: \"product.updated\",\n    data: {\n      createdAt: new Date(\"2024-08-25T02:00:54.049Z\"),\n      modifiedAt: new Date(\"2023-07-21T03:22:42.071Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"fooey optimistic beyond dress helpfully whispered structure heartfelt consequently\",\n      recurringInterval: \"year\",\n      isRecurring: false,\n      isArchived: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 495401,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-07-01T18:10:48.406Z\"),\n          modifiedAt: null,\n          id: \"<value>\",\n          amountType: \"free\",\n          isArchived: true,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          legacy: true,\n        },\n      ],\n      benefits: [],\n      medias: [],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-06-25T21:47:16.070Z\"),\n            modifiedAt: new Date(\"2023-12-26T19:54:07.292Z\"),\n            id: \"<value>\",\n            metadata: {\n\n            },\n            type: \"number\",\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 910988,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundCreatedPost({\n    type: \"refund.created\",\n    data: {\n      createdAt: new Date(\"2025-02-15T13:46:01.700Z\"),\n      modifiedAt: new Date(\"2024-07-08T10:47:55.917Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": 1671.19,\n      },\n      status: \"pending\",\n      reason: \"other\",\n      amount: 104569,\n      taxAmount: 295454,\n      currency: \"Solomon Islands Dollar\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundUpdatedPost({\n    type: \"refund.updated\",\n    data: {\n      createdAt: new Date(\"2023-01-08T20:35:39.672Z\"),\n      modifiedAt: new Date(\"2025-09-12T22:02:00.691Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      status: \"canceled\",\n      reason: \"service_disruption\",\n      amount: 986698,\n      taxAmount: 785012,\n      currency: \"Congolese Franc\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    type: \"subscription.active\",\n    data: {\n      createdAt: new Date(\"2023-08-13T01:28:21.362Z\"),\n      modifiedAt: new Date(\"2024-06-25T00:41:05.678Z\"),\n      id: \"<value>\",\n      amount: 320436,\n      currency: \"Peso Uruguayo\",\n      recurringInterval: \"month\",\n      status: \"past_due\",\n      currentPeriodStart: new Date(\"2023-06-09T14:14:48.363Z\"),\n      currentPeriodEnd: null,\n      cancelAtPeriodEnd: true,\n      canceledAt: null,\n      startedAt: new Date(\"2023-07-21T07:29:31.409Z\"),\n      endsAt: new Date(\"2025-08-05T11:38:46.213Z\"),\n      endedAt: new Date(\"2024-09-05T04:27:23.768Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_complex\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-04-15T00:36:48.299Z\"),\n        modifiedAt: new Date(\"2024-08-17T18:35:42.212Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-01-01T03:00:09.282Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        createdAt: new Date(\"2025-03-11T11:17:02.540Z\"),\n        modifiedAt: new Date(\"2025-05-22T16:11:00.138Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"per indeed punctually\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-06-22T15:04:43.558Z\"),\n            modifiedAt: new Date(\"2023-02-05T17:39:30.893Z\"),\n            id: \"<value>\",\n            amountType: \"fixed\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"year\",\n            priceCurrency: \"<value>\",\n            priceAmount: 924076,\n            legacy: true,\n          },\n        ],\n        benefits: [],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/home\",\n            mimeType: \"<value>\",\n            size: 462010,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: null,\n            lastModifiedAt: new Date(\"2024-12-02T20:32:47.578Z\"),\n            version: \"<value>\",\n            service: \"product_media\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-02-08T05:56:24.956Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://regular-scratch.org/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-06-04T23:55:53.252Z\"),\n              modifiedAt: new Date(\"2024-08-20T09:23:26.342Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": true,\n              },\n              type: \"date\",\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 612157,\n            required: true,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 829362,\n        type: \"percentage\",\n        basisPoints: 431070,\n        createdAt: new Date(\"2024-04-05T11:10:16.533Z\"),\n        modifiedAt: new Date(\"2023-02-12T06:44:11.052Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-03-15T20:22:59.077Z\"),\n        endsAt: new Date(\"2025-04-04T17:29:43.877Z\"),\n        maxRedemptions: 90287,\n        redemptionsCount: 180745,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    type: \"subscription.canceled\",\n    data: {\n      createdAt: new Date(\"2025-02-09T04:39:02.332Z\"),\n      modifiedAt: new Date(\"2023-04-18T10:38:03.481Z\"),\n      id: \"<value>\",\n      amount: 137392,\n      currency: \"New Taiwan Dollar\",\n      recurringInterval: \"month\",\n      status: \"active\",\n      currentPeriodStart: new Date(\"2023-06-17T04:15:56.819Z\"),\n      currentPeriodEnd: new Date(\"2023-06-02T15:48:16.857Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2024-01-07T18:54:45.602Z\"),\n      startedAt: new Date(\"2025-02-23T12:23:49.579Z\"),\n      endsAt: new Date(\"2023-11-16T08:24:59.166Z\"),\n      endedAt: new Date(\"2023-07-21T16:25:14.433Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: null,\n      checkoutId: null,\n      customerCancellationReason: null,\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-10-25T05:52:42.846Z\"),\n        modifiedAt: new Date(\"2023-09-20T10:20:50.540Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-04-15T00:52:17.297Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        createdAt: new Date(\"2024-10-18T00:58:28.923Z\"),\n        modifiedAt: new Date(\"2025-06-11T17:21:10.206Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"rekindle very whoever happily provision pfft outrun surface\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-10-21T11:59:45.315Z\"),\n            modifiedAt: new Date(\"2025-06-11T03:26:05.845Z\"),\n            type: \"license_keys\",\n            description: \"yippee broadcast er yowza\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n\n            },\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 156565,\n                timeframe: \"year\",\n              },\n              activations: {\n                limit: 676095,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 637284,\n            },\n          },\n        ],\n        medias: [],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-03-07T15:42:46.324Z\"),\n              modifiedAt: new Date(\"2024-09-08T21:12:01.583Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              type: \"text\",\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 147849,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 162086,\n        type: \"percentage\",\n        amount: 280213,\n        currency: \"Mexican Peso\",\n        createdAt: new Date(\"2024-09-21T23:00:18.902Z\"),\n        modifiedAt: new Date(\"2024-06-12T08:11:27.558Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-04-30T07:29:19.925Z\"),\n        endsAt: new Date(\"2025-12-08T04:46:29.428Z\"),\n        maxRedemptions: 264852,\n        redemptionsCount: 579638,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-05-17T23:59:28.786Z\"),\n          modifiedAt: new Date(\"2024-05-31T09:51:13.446Z\"),\n          id: \"<value>\",\n          amountType: \"fixed\",\n          isArchived: true,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 57753,\n          legacy: true,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2023-04-20T13:22:47.883Z\"),\n          modifiedAt: new Date(\"2024-05-07T04:06:16.229Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": false,\n            },\n            createdAt: new Date(\"2024-05-08T15:55:55.133Z\"),\n            modifiedAt: new Date(\"2024-02-15T18:41:28.030Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"count\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    type: \"subscription.created\",\n    data: {\n      createdAt: new Date(\"2024-05-03T11:46:21.459Z\"),\n      modifiedAt: new Date(\"2025-01-12T06:30:14.360Z\"),\n      id: \"<value>\",\n      amount: 469182,\n      currency: \"Boliviano boliviano\",\n      recurringInterval: \"year\",\n      status: \"incomplete\",\n      currentPeriodStart: new Date(\"2024-01-07T06:33:36.381Z\"),\n      currentPeriodEnd: new Date(\"2024-07-30T16:54:44.427Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-09-10T18:39:16.136Z\"),\n      startedAt: new Date(\"2025-08-30T21:29:16.432Z\"),\n      endsAt: new Date(\"2024-06-27T22:01:23.333Z\"),\n      endedAt: new Date(\"2024-07-24T19:43:04.879Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: null,\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"missing_features\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-04-17T21:09:13.571Z\"),\n        modifiedAt: new Date(\"2023-05-18T22:55:50.482Z\"),\n        metadata: {\n          \"key\": 5036.67,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-11-15T13:52:57.820Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        createdAt: new Date(\"2025-09-26T04:05:17.473Z\"),\n        modifiedAt: new Date(\"2025-06-26T21:09:46.234Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"mysteriously platypus scrape adventurously which cautiously\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 7184.85,\n        },\n        prices: [],\n        benefits: [],\n        medias: [],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        basisPoints: 784251,\n        createdAt: new Date(\"2025-10-28T15:34:36.012Z\"),\n        modifiedAt: new Date(\"2024-10-10T17:21:09.309Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-03-14T14:26:18.378Z\"),\n        endsAt: new Date(\"2023-02-06T08:50:56.809Z\"),\n        maxRedemptions: 897788,\n        redemptionsCount: 877303,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [\n        {\n          createdAt: new Date(\"2025-09-05T16:45:03.444Z\"),\n          modifiedAt: new Date(\"2025-01-22T02:13:03.697Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n\n            },\n            createdAt: new Date(\"2024-02-18T16:04:27.179Z\"),\n            modifiedAt: new Date(\"2023-02-18T11:12:06.291Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"unique\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    type: \"subscription.revoked\",\n    data: {\n      createdAt: new Date(\"2024-01-02T06:40:50.860Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      amount: 357630,\n      currency: \"Fiji Dollar\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-04-30T10:39:59.432Z\"),\n      currentPeriodEnd: new Date(\"2025-03-19T11:29:47.842Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-02-17T04:59:11.584Z\"),\n      startedAt: new Date(\"2024-02-14T23:20:57.498Z\"),\n      endsAt: new Date(\"2025-04-28T23:19:31.379Z\"),\n      endedAt: new Date(\"2023-04-29T06:37:50.213Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"customer_service\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-11-24T13:14:03.962Z\"),\n        modifiedAt: new Date(\"2025-03-17T11:47:03.932Z\"),\n        metadata: {\n          \"key\": false,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-10-16T13:32:15.169Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        createdAt: new Date(\"2025-01-19T04:39:36.127Z\"),\n        modifiedAt: new Date(\"2023-07-14T08:43:45.509Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"longingly apparatus since acidly anti canter dimly fatherly as\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [],\n        benefits: [],\n        medias: [],\n        attachedCustomFields: [],\n      },\n      discount: null,\n      prices: [\n        {\n          createdAt: new Date(\"2025-11-28T05:50:39.876Z\"),\n          modifiedAt: new Date(\"2023-01-18T23:12:00.000Z\"),\n          id: \"<value>\",\n          amountType: \"fixed\",\n          isArchived: true,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 60934,\n          legacy: true,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2023-01-12T15:01:17.401Z\"),\n          modifiedAt: new Date(\"2024-03-19T23:35:08.612Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 463129,\n            },\n            createdAt: new Date(\"2023-11-24T08:24:04.782Z\"),\n            modifiedAt: new Date(\"2025-06-04T07:43:03.654Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"gte\",\n                  value: true,\n                },\n              ],\n            },\n            aggregation: {\n              func: \"unique\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUncanceledPost({\n    type: \"subscription.uncanceled\",\n    data: {\n      createdAt: new Date(\"2023-02-06T17:25:10.106Z\"),\n      modifiedAt: new Date(\"2023-01-25T07:20:02.381Z\"),\n      id: \"<value>\",\n      amount: 755736,\n      currency: \"Iceland Krona\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-04-11T19:08:16.655Z\"),\n      currentPeriodEnd: new Date(\"2023-08-23T01:03:59.107Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2024-11-16T02:01:16.824Z\"),\n      startedAt: null,\n      endsAt: new Date(\"2023-12-23T04:50:00.016Z\"),\n      endedAt: new Date(\"2024-10-18T16:25:47.209Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: null,\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-10-01T20:42:25.530Z\"),\n        modifiedAt: new Date(\"2024-07-04T17:30:56.477Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-12-20T09:31:52.259Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        createdAt: new Date(\"2024-03-26T06:19:23.237Z\"),\n        modifiedAt: new Date(\"2024-05-11T18:08:21.251Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"questioningly proliferate yet vanish mooch yowza hopeful\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [],\n        benefits: [],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/local/src\",\n            mimeType: \"<value>\",\n            size: 930595,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-07-09T11:35:46.121Z\"),\n            version: \"<value>\",\n            service: \"product_media\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-01-04T05:09:14.269Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://distant-fen.org/\",\n          },\n        ],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        amount: 930,\n        currency: \"Armenian Dram\",\n        createdAt: new Date(\"2024-08-04T07:10:18.397Z\"),\n        modifiedAt: new Date(\"2024-03-24T21:29:58.344Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-01-07T18:49:53.331Z\"),\n        endsAt: new Date(\"2023-11-21T17:11:26.125Z\"),\n        maxRedemptions: null,\n        redemptionsCount: 198129,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-08-25T04:34:39.417Z\"),\n          modifiedAt: new Date(\"2024-09-10T10:32:32.710Z\"),\n          id: \"<value>\",\n          amountType: \"fixed\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 456635,\n          legacy: true,\n        },\n      ],\n      meters: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    type: \"subscription.updated\",\n    data: {\n      createdAt: new Date(\"2023-06-24T13:26:25.969Z\"),\n      modifiedAt: new Date(\"2024-10-16T16:24:20.274Z\"),\n      id: \"<value>\",\n      amount: 505562,\n      currency: \"Guyana Dollar\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-06-19T12:29:28.503Z\"),\n      currentPeriodEnd: new Date(\"2023-08-24T22:14:10.131Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-08-31T06:08:08.476Z\"),\n      startedAt: new Date(\"2023-06-01T08:01:27.951Z\"),\n      endsAt: new Date(\"2025-01-23T22:07:32.693Z\"),\n      endedAt: new Date(\"2025-05-14T13:55:44.367Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 477870,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-10-16T06:48:13.474Z\"),\n        modifiedAt: new Date(\"2024-02-26T04:35:08.698Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-01-24T02:08:13.039Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        createdAt: new Date(\"2024-07-19T12:18:25.544Z\"),\n        modifiedAt: new Date(\"2023-05-10T07:26:17.258Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"fooey disbar athwart permafrost happy sun successfully steak ew\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 2229.58,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-10-24T03:47:20.035Z\"),\n            modifiedAt: new Date(\"2023-07-28T10:52:24.280Z\"),\n            id: \"<value>\",\n            amountType: \"custom\",\n            isArchived: true,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 588876,\n            maximumAmount: 280866,\n            presetAmount: 942797,\n            legacy: true,\n          },\n        ],\n        benefits: [],\n        medias: [],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        amount: 960746,\n        currency: \"Tunisian Dinar\",\n        createdAt: new Date(\"2024-05-31T09:53:13.946Z\"),\n        modifiedAt: new Date(\"2025-09-04T19:30:54.013Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-06-09T06:11:59.062Z\"),\n        endsAt: new Date(\"2024-09-28T05:16:48.757Z\"),\n        maxRedemptions: 359864,\n        redemptionsCount: 962223,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [\n        {\n          createdAt: new Date(\"2024-02-19T12:40:10.475Z\"),\n          modifiedAt: new Date(\"2023-04-12T20:54:06.410Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 2623.94,\n            },\n            createdAt: new Date(\"2025-07-23T17:13:45.998Z\"),\n            modifiedAt: new Date(\"2023-02-28T06:14:05.829Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"gt\",\n                  value: true,\n                },\n              ],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
