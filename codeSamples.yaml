overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    description: \"delightfully fumigate convection though zowie up bulky electronics\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {\n      files: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    allowDiscountCodes: true,\n    requireBillingAddress: false,\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.create({\n    customerBillingAddress: {\n      country: \"SE\",\n    },\n    products: [\n      \"<value>\",\n      \"<value>\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.update({\n    id: \"<value>\",\n    checkoutUpdate: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    slug: \"<value>\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    billingAddress: {\n      country: \"FR\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.getPaymentMethods({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.addPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    confirmationTokenId: \"<id>\",\n    setDefault: false,\n    returnUrl: \"https://slight-digestive.info\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.customers.deletePaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.get({\n    token: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerSubscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSessions.create({\n    customerId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    externalId: \"usr_1337\",\n    email: \"customer@example.com\",\n    name: \"John Doe\",\n    billingAddress: {\n      country: \"SE\",\n    },\n    taxId: [\n      \"FR61954506077\",\n      \"eu_vat\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.deleteExternal({\n    externalId: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.updateExternal({\n    externalId: \"<id>\",\n    customerUpdateExternalID: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getStateExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      externalId: \"usr_1337\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getState({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"forever\",\n    durationInMonths: 417458,\n    type: \"fixed\",\n    amount: 69025,\n    currency: \"usd\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.ingest({\n    events: [\n      {\n        name: \"<value>\",\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        customerId: \"<value>\",\n      },\n      {\n        name: \"<value>\",\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        externalCustomerId: \"<id>\",\n      },\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.listNames({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 638424,\n    upload: {\n      parts: [\n        {\n          number: 417458,\n          chunkStart: 134365,\n          chunkEnd: 69025,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/sys\",\n      parts: [\n        {\n          number: 173116,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 894030,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 673715,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.create({\n    name: \"<value>\",\n    filter: {\n      conjunction: \"and\",\n      clauses: [\n        {\n          property: \"<value>\",\n          operator: \"ne\",\n          value: \"<value>\",\n        },\n      ],\n    },\n    aggregation: {\n      func: \"sum\",\n      property: \"<value>\",\n    },\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.update({\n    id: \"<value>\",\n    meterUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.quantities({\n    id: \"<value>\",\n    startTimestamp: new Date(\"2023-09-17T00:45:34.608Z\"),\n    endTimestamp: new Date(\"2023-07-21T18:11:39.069Z\"),\n    interval: \"hour\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types/rfcdate.js\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2025-02-06\"),\n    endDate: new RFCDate(\"2024-09-04\"),\n    interval: \"week\",\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.create({\n    redirectUris: [\n      \"https://inferior-chainstay.com\",\n    ],\n    clientName: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.delete({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.get({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.update({\n    clientId: \"<id>\",\n    oAuth2ClientConfigurationUpdate: {\n      redirectUris: [\n        \"https://grown-worth.name\",\n        \"https://worthwhile-avalanche.org/\",\n        \"https://general-digit.com/\",\n      ],\n      clientName: \"<value>\",\n      clientId: \"<id>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://old-fort.name\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    organizationUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    recurringInterval: \"month\",\n    prices: [\n      {\n        priceCurrency: \"usd\",\n      },\n      {},\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.create({\n    orderId: \"<value>\",\n    reason: \"customer_request\",\n    amount: 638424,\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.revoke({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.update({\n    id: \"<value>\",\n    subscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-04-15T11:45:18.891Z\"),\n      modifiedAt: new Date(\"2025-06-17T12:04:55.002Z\"),\n      description: \"vastly lest but\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 87417,\n      },\n      properties: {\n        prefix: \"<value>\",\n        expires: {\n          ttl: 565064,\n          timeframe: \"month\",\n        },\n        activations: {\n          limit: 251765,\n          enableCustomerAdmin: false,\n        },\n        limitUsage: 345169,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-11-19T14:31:03.333Z\"),\n      modifiedAt: new Date(\"2023-08-21T02:54:25.671Z\"),\n      description: \"merge when gratefully sparse hmph throughout honesty untried gripping um\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 9593.26,\n      },\n      properties: {\n        archived: {\n          \"key\": false,\n        },\n        files: [\n          \"<value>\",\n        ],\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-01-04T13:03:27.870Z\"),\n      modifiedAt: new Date(\"2023-05-08T00:47:14.556Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-25T12:22:42.430Z\"),\n        modifiedAt: new Date(\"2023-03-03T22:39:55.256Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-04-05T03:50:05.028Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2023-05-08T00:47:14.556Z\"),\n        modifiedAt: new Date(\"2023-02-20T12:28:33.166Z\"),\n        description: \"ick form ack lest plus worriedly gifted\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 266305,\n        },\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 363847,\n            timeframe: \"year\",\n          },\n          activations: {\n            limit: 426577,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 931627,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCycledPost({\n    data: {\n      createdAt: new Date(\"2024-09-17T22:29:23.174Z\"),\n      modifiedAt: new Date(\"2025-06-14T11:07:13.305Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-11-28T04:36:34.627Z\"),\n        modifiedAt: new Date(\"2024-12-06T09:05:10.912Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-10-18T02:05:35.631Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-06-14T11:07:13.305Z\"),\n        modifiedAt: new Date(\"2025-10-15T03:09:38.180Z\"),\n        description: \"miskey ha alongside\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        properties: {\n          archived: {\n            \"key\": false,\n          },\n          files: [\n            \"<value>\",\n          ],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-03-12T10:35:36.881Z\"),\n      modifiedAt: new Date(\"2025-04-12T13:10:16.426Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-03-29T21:56:48.008Z\"),\n        modifiedAt: new Date(\"2025-07-18T16:16:40.562Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-11-01T21:51:36.732Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-04-12T13:10:16.426Z\"),\n        modifiedAt: new Date(\"2024-03-08T05:20:11.943Z\"),\n        description: \"incidentally immense scotch meh quaff generously supposing however ugh kindly\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": false,\n        },\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 688374,\n            timeframe: \"day\",\n          },\n          activations: {\n            limit: 24670,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 168330,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-01-02T13:54:42.243Z\"),\n      modifiedAt: new Date(\"2024-02-25T11:58:59.486Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-08T07:44:28.757Z\"),\n        modifiedAt: new Date(\"2024-08-31T04:19:19.970Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 5493.71,\n          \"key2\": 5023.5,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-07-15T16:39:59.264Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-02-25T11:58:59.486Z\"),\n        modifiedAt: new Date(\"2025-04-04T12:08:04.168Z\"),\n        description: \"oil painfully spring requirement import lest to tragic\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 2564.11,\n        },\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 475574,\n            timeframe: \"year\",\n          },\n          activations: {\n            limit: 670311,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 601222,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-11-12T14:26:42.882Z\"),\n      modifiedAt: new Date(\"2024-05-27T05:08:06.235Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://heavy-beret.com/\",\n      expiresAt: new Date(\"2023-02-25T02:26:48.460Z\"),\n      successUrl: \"https://sardonic-final.info/\",\n      embedOrigin: \"<value>\",\n      amount: 962818,\n      discountAmount: 6400,\n      netAmount: 426090,\n      taxAmount: 648726,\n      totalAmount: 210702,\n      currency: \"Riel\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: false,\n      requireBillingAddress: false,\n      isDiscountApplicable: false,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: false,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n\n      },\n      metadata: {\n        \"key\": 366960,\n        \"key1\": false,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2023-01-21T11:17:02.173Z\"),\n          modifiedAt: new Date(\"2024-08-14T19:11:10.463Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"accessorise ack pave\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2023-11-17T00:11:23.972Z\"),\n              modifiedAt: new Date(\"2024-02-03T11:05:02.671Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n            },\n            {\n              createdAt: new Date(\"2024-06-03T08:42:54.736Z\"),\n              modifiedAt: new Date(\"2025-02-14T09:22:19.644Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 417896,\n              maximumAmount: 962818,\n              presetAmount: 6400,\n            },\n          ],\n          benefits: [],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/media\",\n              mimeType: \"<value>\",\n              size: 757308,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-07-16T16:32:06.101Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2025-12-08T10:05:37.208Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://separate-pinstripe.com\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2025-08-22T02:17:20.661Z\"),\n        modifiedAt: new Date(\"2025-09-12T19:41:14.261Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"darling lined nephew crank\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-11-18T07:12:26.749Z\"),\n            modifiedAt: new Date(\"2024-08-14T14:29:29.201Z\"),\n            type: \"github_repository\",\n            description: \"phew empty flawed worth radiant anti of blissfully\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-03-12T06:20:21.161Z\"),\n            modifiedAt: new Date(\"2024-06-27T20:20:27.400Z\"),\n            type: \"license_keys\",\n            description: \"ack neatly jagged as weekly drat nor why\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-03-31T07:42:35.077Z\"),\n            modifiedAt: new Date(\"2025-04-30T13:13:01.707Z\"),\n            type: \"github_repository\",\n            description: \"ironclad chilly seriously finger unbearably and bourgeoisie deplore unless\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/share\",\n            mimeType: \"<value>\",\n            size: 366209,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-09-08T17:09:22.377Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-01-15T08:45:21.256Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://cumbersome-seafood.net\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2023-08-19T22:18:44.316Z\"),\n        modifiedAt: new Date(\"2024-04-28T23:39:10.699Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        priceAmount: 598949,\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 928294,\n        type: \"fixed\",\n        basisPoints: 887018,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-01-24T18:08:49.597Z\"),\n            modifiedAt: new Date(\"2025-07-22T12:18:02.066Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 192934,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-11-12T09:40:10.044Z\"),\n            modifiedAt: new Date(\"2023-08-29T09:50:00.241Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 3852.18,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 597839,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-06-25T22:47:14.264Z\"),\n            modifiedAt: new Date(\"2025-01-27T19:10:37.564Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 18677,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 660585,\n          required: false,\n        },\n      ],\n      customerMetadata: {\n        \"key\": true,\n      },\n      customerBillingAddressFields: {\n        country: true,\n        state: false,\n        city: false,\n        postalCode: true,\n        line1: false,\n        line2: false,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-10-04T13:06:10.658Z\"),\n      modifiedAt: new Date(\"2024-10-02T21:25:15.366Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://square-cafe.biz/\",\n      expiresAt: new Date(\"2025-03-25T08:55:11.873Z\"),\n      successUrl: \"https://physical-import.name/\",\n      embedOrigin: \"<value>\",\n      amount: 245418,\n      discountAmount: 624213,\n      netAmount: 615580,\n      taxAmount: 24587,\n      totalAmount: 447013,\n      currency: \"New Israeli Sheqel\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      requireBillingAddress: true,\n      isDiscountApplicable: false,\n      isFreeProductPrice: false,\n      isPaymentRequired: true,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: true,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n        \"key2\": \"<value>\",\n      },\n      metadata: {\n        \"key\": 879426,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2023-07-11T15:52:54.020Z\"),\n          modifiedAt: new Date(\"2025-01-24T14:28:29.444Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"sashay thankfully overreact yum before overspend red bitter recklessly along\",\n          recurringInterval: \"year\",\n          isRecurring: true,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2025-10-20T04:48:05.954Z\"),\n              modifiedAt: new Date(\"2024-03-12T21:45:21.173Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"recurring\",\n              recurringInterval: \"month\",\n            },\n            {\n              createdAt: new Date(\"2023-12-02T12:51:00.416Z\"),\n              modifiedAt: new Date(\"2024-10-28T13:46:29.597Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n            },\n          ],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2024-03-31T06:14:16.097Z\"),\n              modifiedAt: new Date(\"2023-08-22T12:21:49.089Z\"),\n              type: \"downloadables\",\n              description: \"inborn putrid frilly solemnly over notwithstanding forgather event vastly\",\n              selectable: false,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/usr/src\",\n              mimeType: \"<value>\",\n              size: 541092,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2023-11-24T15:47:22.071Z\"),\n              version: \"<value>\",\n              isUploaded: true,\n              createdAt: new Date(\"2024-01-08T03:40:28.811Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://only-skyscraper.com\",\n            },\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/media\",\n              mimeType: \"<value>\",\n              size: 654810,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-09-02T04:41:11.909Z\"),\n              version: \"<value>\",\n              isUploaded: true,\n              createdAt: new Date(\"2024-07-02T04:06:47.300Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://determined-casement.info/\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2024-02-22T17:28:32.408Z\"),\n        modifiedAt: new Date(\"2024-12-14T16:24:53.412Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"upbeat um after ick\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2024-11-15T03:18:06.755Z\"),\n            modifiedAt: new Date(\"2024-11-05T16:13:01.569Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 371362,\n          },\n          {\n            createdAt: new Date(\"2025-08-02T14:33:19.677Z\"),\n            modifiedAt: new Date(\"2024-11-17T10:36:50.593Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 995460,\n            maximumAmount: 461061,\n            presetAmount: 134244,\n          },\n          {\n            createdAt: new Date(\"2024-03-10T17:45:08.857Z\"),\n            modifiedAt: new Date(\"2025-08-21T20:24:37.634Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 688507,\n            maximumAmount: 907403,\n            presetAmount: 166544,\n          },\n        ],\n        benefits: [],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/boot/defaults\",\n            mimeType: \"<value>\",\n            size: 87231,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-11-12T18:25:15.295Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-10-30T23:32:52.191Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://short-term-cappelletti.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var/log\",\n            mimeType: \"<value>\",\n            size: 215865,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-01-11T00:27:33.502Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-11-08T12:26:13.908Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://fluffy-aftermath.com/\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-05-08T16:44:17.277Z\"),\n        modifiedAt: new Date(\"2023-12-03T09:52:08.965Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        priceAmount: 751656,\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        amount: 557445,\n        currency: \"Kwacha\",\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [],\n      customerMetadata: {\n        \"key\": 132400,\n      },\n      customerBillingAddressFields: {\n        country: true,\n        state: true,\n        city: true,\n        postalCode: false,\n        line1: true,\n        line2: true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerCreatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-11-05T00:02:45.979Z\"),\n      modifiedAt: new Date(\"2025-11-25T19:38:56.737Z\"),\n      metadata: {\n        \"key\": true,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-12-23T01:13:50.641Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerDeletedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-23T22:06:15.045Z\"),\n      modifiedAt: new Date(\"2025-04-24T07:05:50.504Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-05-11T04:45:12.206Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerStateChangedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2024-04-26T07:11:39.517Z\"),\n      modifiedAt: new Date(\"2023-06-21T11:54:36.368Z\"),\n      metadata: {\n        \"key\": 6612.66,\n        \"key1\": 162534,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-11-01T16:24:29.890Z\"),\n      activeSubscriptions: [\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-12-23T00:00:00.457Z\"),\n          modifiedAt: new Date(\"2024-03-19T21:14:46.825Z\"),\n          metadata: {\n\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"year\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          meters: [\n            {\n              createdAt: new Date(\"2025-06-03T23:57:08.417Z\"),\n              modifiedAt: new Date(\"2025-07-31T05:42:27.761Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2024-07-04T21:55:47.759Z\"),\n              modifiedAt: new Date(\"2025-09-17T10:53:45.757Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2024-04-19T12:37:55.806Z\"),\n              modifiedAt: new Date(\"2025-02-24T12:54:31.112Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n          ],\n        },\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-07-09T06:32:19.884Z\"),\n          modifiedAt: new Date(\"2024-02-15T21:51:13.048Z\"),\n          metadata: {\n\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"month\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          meters: [\n            {\n              createdAt: new Date(\"2024-05-21T10:11:40.885Z\"),\n              modifiedAt: new Date(\"2024-05-01T05:59:19.269Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2023-11-21T13:12:44.218Z\"),\n              modifiedAt: new Date(\"2023-02-15T23:19:28.506Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n          ],\n        },\n      ],\n      grantedBenefits: [\n        {\n          id: \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n          createdAt: new Date(\"2024-01-06T17:05:41.501Z\"),\n          modifiedAt: new Date(\"2024-06-15T05:38:38.765Z\"),\n          grantedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          benefitId: \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n          benefitType: \"downloadables\",\n          properties: {},\n        },\n      ],\n      activeMeters: [\n        {\n          createdAt: new Date(\"2023-04-30T20:06:18.800Z\"),\n          modifiedAt: new Date(\"2025-06-17T18:24:55.187Z\"),\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          balance: 75,\n        },\n      ],\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerUpdatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-10-11T01:52:16.669Z\"),\n      modifiedAt: new Date(\"2024-07-17T00:54:05.167Z\"),\n      metadata: {\n        \"key\": 906944,\n        \"key1\": 513720,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-10-11T03:02:11.318Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-11-11T12:46:15.007Z\"),\n      modifiedAt: new Date(\"2024-03-23T03:54:38.261Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 284355,\n      discountAmount: 196366,\n      netAmount: 485666,\n      amount: 81588,\n      taxAmount: 605593,\n      totalAmount: 738083,\n      refundedAmount: 409401,\n      refundedTaxAmount: 229323,\n      currency: \"Denar\",\n      billingReason: \"subscription_update\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": 248386,\n        \"key1\": 3868.55,\n        \"key2\": \"<value>\",\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-15T20:14:00.592Z\"),\n        modifiedAt: new Date(\"2023-09-26T00:50:02.940Z\"),\n        metadata: {\n          \"key\": 656121,\n          \"key1\": 9233.29,\n          \"key2\": 694649,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-05-22T16:28:34.624Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 935855,\n          \"key2\": 2496.08,\n        },\n        createdAt: new Date(\"2025-08-23T02:33:27.360Z\"),\n        modifiedAt: new Date(\"2025-10-21T04:45:49.423Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"neatly merge rag disconnection reach because eventually contravene\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"fixed\",\n        basisPoints: 972228,\n        createdAt: new Date(\"2023-06-23T18:54:19.334Z\"),\n        modifiedAt: new Date(\"2025-08-11T01:22:59.503Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n          \"key1\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-06-29T19:48:33.823Z\"),\n        endsAt: new Date(\"2023-10-13T23:31:11.679Z\"),\n        maxRedemptions: 344316,\n        redemptionsCount: 559255,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 4079.95,\n          \"key1\": \"<value>\",\n          \"key2\": true,\n        },\n        createdAt: new Date(\"2025-10-26T04:20:46.828Z\"),\n        modifiedAt: new Date(\"2024-02-21T07:49:51.858Z\"),\n        id: \"<value>\",\n        amount: 162785,\n        currency: \"Kina\",\n        recurringInterval: \"month\",\n        status: \"incomplete\",\n        currentPeriodStart: new Date(\"2023-07-16T15:15:20.704Z\"),\n        currentPeriodEnd: new Date(\"2025-07-20T01:25:23.024Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2025-05-19T17:32:22.162Z\"),\n        startedAt: new Date(\"2024-04-06T15:59:15.318Z\"),\n        endsAt: new Date(\"2023-09-04T19:31:06.745Z\"),\n        endedAt: new Date(\"2025-09-25T00:56:37.047Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"too_complex\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2025-01-27T10:45:43.275Z\"),\n          modifiedAt: new Date(\"2024-07-14T13:43:10.873Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 579249,\n          taxAmount: 463268,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2025-03-17T12:03:23.602Z\"),\n          modifiedAt: new Date(\"2025-09-21T14:39:10.503Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 486225,\n          taxAmount: 575297,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderPaidPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-06-20T16:51:26.974Z\"),\n      modifiedAt: new Date(\"2023-07-05T02:29:13.883Z\"),\n      status: \"paid\",\n      paid: true,\n      subtotalAmount: 279288,\n      discountAmount: 937633,\n      netAmount: 789757,\n      amount: 296121,\n      taxAmount: 852158,\n      totalAmount: 356116,\n      refundedAmount: 518304,\n      refundedTaxAmount: 963472,\n      currency: \"Cape Verde Escudo\",\n      billingReason: \"subscription_update\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 685627,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-09-05T01:56:49.572Z\"),\n        modifiedAt: new Date(\"2023-07-13T16:16:00.191Z\"),\n        metadata: {\n          \"key\": 4962.91,\n          \"key1\": 807521,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-11-29T10:23:33.223Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2025-05-27T18:14:36.669Z\"),\n        modifiedAt: new Date(\"2023-08-29T00:07:39.616Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"kindly unless reporter courtroom midst the underneath onto\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 831360,\n        type: \"fixed\",\n        amount: 647340,\n        currency: \"Burundi Franc\",\n        createdAt: new Date(\"2023-05-12T14:03:43.474Z\"),\n        modifiedAt: new Date(\"2023-07-31T02:11:36.219Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-07-19T16:17:24.047Z\"),\n        endsAt: new Date(\"2024-02-03T17:07:58.129Z\"),\n        maxRedemptions: 853312,\n        redemptionsCount: 512493,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 4746.64,\n          \"key1\": 1425.19,\n        },\n        createdAt: new Date(\"2025-07-12T14:56:35.077Z\"),\n        modifiedAt: new Date(\"2023-11-06T20:14:02.358Z\"),\n        id: \"<value>\",\n        amount: 681345,\n        currency: \"Egyptian Pound\",\n        recurringInterval: \"month\",\n        status: \"active\",\n        currentPeriodStart: new Date(\"2025-11-01T02:57:30.371Z\"),\n        currentPeriodEnd: new Date(\"2025-09-13T23:53:46.890Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2025-11-25T02:54:38.042Z\"),\n        startedAt: new Date(\"2025-07-10T15:24:37.366Z\"),\n        endsAt: new Date(\"2025-03-24T18:32:32.732Z\"),\n        endedAt: new Date(\"2023-02-05T07:45:22.279Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"customer_service\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2024-10-21T20:50:24.490Z\"),\n          modifiedAt: new Date(\"2024-05-21T19:26:34.740Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 684174,\n          taxAmount: 154582,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderRefundedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-01-02T23:38:59.363Z\"),\n      modifiedAt: new Date(\"2025-02-28T12:31:35.473Z\"),\n      status: \"partially_refunded\",\n      paid: true,\n      subtotalAmount: 938386,\n      discountAmount: 82333,\n      netAmount: 848427,\n      amount: 114854,\n      taxAmount: 325272,\n      totalAmount: 528865,\n      refundedAmount: 824083,\n      refundedTaxAmount: 158895,\n      currency: \"Liberian Dollar\",\n      billingReason: \"subscription_update\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 594696,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-06-19T18:45:29.196Z\"),\n        modifiedAt: new Date(\"2025-02-26T15:57:28.522Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-09-11T11:03:14.922Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n          \"key\": 91157,\n          \"key1\": 403095,\n          \"key2\": 276505,\n        },\n        createdAt: new Date(\"2024-11-25T06:39:16.384Z\"),\n        modifiedAt: new Date(\"2025-10-01T02:04:20.920Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"till wilt sans reach sell\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"fixed\",\n        basisPoints: 650319,\n        createdAt: new Date(\"2024-04-01T07:20:29.895Z\"),\n        modifiedAt: new Date(\"2024-07-01T00:09:41.292Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n          \"key1\": 8866.54,\n          \"key2\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-11-04T21:13:28.799Z\"),\n        endsAt: new Date(\"2025-10-31T17:08:16.307Z\"),\n        maxRedemptions: 747397,\n        redemptionsCount: 856085,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 9204.09,\n          \"key1\": 771711,\n        },\n        createdAt: new Date(\"2023-11-24T13:38:21.359Z\"),\n        modifiedAt: new Date(\"2025-01-18T21:21:09.755Z\"),\n        id: \"<value>\",\n        amount: 696061,\n        currency: \"Kip\",\n        recurringInterval: \"month\",\n        status: \"trialing\",\n        currentPeriodStart: new Date(\"2023-01-03T15:25:02.321Z\"),\n        currentPeriodEnd: new Date(\"2025-05-05T04:48:09.499Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2025-07-13T22:35:47.255Z\"),\n        startedAt: new Date(\"2025-06-08T14:31:47.800Z\"),\n        endsAt: new Date(\"2024-02-14T21:42:14.621Z\"),\n        endedAt: new Date(\"2025-05-14T18:27:08.842Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"switched_service\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderUpdatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-07-30T20:50:28.569Z\"),\n      modifiedAt: new Date(\"2024-03-02T13:14:46.788Z\"),\n      status: \"paid\",\n      paid: true,\n      subtotalAmount: 910012,\n      discountAmount: 738831,\n      netAmount: 68465,\n      amount: 334220,\n      taxAmount: 7263,\n      totalAmount: 832690,\n      refundedAmount: 700550,\n      refundedTaxAmount: 61899,\n      currency: \"Colombian Peso\",\n      billingReason: \"subscription_create\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-06-13T08:03:05.271Z\"),\n        modifiedAt: new Date(\"2025-04-22T08:20:32.904Z\"),\n        metadata: {\n          \"key\": 162825,\n          \"key1\": \"<value>\",\n          \"key2\": \"<value>\",\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-08-18T13:18:44.717Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n          \"key\": 516915,\n          \"key1\": true,\n          \"key2\": 3570.43,\n        },\n        createdAt: new Date(\"2024-05-23T17:41:10.316Z\"),\n        modifiedAt: new Date(\"2023-04-06T20:49:28.848Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"lest over gaseous ill far-off badly\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 252847,\n        type: \"fixed\",\n        amount: 270973,\n        currency: \"Pa'anga\",\n        createdAt: new Date(\"2024-05-06T07:36:36.588Z\"),\n        modifiedAt: new Date(\"2024-02-28T01:41:38.707Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 2876.02,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-01-09T01:08:18.771Z\"),\n        endsAt: new Date(\"2024-12-08T05:33:30.842Z\"),\n        maxRedemptions: 851788,\n        redemptionsCount: 927547,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 667630,\n          \"key1\": \"<value>\",\n        },\n        createdAt: new Date(\"2023-05-18T21:27:20.128Z\"),\n        modifiedAt: new Date(\"2024-07-11T06:32:04.767Z\"),\n        id: \"<value>\",\n        amount: 291443,\n        currency: \"Turkish Lira\",\n        recurringInterval: \"year\",\n        status: \"incomplete_expired\",\n        currentPeriodStart: new Date(\"2024-04-27T20:21:39.429Z\"),\n        currentPeriodEnd: new Date(\"2023-03-05T13:16:50.130Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2023-01-07T04:01:29.671Z\"),\n        startedAt: new Date(\"2025-12-04T07:00:35.238Z\"),\n        endsAt: new Date(\"2025-04-19T13:37:03.701Z\"),\n        endedAt: new Date(\"2023-01-04T20:55:05.952Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"customer_service\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2024-07-02T07:53:49.841Z\"),\n          modifiedAt: new Date(\"2024-08-16T02:12:27.937Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 25445,\n          taxAmount: 335609,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2025-05-27T01:46:10.631Z\"),\n          modifiedAt: new Date(\"2024-10-20T14:26:05.582Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 157162,\n          taxAmount: 32649,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2024-10-12T15:26:10.266Z\"),\n          modifiedAt: new Date(\"2025-08-10T20:15:57.071Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 748679,\n          taxAmount: 303463,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-08-12T18:45:04.236Z\"),\n      modifiedAt: new Date(\"2025-12-29T16:35:25.119Z\"),\n      id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: \"https://devoted-bump.net\",\n      email: \"Shaylee26@hotmail.com\",\n      website: \"<value>\",\n      socials: [\n        {\n          platform: \"tiktok\",\n          url: \"https://bright-bug.biz\",\n        },\n      ],\n      detailsSubmittedAt: new Date(\"2025-09-21T05:55:39.282Z\"),\n      featureSettings: {},\n      subscriptionSettings: {\n        allowMultipleSubscriptions: false,\n        allowCustomerUpdates: true,\n        prorationBehavior: \"prorate\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-03-27T06:36:20.130Z\"),\n      modifiedAt: new Date(\"2025-04-21T12:05:16.637Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"into horst metal grimy clinch big grounded industrialize\",\n      recurringInterval: \"month\",\n      isRecurring: true,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 273829,\n        \"key1\": 168.26,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-12-07T23:31:39.577Z\"),\n          modifiedAt: new Date(\"2024-04-25T10:21:28.587Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n      ],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2024-11-29T13:37:27.569Z\"),\n          modifiedAt: new Date(\"2024-09-06T02:23:36.299Z\"),\n          description: \"hastily tromp these near throughout shear plan\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": 112434,\n          },\n          properties: {\n            archived: {\n              \"key\": false,\n            },\n            files: [\n              \"<value>\",\n            ],\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/srv\",\n          mimeType: \"<value>\",\n          size: 581265,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2025-04-07T02:06:02.757Z\"),\n          version: \"<value>\",\n          isUploaded: true,\n          createdAt: new Date(\"2023-04-12T13:06:20.088Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://unripe-co-producer.org/\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/sbin\",\n          mimeType: \"<value>\",\n          size: 59414,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2025-07-07T02:17:46.592Z\"),\n          version: \"<value>\",\n          isUploaded: true,\n          createdAt: new Date(\"2025-10-19T10:03:16.084Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://shimmering-longboat.com/\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/dev\",\n          mimeType: \"<value>\",\n          size: 150978,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2024-01-22T17:57:22.350Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2024-04-18T23:00:14.080Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://self-assured-sock.name/\",\n        },\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-08-13T09:14:32.599Z\"),\n            modifiedAt: new Date(\"2025-02-08T23:55:56.411Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 273829,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 238471,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-01-19T10:36:12.447Z\"),\n            modifiedAt: new Date(\"2024-02-26T01:40:26.896Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 841436,\n          required: false,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-06-25T03:46:32.479Z\"),\n      modifiedAt: new Date(\"2023-06-04T01:47:33.158Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"er ick birdcage\",\n      recurringInterval: \"month\",\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 498845,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-04-14T23:22:06.974Z\"),\n          modifiedAt: new Date(\"2023-11-27T16:49:54.775Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 147529,\n          maximumAmount: 389871,\n          presetAmount: 137830,\n        },\n      ],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2025-10-01T01:25:21.739Z\"),\n          modifiedAt: new Date(\"2023-04-13T14:11:42.240Z\"),\n          description: \"ick nauseate louse over snoop consequently glossy probe\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": 450788,\n          },\n          properties: {\n            repositoryOwner: \"polarsource\",\n            repositoryName: \"private_repo\",\n            permission: \"admin\",\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/opt/lib\",\n          mimeType: \"<value>\",\n          size: 447833,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2025-03-04T12:55:31.114Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2023-12-12T15:13:01.743Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://able-ad.name/\",\n        },\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-07-17T07:59:01.757Z\"),\n            modifiedAt: new Date(\"2024-02-16T20:36:04.790Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 574449,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-12-29T06:17:19.062Z\"),\n      modifiedAt: new Date(\"2023-06-28T13:27:59.588Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": false,\n        \"key1\": true,\n      },\n      status: \"canceled\",\n      reason: \"fraudulent\",\n      amount: 872325,\n      taxAmount: 273821,\n      currency: \"New Israeli Sheqel\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: true,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-01-23T03:57:31.216Z\"),\n      modifiedAt: new Date(\"2024-04-24T01:16:45.429Z\"),\n      id: \"<value>\",\n      metadata: {\n\n      },\n      status: \"succeeded\",\n      reason: \"other\",\n      amount: 397442,\n      taxAmount: 509120,\n      currency: \"Rufiyaa\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    data: {\n      createdAt: new Date(\"2023-09-17T11:03:44.679Z\"),\n      modifiedAt: new Date(\"2025-07-24T20:02:17.426Z\"),\n      id: \"<value>\",\n      amount: 116760,\n      currency: \"Quetzal\",\n      recurringInterval: \"month\",\n      status: \"incomplete\",\n      currentPeriodStart: new Date(\"2023-08-25T00:14:50.252Z\"),\n      currentPeriodEnd: new Date(\"2023-12-10T18:25:01.577Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2024-07-05T14:07:23.099Z\"),\n      startedAt: new Date(\"2024-06-30T08:12:48.355Z\"),\n      endsAt: new Date(\"2023-06-29T07:42:54.895Z\"),\n      endedAt: new Date(\"2025-10-30T02:51:06.576Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"switched_service\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 4802.79,\n        \"key1\": \"<value>\",\n        \"key2\": 6152.12,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-25T08:49:41.567Z\"),\n        modifiedAt: new Date(\"2025-09-05T08:50:11.879Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-04-06T03:26:32.986Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-10-29T01:44:30.411Z\"),\n        modifiedAt: new Date(\"2025-01-17T08:14:32.982Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"like thoughtfully skyline ouch openly aboard moisten graffiti pleasure claw\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": \"<value>\",\n        },\n        prices: [],\n        benefits: [],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/lib\",\n            mimeType: \"<value>\",\n            size: 471788,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-04-29T21:41:28.180Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-01-21T03:01:14.288Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://some-mantua.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/dev\",\n            mimeType: \"<value>\",\n            size: 212226,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-02-06T12:14:24.412Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2025-05-06T03:32:35.129Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://soupy-secret.name/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-05-08T23:16:06.519Z\"),\n              modifiedAt: new Date(\"2023-12-23T21:06:29.057Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 110303,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 504359,\n            required: true,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-12-10T18:25:01.577Z\"),\n              modifiedAt: new Date(\"2024-09-04T07:05:35.451Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 4984.87,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 569952,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-10-30T02:51:06.576Z\"),\n              modifiedAt: new Date(\"2024-06-20T14:46:16.535Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 853452,\n            required: true,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 156138,\n        type: \"percentage\",\n        amount: 378097,\n        currency: \"Colombian Peso\",\n        createdAt: new Date(\"2025-02-03T17:12:33.225Z\"),\n        modifiedAt: new Date(\"2025-04-12T05:33:41.833Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 843499,\n          \"key1\": 4802.79,\n          \"key2\": 6362.72,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-03-08T08:26:36.119Z\"),\n        endsAt: new Date(\"2023-06-29T22:39:21.226Z\"),\n        maxRedemptions: 707770,\n        redemptionsCount: 555106,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-11-05T06:32:30.065Z\"),\n          modifiedAt: new Date(\"2023-04-25T08:49:41.567Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 126766,\n        },\n        {\n          createdAt: new Date(\"2024-04-06T03:26:32.986Z\"),\n          modifiedAt: new Date(\"2025-10-29T01:44:30.411Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 968465,\n          maximumAmount: 35496,\n          presetAmount: 221113,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2023-02-11T05:37:36.272Z\"),\n          modifiedAt: new Date(\"2025-01-20T12:23:37.845Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 6094.89,\n              \"key1\": 5467.72,\n            },\n            createdAt: new Date(\"2023-09-08T22:16:21.336Z\"),\n            modifiedAt: new Date(\"2024-09-15T15:58:52.712Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"lt\",\n                  value: \"<value>\",\n                },\n              ],\n            },\n            aggregation: {\n              func: \"min\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-03-09T22:12:48.363Z\"),\n          modifiedAt: new Date(\"2025-09-09T06:07:50.979Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 6040.55,\n              \"key1\": \"<value>\",\n              \"key2\": 1010.5,\n            },\n            createdAt: new Date(\"2024-04-25T22:22:19.388Z\"),\n            modifiedAt: new Date(\"2024-02-02T00:30:57.495Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"max\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-10-26T16:01:57.187Z\"),\n          modifiedAt: new Date(\"2025-09-24T14:23:14.148Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 7086.53,\n            },\n            createdAt: new Date(\"2024-07-22T07:33:56.099Z\"),\n            modifiedAt: new Date(\"2025-03-02T15:40:26.218Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"max\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    data: {\n      createdAt: new Date(\"2024-02-08T10:04:43.200Z\"),\n      modifiedAt: new Date(\"2023-02-20T09:16:44.963Z\"),\n      id: \"<value>\",\n      amount: 384017,\n      currency: \"Nakfa\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2025-08-29T23:51:26.505Z\"),\n      currentPeriodEnd: new Date(\"2024-01-30T14:57:29.126Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-05-31T10:57:35.559Z\"),\n      startedAt: new Date(\"2024-10-31T08:13:37.012Z\"),\n      endsAt: new Date(\"2023-08-22T21:50:14.399Z\"),\n      endedAt: new Date(\"2023-07-13T20:08:34.251Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 38827,\n        \"key1\": 199269,\n        \"key2\": 668826,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-03-16T21:08:54.900Z\"),\n        modifiedAt: new Date(\"2023-10-15T15:32:03.593Z\"),\n        metadata: {\n          \"key\": 497112,\n          \"key1\": true,\n          \"key2\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-09-21T11:12:46.571Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-10-12T16:18:30.796Z\"),\n        modifiedAt: new Date(\"2024-02-08T11:59:00.133Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"excluding pfft upside-down ick rust bestride circa\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-02-25T21:11:48.890Z\"),\n            modifiedAt: new Date(\"2023-10-06T06:04:45.294Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 803599,\n            maximumAmount: 886856,\n            presetAmount: 360058,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-05-31T10:57:35.559Z\"),\n            modifiedAt: new Date(\"2024-10-31T08:13:37.012Z\"),\n            description: \"around meh patiently t-shirt\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 629264,\n            },\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-02-02T14:55:14.427Z\"),\n            modifiedAt: new Date(\"2023-01-12T05:03:52.598Z\"),\n            description: \"whether futon carpool\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"maintain\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-04-24T09:35:02.806Z\"),\n            modifiedAt: new Date(\"2023-10-04T07:48:24.035Z\"),\n            description: \"or distinct abaft amidst until key merrily\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 11556,\n                timeframe: \"year\",\n              },\n              activations: {\n                limit: 765648,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 724883,\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/bin\",\n            mimeType: \"<value>\",\n            size: 134264,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-05-29T03:29:41.945Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-02-12T09:19:41.334Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://black-and-white-pharmacopoeia.net\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/opt/share\",\n            mimeType: \"<value>\",\n            size: 430302,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-04-06T16:29:58.577Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-01-07T11:02:44.524Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://violent-publicity.com\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-03-30T22:07:25.990Z\"),\n              modifiedAt: new Date(\"2024-09-05T02:09:16.173Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 848717,\n            required: true,\n          },\n        ],\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"percentage\",\n        basisPoints: 357022,\n        createdAt: new Date(\"2024-11-07T02:15:48.395Z\"),\n        modifiedAt: new Date(\"2024-08-13T10:10:44.714Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": false,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-08-08T20:27:11.335Z\"),\n        endsAt: new Date(\"2025-04-02T16:35:30.414Z\"),\n        maxRedemptions: 982290,\n        redemptionsCount: 227101,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-07-30T17:23:59.652Z\"),\n          modifiedAt: new Date(\"2023-06-03T19:12:20.362Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n        },\n        {\n          createdAt: new Date(\"2025-10-11T05:55:27.601Z\"),\n          modifiedAt: new Date(\"2023-10-27T13:26:08.325Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 125035,\n        },\n        {\n          createdAt: new Date(\"2024-08-22T17:07:21.257Z\"),\n          modifiedAt: new Date(\"2025-08-24T04:18:58.722Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 525988,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2023-05-24T20:25:30.956Z\"),\n          modifiedAt: new Date(\"2024-02-20T20:47:35.184Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 34837,\n              \"key1\": \"<value>\",\n            },\n            createdAt: new Date(\"2024-10-09T11:24:58.450Z\"),\n            modifiedAt: new Date(\"2024-01-04T14:57:22.990Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"lt\",\n                  value: false,\n                },\n              ],\n            },\n            aggregation: {\n              func: \"sum\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-10-15T19:57:28.120Z\"),\n          modifiedAt: new Date(\"2024-07-05T08:08:12.059Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n\n            },\n            createdAt: new Date(\"2024-09-18T19:36:25.904Z\"),\n            modifiedAt: new Date(\"2025-12-24T00:48:09.714Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"min\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-07-03T01:29:40.920Z\"),\n      modifiedAt: new Date(\"2023-02-20T03:35:25.500Z\"),\n      id: \"<value>\",\n      amount: 78980,\n      currency: \"Dong\",\n      recurringInterval: \"month\",\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2025-01-25T02:46:12.208Z\"),\n      currentPeriodEnd: new Date(\"2023-10-08T16:07:22.449Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-10-17T20:21:29.819Z\"),\n      startedAt: new Date(\"2023-02-26T17:52:17.099Z\"),\n      endsAt: new Date(\"2023-07-04T19:46:53.033Z\"),\n      endedAt: new Date(\"2023-09-06T09:33:34.348Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"unused\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 2294.09,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-01T11:22:10.531Z\"),\n        modifiedAt: new Date(\"2024-06-26T00:08:47.301Z\"),\n        metadata: {\n          \"key\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-05-16T01:12:33.254Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-11-30T21:57:15.452Z\"),\n        modifiedAt: new Date(\"2024-10-01T17:40:20.374Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"likewise publication partially afore under subsidy\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-02-20T03:35:25.500Z\"),\n            modifiedAt: new Date(\"2023-03-28T13:29:27.613Z\"),\n            description: \"average deer plagiarise carefree qua yippee by capitalise from than\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-11-29T01:30:25.624Z\"),\n            modifiedAt: new Date(\"2025-11-25T16:26:54.952Z\"),\n            description: \"wisely tooth incidentally huzzah for tool white needily grandpa\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 120645,\n            },\n            properties: {\n              note: \"<value>\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/Users\",\n            mimeType: \"<value>\",\n            size: 580262,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-06-15T16:59:59.477Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-01-08T01:57:20.378Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://lazy-conversation.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/opt/lib\",\n            mimeType: \"<value>\",\n            size: 782457,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-11-21T11:37:28.520Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-08-13T20:42:08.040Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://cuddly-eggplant.net/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-04-26T06:50:11.633Z\"),\n              modifiedAt: new Date(\"2023-06-21T22:51:37.278Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 879671,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 842581,\n        type: \"fixed\",\n        amount: 544214,\n        currency: \"Kina\",\n        createdAt: new Date(\"2023-06-19T11:56:54.087Z\"),\n        modifiedAt: new Date(\"2025-07-01T06:15:52.967Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 243.4,\n          \"key1\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-12-13T03:42:17.955Z\"),\n        endsAt: new Date(\"2024-09-08T03:48:10.454Z\"),\n        maxRedemptions: 765774,\n        redemptionsCount: 722618,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [\n        {\n          createdAt: new Date(\"2024-03-11T19:56:28.722Z\"),\n          modifiedAt: new Date(\"2025-09-24T04:48:30.423Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 454337,\n              \"key1\": 282087,\n              \"key2\": 1416.42,\n            },\n            createdAt: new Date(\"2023-10-13T16:56:41.970Z\"),\n            modifiedAt: new Date(\"2024-08-14T16:32:46.781Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"sum\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-11-16T10:08:59.620Z\"),\n          modifiedAt: new Date(\"2025-10-14T23:43:28.544Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 117013,\n            },\n            createdAt: new Date(\"2025-01-30T15:10:59.955Z\"),\n            modifiedAt: new Date(\"2023-08-11T07:16:53.215Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-11-29T12:00:55.925Z\"),\n      modifiedAt: new Date(\"2023-03-13T04:36:55.320Z\"),\n      id: \"<value>\",\n      amount: 780683,\n      currency: \"CFP Franc\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2023-06-20T05:55:42.170Z\"),\n      currentPeriodEnd: new Date(\"2024-05-16T17:55:53.899Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2025-10-25T10:04:20.460Z\"),\n      startedAt: new Date(\"2024-09-29T18:36:35.285Z\"),\n      endsAt: new Date(\"2024-02-23T17:26:12.806Z\"),\n      endedAt: new Date(\"2024-01-24T11:12:57.680Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-09-02T15:09:07.489Z\"),\n        modifiedAt: new Date(\"2025-06-23T22:13:15.423Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 1826.63,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-12-07T07:31:07.439Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-10-10T20:53:21.424Z\"),\n        modifiedAt: new Date(\"2025-04-13T14:40:28.840Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"tousle evenly footrest whoever happy underpants collaborate license\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": true,\n          \"key1\": 738461,\n          \"key2\": \"<value>\",\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2025-05-05T15:05:02.863Z\"),\n            modifiedAt: new Date(\"2025-11-17T16:25:39.728Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 155335,\n          },\n          {\n            createdAt: new Date(\"2025-10-25T10:04:20.460Z\"),\n            modifiedAt: new Date(\"2024-09-29T18:36:35.285Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 354441,\n          },\n          {\n            createdAt: new Date(\"2025-09-02T15:09:07.489Z\"),\n            modifiedAt: new Date(\"2025-06-23T22:13:15.423Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 603348,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-11-17T04:36:46.811Z\"),\n            modifiedAt: new Date(\"2023-04-04T23:05:18.441Z\"),\n            description: \"drab psst gee scout second management whose underachieve\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 7570.41,\n            },\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              guildToken: \"<value>\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-07-08T15:43:38.078Z\"),\n            modifiedAt: new Date(\"2023-06-14T12:45:40.568Z\"),\n            description: \"ick blah altruistic\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 9100.37,\n            },\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n        ],\n        medias: [],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-12-21T17:29:46.697Z\"),\n              modifiedAt: new Date(\"2025-10-21T13:42:06.158Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 830297,\n            required: true,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-12-15T15:35:52.203Z\"),\n              modifiedAt: new Date(\"2023-07-22T04:02:13.353Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 937507,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 767399,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 741269,\n        type: \"fixed\",\n        amount: 753653,\n        currency: \"Somali Shilling\",\n        createdAt: new Date(\"2025-01-15T02:49:03.350Z\"),\n        modifiedAt: new Date(\"2023-02-08T03:45:19.295Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 4321.75,\n          \"key1\": 7967.99,\n          \"key2\": 5658.66,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-04-10T08:47:00.271Z\"),\n        endsAt: new Date(\"2023-03-11T13:38:59.234Z\"),\n        maxRedemptions: 272349,\n        redemptionsCount: 750374,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-07-18T22:29:18.081Z\"),\n          modifiedAt: new Date(\"2025-08-18T00:05:09.206Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2024-04-23T18:43:10.741Z\"),\n          modifiedAt: new Date(\"2023-05-11T20:00:35.600Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            createdAt: new Date(\"2024-08-02T07:44:35.677Z\"),\n            modifiedAt: new Date(\"2023-11-05T03:01:24.932Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-04-20T18:56:49.699Z\"),\n          modifiedAt: new Date(\"2024-07-28T12:40:18.163Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            createdAt: new Date(\"2025-05-01T03:35:09.760Z\"),\n            modifiedAt: new Date(\"2024-10-04T15:58:28.010Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"max\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-06-21T02:39:31.552Z\"),\n          modifiedAt: new Date(\"2025-04-27T19:15:55.010Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 160261,\n              \"key1\": \"<value>\",\n            },\n            createdAt: new Date(\"2023-10-11T09:30:06.914Z\"),\n            modifiedAt: new Date(\"2024-06-04T10:03:21.797Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {},\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUncanceledPost({\n    data: {\n      createdAt: new Date(\"2024-06-17T13:11:57.598Z\"),\n      modifiedAt: new Date(\"2025-03-19T00:33:29.972Z\"),\n      id: \"<value>\",\n      amount: 243909,\n      currency: \"Swiss Franc\",\n      recurringInterval: \"month\",\n      status: \"past_due\",\n      currentPeriodStart: new Date(\"2025-04-10T22:53:35.005Z\"),\n      currentPeriodEnd: new Date(\"2025-11-06T14:37:36.152Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-11-20T17:26:51.612Z\"),\n      startedAt: new Date(\"2023-03-17T23:30:29.508Z\"),\n      endsAt: new Date(\"2024-09-26T10:53:58.966Z\"),\n      endedAt: new Date(\"2023-07-03T15:11:27.108Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 213.99,\n        \"key1\": 316364,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-01-30T22:08:30.455Z\"),\n        modifiedAt: new Date(\"2023-02-02T22:26:23.446Z\"),\n        metadata: {\n          \"key\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-10-31T14:46:23.010Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2024-11-09T05:19:53.169Z\"),\n        modifiedAt: new Date(\"2024-09-22T08:44:15.301Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"creamy furthermore where\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 3172.58,\n          \"key1\": 785644,\n          \"key2\": 146640,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-09-25T07:47:22.602Z\"),\n            modifiedAt: new Date(\"2023-07-07T10:48:19.585Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n          {\n            createdAt: new Date(\"2025-11-06T14:37:36.152Z\"),\n            modifiedAt: new Date(\"2025-05-03T10:18:29.658Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            unitAmount: \"<value>\",\n            capAmount: 578882,\n            meterId: \"<value>\",\n            meter: {\n              id: \"<value>\",\n              name: \"<value>\",\n            },\n          },\n          {\n            createdAt: new Date(\"2025-03-15T14:25:14.463Z\"),\n            modifiedAt: new Date(\"2024-10-04T14:51:52.137Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 271985,\n            maximumAmount: 316364,\n            presetAmount: 694273,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-04-14T01:03:37.496Z\"),\n            modifiedAt: new Date(\"2025-10-04T06:49:35.301Z\"),\n            description: \"oof loosely whose meh surprisingly among\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 9373.65,\n            },\n            properties: {\n              note: \"<value>\",\n            },\n          },\n        ],\n        medias: [],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-07-26T07:22:38.597Z\"),\n              modifiedAt: new Date(\"2025-01-13T15:58:26.086Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 373884,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 94965,\n            required: true,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-08-10T09:43:32.113Z\"),\n              modifiedAt: new Date(\"2025-08-13T13:42:13.485Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 31232,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 634097,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-10-29T00:03:55.769Z\"),\n              modifiedAt: new Date(\"2024-04-09T09:27:02.033Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 96265,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"percentage\",\n        amount: 898456,\n        currency: \"Riel\",\n        createdAt: new Date(\"2024-10-09T05:35:43.669Z\"),\n        modifiedAt: new Date(\"2023-08-02T04:54:56.850Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-01-26T13:36:59.644Z\"),\n        endsAt: new Date(\"2025-04-24T08:23:27.502Z\"),\n        maxRedemptions: 305590,\n        redemptionsCount: 755292,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-11-08T10:21:05.522Z\"),\n          modifiedAt: new Date(\"2025-01-09T08:14:23.639Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 963528,\n          maximumAmount: 373189,\n          presetAmount: 981202,\n        },\n        {\n          createdAt: new Date(\"2023-06-25T03:26:57.331Z\"),\n          modifiedAt: new Date(\"2024-11-03T11:13:28.466Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 267438,\n        },\n        {\n          createdAt: new Date(\"2024-12-08T06:56:12.545Z\"),\n          modifiedAt: new Date(\"2023-09-21T02:33:03.865Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 528490,\n          maximumAmount: 139757,\n          presetAmount: 176803,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2023-03-18T04:07:15.266Z\"),\n          modifiedAt: new Date(\"2025-06-28T02:22:05.259Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 257932,\n            },\n            createdAt: new Date(\"2023-11-22T13:28:36.122Z\"),\n            modifiedAt: new Date(\"2023-10-31T23:41:23.146Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"lte\",\n                  value: \"<value>\",\n                },\n                {\n                  property: \"<value>\",\n                  operator: \"not_like\",\n                  value: 308392,\n                },\n                {\n                  property: \"<value>\",\n                  operator: \"ne\",\n                  value: \"<value>\",\n                },\n              ],\n            },\n            aggregation: {},\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-01-26T05:22:36.002Z\"),\n          modifiedAt: new Date(\"2025-07-12T08:51:47.105Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 1534.64,\n              \"key1\": \"<value>\",\n            },\n            createdAt: new Date(\"2023-04-29T23:28:30.708Z\"),\n            modifiedAt: new Date(\"2024-09-10T10:04:41.595Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"min\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2024-12-16T05:06:27.930Z\"),\n          modifiedAt: new Date(\"2023-12-28T11:29:29.778Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 386144,\n            },\n            createdAt: new Date(\"2024-07-08T10:23:41.787Z\"),\n            modifiedAt: new Date(\"2023-11-01T17:35:18.566Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {},\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-08-16T06:35:49.390Z\"),\n      modifiedAt: new Date(\"2025-11-13T10:48:05.575Z\"),\n      id: \"<value>\",\n      amount: 299644,\n      currency: \"Baht\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2025-10-06T07:01:55.000Z\"),\n      currentPeriodEnd: new Date(\"2025-01-20T06:59:31.349Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-10-04T04:56:04.382Z\"),\n      startedAt: new Date(\"2023-01-22T12:57:07.430Z\"),\n      endsAt: new Date(\"2025-08-08T17:53:12.513Z\"),\n      endedAt: new Date(\"2023-10-08T02:40:52.099Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 394013,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-09-14T04:37:19.722Z\"),\n        modifiedAt: new Date(\"2025-03-24T00:03:13.207Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": 3929,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-03-10T21:57:02.022Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-09-03T02:13:58.900Z\"),\n        modifiedAt: new Date(\"2023-01-06T20:49:48.804Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"tall sans now duh mysteriously\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-11-13T10:48:05.575Z\"),\n            modifiedAt: new Date(\"2023-11-25T09:50:52.301Z\"),\n            description: \"afford while lest at important ew yowza whereas demob\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 143.16,\n            },\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              guildToken: \"<value>\",\n            },\n          },\n        ],\n        medias: [],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-01-20T13:33:31.771Z\"),\n              modifiedAt: new Date(\"2024-02-22T02:13:37.066Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 915760,\n            required: true,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-06-03T11:59:38.300Z\"),\n              modifiedAt: new Date(\"2023-03-14T13:16:39.126Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 6037.18,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 560596,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"fixed\",\n        basisPoints: 172538,\n        createdAt: new Date(\"2023-03-14T09:14:44.030Z\"),\n        modifiedAt: new Date(\"2025-07-07T23:54:00.303Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-10-11T04:49:26.739Z\"),\n        endsAt: new Date(\"2025-05-30T13:10:48.001Z\"),\n        maxRedemptions: 981769,\n        redemptionsCount: 131085,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-03-28T22:24:16.436Z\"),\n          modifiedAt: new Date(\"2023-06-25T07:31:50.142Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n        {\n          createdAt: new Date(\"2024-04-26T03:42:46.919Z\"),\n          modifiedAt: new Date(\"2023-07-10T15:18:31.478Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 777708,\n        },\n        {\n          createdAt: new Date(\"2023-02-23T15:34:22.418Z\"),\n          modifiedAt: new Date(\"2025-11-06T22:37:29.139Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2023-12-29T09:31:58.314Z\"),\n          modifiedAt: new Date(\"2023-05-11T16:22:21.331Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 273221,\n              \"key1\": 210374,\n            },\n            createdAt: new Date(\"2024-09-26T10:52:31.232Z\"),\n            modifiedAt: new Date(\"2024-10-22T00:38:08.110Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"eq\",\n                  value: \"<value>\",\n                },\n              ],\n            },\n            aggregation: {\n              func: \"min\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2024-05-26T14:01:08.339Z\"),\n          modifiedAt: new Date(\"2023-05-01T04:54:46.773Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 4108.38,\n            },\n            createdAt: new Date(\"2025-09-01T19:58:32.729Z\"),\n            modifiedAt: new Date(\"2023-04-15T12:01:43.458Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"sum\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2024-07-14T14:21:57.379Z\"),\n          modifiedAt: new Date(\"2024-11-19T07:47:16.233Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n\n            },\n            createdAt: new Date(\"2024-03-01T13:08:49.991Z\"),\n            modifiedAt: new Date(\"2025-03-20T14:00:49.875Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
