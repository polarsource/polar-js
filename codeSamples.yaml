overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefitGrants.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    type: \"license_keys\",\n    description: \"mature emergent at outside arrogantly gadzooks zealous equatorial notwithstanding\",\n    properties: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {\n      type: \"meter_credit\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    paymentProcessor: \"stripe\",\n    allowDiscountCodes: true,\n    requireBillingAddress: false,\n    productPriceId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.create({\n    customerBillingAddress: {\n      country: \"US\",\n    },\n    products: [\n      \"<value 1>\",\n      \"<value 2>\",\n      \"<value 3>\",\n    ],\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {\n      customerBillingAddress: null,\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.update({\n    id: \"<value>\",\n    checkoutUpdate: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    type: \"select\",\n    slug: \"<value>\",\n    name: \"<value>\",\n    properties: {\n      options: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {\n      type: \"date\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {\n      benefitType: \"license_keys\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customer-session/introspect"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerSession.introspect({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    billingAddress: {\n      country: \"US\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.listPaymentMethods({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.addPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    confirmationTokenId: \"<id>\",\n    setDefault: false,\n    returnUrl: \"https://yearly-custom.net/\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.confirmPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    setupIntentId: \"<id>\",\n    setDefault: true,\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.customers.deletePaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerOrderUpdate: {\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/confirm-payment"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.confirmRetryPayment({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerOrderConfirmPayment: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.generateInvoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/payment-status"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.getPaymentStatus({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/seats"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.seats.listSeats({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/seats"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.seats.assignSeat({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/seats/subscriptions"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.seats.listClaimedSubscriptions({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/seats/{seat_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.seats.revokeSeat({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    seatId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/seats/{seat_id}/resend"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.seats.resendInvitation({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    seatId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerSubscriptionUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/wallets/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.wallets.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/wallets/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.wallets.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-seats"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSeats.listSeats({});\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-seats"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSeats.assignSeat({});\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-seats/claim"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerSeats.claimSeat({\n    invitationToken: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-seats/claim/{invitation_token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerSeats.getClaimInfo({\n    invitationToken: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-seats/{seat_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSeats.revokeSeat({\n    seatId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-seats/{seat_id}/resend"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSeats.resendInvitation({\n    seatId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSessions.create({\n    returnUrl: \"https://example.com/account\",\n    externalCustomerId: \"<id>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    externalId: \"usr_1337\",\n    email: \"customer@example.com\",\n    name: \"John Doe\",\n    billingAddress: {\n      country: \"US\",\n    },\n    taxId: [\n      \"911144442\",\n      \"us_ein\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.export({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.deleteExternal({\n    externalId: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getExternal({\n    externalId: \"<id>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.updateExternal({\n    externalId: \"<id>\",\n    customerUpdateExternalID: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: null,\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getStateExternal({\n    externalId: \"<id>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      externalId: \"usr_1337\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/balance"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getBalance({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getState({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"once\",\n    type: \"fixed\",\n    basisPoints: 449604,\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.ingest({\n    events: [],\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.listNames({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 612128,\n    upload: {\n      parts: [],\n    },\n    service: \"downloadable\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/boot\",\n      parts: [\n        {\n          number: 979613,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.create({\n    name: \"<value>\",\n    filter: {\n      conjunction: \"or\",\n      clauses: [],\n    },\n    aggregation: {\n      func: \"count\",\n    },\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.update({\n    id: \"<value>\",\n    meterUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.quantities({\n    id: \"<value>\",\n    startTimestamp: new Date(\"2025-11-25T04:37:16.823Z\"),\n    endTimestamp: new Date(\"2025-11-26T17:06:00.727Z\"),\n    interval: \"day\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types/rfcdate.js\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2025-03-14\"),\n    endDate: new RFCDate(\"2025-03-18\"),\n    interval: \"hour\",\n    organizationId: null,\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.create({\n    redirectUris: [\n      \"https://impolite-hippodrome.com/\",\n      \"https://acidic-tomography.net/\",\n    ],\n    clientName: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.delete({\n    clientId: \"<id>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.get({\n    clientId: \"<id>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.update({\n    clientId: \"<id>\",\n    oAuth2ClientConfigurationUpdate: {\n      redirectUris: [\n        \"https://classic-cantaloupe.org\",\n        \"https://corrupt-status.biz/\",\n      ],\n      clientName: \"<value>\",\n      clientId: \"<id>\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    grantType: \"authorization_code\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://memorable-season.name\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.export({\n    organizationId: null,\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.update({\n    id: \"<value>\",\n    orderUpdate: {\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.generateInvoice({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    organizationUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({\n    organizationId: null,\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    prices: [\n      {\n        amountType: \"custom\",\n        priceCurrency: \"usd\",\n      },\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value 1>\",\n        \"<value 2>\",\n        \"<value 3>\",\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.create({\n    orderId: \"<value>\",\n    reason: \"customer_request\",\n    amount: 90,\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.create({\n    productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n    customerId: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.revoke({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.update({\n    id: \"<value>\",\n    subscriptionUpdate: {\n      discountId: \"<value>\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/wallets/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.wallets.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/wallets/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.wallets.get({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/wallets/{id}/top-up"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.wallets.topUp({\n    id: \"<value>\",\n    walletTopUpCreate: {\n      amount: 2000,\n      currency: \"Venezuelan bolívar\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/deliveries"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.listWebhookDeliveries({});\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.listWebhookEndpoints({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.createWebhookEndpoint({\n    url: \"https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0\",\n    format: \"slack\",\n    events: [\n      \"subscription.canceled\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.webhooks.deleteWebhookEndpoint({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.getWebhookEndpoint({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.updateWebhookEndpoint({\n    id: \"<value>\",\n    webhookEndpointUpdate: {\n      url: \"https://webhook.site/cb791d80-f26e-4f8c-be88-6e56054192b0\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/endpoints/{id}/secret"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.resetWebhookEndpointSecret({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/webhooks/events/{id}/redeliver"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.webhooks.redeliverWebhookEvent({\n    id: \"<value>\",\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    type: \"benefit.created\",\n    timestamp: new Date(\"2025-10-17T23:42:52.571Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-05-24T21:27:59.843Z\"),\n      modifiedAt: new Date(\"2024-07-01T06:29:09.775Z\"),\n      type: \"github_repository\",\n      description: \"beneath terrorise but about uh-huh\",\n      selectable: false,\n      deletable: true,\n      organizationId: \"<value>\",\n      metadata: {\n\n      },\n      properties: {\n        repositoryOwner: \"polarsource\",\n        repositoryName: \"private_repo\",\n        permission: \"push\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    type: \"benefit.updated\",\n    timestamp: new Date(\"2024-09-24T20:33:20.375Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-12-28T13:48:13.081Z\"),\n      modifiedAt: new Date(\"2023-10-27T10:32:06.844Z\"),\n      type: \"custom\",\n      description: \"fooey save simple an prime fast modulo nor randomize worth\",\n      selectable: false,\n      deletable: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      properties: {\n        note: \"<value>\",\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    type: \"benefit_grant.created\",\n    timestamp: new Date(\"2025-07-29T09:12:26.895Z\"),\n    data: {\n      createdAt: new Date(\"2025-07-26T11:51:14.320Z\"),\n      modifiedAt: new Date(\"2023-06-26T18:19:56.152Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-05-12T01:27:02.379Z\"),\n        modifiedAt: new Date(\"2023-11-17T04:22:37.821Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-02-21T01:01:33.050Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2023-07-27T17:46:55.663Z\"),\n        modifiedAt: new Date(\"2024-02-04T07:22:26.555Z\"),\n        type: \"custom\",\n        description: \"blah even spirit reprove gee instead that longingly\",\n        selectable: false,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        properties: {\n          note: null,\n        },\n      },\n      properties: {},\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCycledPost({\n    type: \"benefit_grant.cycled\",\n    timestamp: new Date(\"2023-11-21T13:26:50.948Z\"),\n    data: {\n      createdAt: new Date(\"2023-07-19T03:56:32.649Z\"),\n      modifiedAt: new Date(\"2025-06-08T22:06:37.934Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-06-18T10:06:52.830Z\"),\n        modifiedAt: new Date(\"2024-06-29T04:36:34.181Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-09-22T10:01:13.690Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-08-15T00:34:14.846Z\"),\n        modifiedAt: new Date(\"2025-10-24T15:26:44.314Z\"),\n        type: \"discord\",\n        description: \"unimportant ah prickly past\",\n        selectable: true,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        properties: {\n          guildId: \"<id>\",\n          roleId: \"<id>\",\n          kickMember: true,\n          guildToken: \"<value>\",\n        },\n      },\n      properties: {},\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    type: \"benefit_grant.revoked\",\n    timestamp: new Date(\"2025-10-11T18:40:00.865Z\"),\n    data: {\n      createdAt: new Date(\"2023-04-30T09:48:15.700Z\"),\n      modifiedAt: new Date(\"2024-12-06T00:35:53.453Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-05-05T05:52:04.552Z\"),\n        modifiedAt: new Date(\"2024-09-18T14:08:44.723Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: null,\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-11-04T03:19:52.925Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-03-12T16:39:36.178Z\"),\n        modifiedAt: new Date(\"2024-07-08T07:08:59.377Z\"),\n        type: \"discord\",\n        description: \"grandiose royal surface before ouch silently authentic more override reassuringly\",\n        selectable: false,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        properties: {\n          guildId: \"<id>\",\n          roleId: \"<id>\",\n          kickMember: false,\n          guildToken: \"<value>\",\n        },\n      },\n      properties: {},\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    type: \"benefit_grant.updated\",\n    timestamp: new Date(\"2023-06-15T00:42:20.858Z\"),\n    data: {\n      createdAt: new Date(\"2023-09-09T02:35:13.085Z\"),\n      modifiedAt: new Date(\"2024-04-28T04:44:42.040Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-06-22T06:57:35.281Z\"),\n        modifiedAt: new Date(\"2025-06-14T15:07:20.731Z\"),\n        metadata: {\n          \"key\": 322224,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-09-29T05:46:04.457Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-09-22T18:19:02.554Z\"),\n        modifiedAt: new Date(\"2023-12-23T22:21:47.780Z\"),\n        type: \"downloadables\",\n        description: \"diligently phony super boo veg crafty\",\n        selectable: false,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        properties: {\n          archived: {\n            \"key\": false,\n            \"key1\": false,\n            \"key2\": true,\n          },\n          files: [],\n        },\n      },\n      properties: {},\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    type: \"checkout.created\",\n    timestamp: new Date(\"2023-02-15T15:44:21.478Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-09-12T19:48:15.814Z\"),\n      modifiedAt: new Date(\"2023-09-14T02:01:27.394Z\"),\n      paymentProcessor: \"stripe\",\n      status: \"expired\",\n      clientSecret: \"<value>\",\n      url: \"https://agreeable-reboot.biz\",\n      expiresAt: new Date(\"2024-05-02T18:25:33.974Z\"),\n      successUrl: \"https://rural-outrun.org\",\n      returnUrl: \"https://clean-humidity.com/\",\n      embedOrigin: \"<value>\",\n      amount: 275553,\n      discountAmount: 9980,\n      netAmount: 266632,\n      taxAmount: 348968,\n      totalAmount: 203013,\n      currency: \"Australian Dollar\",\n      activeTrialInterval: \"day\",\n      activeTrialIntervalCount: 746373,\n      trialEnd: new Date(\"2023-02-22T08:13:16.795Z\"),\n      organizationId: \"<value>\",\n      productId: null,\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: false,\n      requireBillingAddress: false,\n      isDiscountApplicable: false,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: false,\n      customerId: \"<value>\",\n      isBusinessCustomer: true,\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingName: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n        \"key2\": \"<value>\",\n      },\n      billingAddressFields: {\n        country: \"required\",\n        state: \"optional\",\n        city: \"disabled\",\n        postalCode: \"optional\",\n        line1: \"required\",\n        line2: \"disabled\",\n      },\n      trialInterval: null,\n      trialIntervalCount: 675830,\n      metadata: {\n        \"key\": true,\n      },\n      externalCustomerId: \"<id>\",\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-01-06T18:09:03.676Z\"),\n          modifiedAt: new Date(\"2024-05-28T21:42:41.690Z\"),\n          trialInterval: \"month\",\n          trialIntervalCount: 590205,\n          name: \"<value>\",\n          description: \"structure tenderly dirty colon though\",\n          recurringInterval: null,\n          recurringIntervalCount: 996088,\n          isRecurring: false,\n          isArchived: true,\n          organizationId: \"<value>\",\n          prices: [],\n          benefits: [],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/var/yp\",\n              mimeType: \"<value>\",\n              size: 1211,\n              storageVersion: \"<value>\",\n              checksumEtag: null,\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2023-08-11T21:05:07.943Z\"),\n              version: \"<value>\",\n              service: \"product_media\",\n              isUploaded: false,\n              createdAt: new Date(\"2024-09-05T01:36:20.132Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://next-peninsula.net\",\n            },\n          ],\n        },\n      ],\n      product: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-07-24T22:06:51.276Z\"),\n        modifiedAt: new Date(\"2025-04-12T19:47:40.853Z\"),\n        trialInterval: null,\n        trialIntervalCount: null,\n        name: \"<value>\",\n        description: \"below presell cleave silky marimba\",\n        recurringInterval: \"month\",\n        recurringIntervalCount: 174683,\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        prices: [],\n        benefits: [],\n        medias: [],\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-09-14T04:08:29.152Z\"),\n        modifiedAt: new Date(\"2025-10-07T17:41:46.324Z\"),\n        id: \"<value>\",\n        amountType: \"fixed\",\n        isArchived: true,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"week\",\n        priceCurrency: \"<value>\",\n        priceAmount: 538327,\n        legacy: true,\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 509971,\n        type: \"percentage\",\n        basisPoints: 1000,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: null,\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [],\n      customerMetadata: {\n\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    type: \"checkout.updated\",\n    timestamp: new Date(\"2023-03-19T05:40:46.816Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-09-17T13:52:37.257Z\"),\n      modifiedAt: new Date(\"2024-11-07T08:23:01.152Z\"),\n      paymentProcessor: \"stripe\",\n      status: \"expired\",\n      clientSecret: \"<value>\",\n      url: \"https://male-punctuation.name\",\n      expiresAt: new Date(\"2025-03-26T06:13:51.386Z\"),\n      successUrl: \"https://monumental-mathematics.info\",\n      returnUrl: \"https://scary-valley.com/\",\n      embedOrigin: \"<value>\",\n      amount: 867510,\n      discountAmount: 469340,\n      netAmount: 139232,\n      taxAmount: 373760,\n      totalAmount: 41301,\n      currency: \"Azerbaijanian Manat\",\n      activeTrialInterval: \"week\",\n      activeTrialIntervalCount: null,\n      trialEnd: new Date(\"2025-01-03T13:19:57.814Z\"),\n      organizationId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      requireBillingAddress: false,\n      isDiscountApplicable: true,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: true,\n      customerId: \"<value>\",\n      isBusinessCustomer: true,\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingName: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n      },\n      billingAddressFields: {\n        country: \"disabled\",\n        state: \"disabled\",\n        city: \"disabled\",\n        postalCode: \"optional\",\n        line1: \"optional\",\n        line2: \"required\",\n      },\n      trialInterval: \"month\",\n      trialIntervalCount: 971558,\n      metadata: {\n        \"key\": 4652.47,\n      },\n      externalCustomerId: \"<id>\",\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-06-21T05:48:31.398Z\"),\n          modifiedAt: new Date(\"2024-09-06T09:34:57.464Z\"),\n          trialInterval: \"day\",\n          trialIntervalCount: 868555,\n          name: \"<value>\",\n          description: \"tempting by or hippodrome mountain strict militate soupy partially simple\",\n          recurringInterval: \"year\",\n          recurringIntervalCount: 787637,\n          isRecurring: true,\n          isArchived: true,\n          organizationId: \"<value>\",\n          prices: [],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2024-03-20T21:54:02.026Z\"),\n              modifiedAt: new Date(\"2025-11-22T22:06:43.546Z\"),\n              type: \"github_repository\",\n              description: \"boring mysterious psst though lest\",\n              selectable: false,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/var/yp\",\n              mimeType: \"<value>\",\n              size: 742109,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-01-05T08:21:09.966Z\"),\n              version: null,\n              service: \"product_media\",\n              isUploaded: false,\n              createdAt: new Date(\"2024-07-12T04:50:26.552Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://common-makeover.biz/\",\n            },\n          ],\n        },\n      ],\n      product: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-06-19T06:14:05.114Z\"),\n        modifiedAt: new Date(\"2023-03-11T18:17:16.587Z\"),\n        trialInterval: \"year\",\n        trialIntervalCount: 392090,\n        name: \"<value>\",\n        description: \"whereas steeple brr regularly make huzzah cheerfully ignite sense\",\n        recurringInterval: \"week\",\n        recurringIntervalCount: 439686,\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2025-06-19T15:55:16.121Z\"),\n            modifiedAt: new Date(\"2025-11-24T07:57:40.732Z\"),\n            id: \"<value>\",\n            amountType: \"fixed\",\n            isArchived: true,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"year\",\n            priceCurrency: \"<value>\",\n            priceAmount: 41520,\n            legacy: true,\n          },\n        ],\n        benefits: [],\n        medias: [],\n      },\n      productPrice: {\n        createdAt: new Date(\"2023-10-22T04:58:53.063Z\"),\n        modifiedAt: new Date(\"2024-01-03T01:38:04.965Z\"),\n        id: \"<value>\",\n        amountType: \"seat_based\",\n        isArchived: true,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        seatTiers: {\n          tiers: [],\n        },\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 327405,\n        type: \"fixed\",\n        amount: 1000,\n        currency: \"usd\",\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-05-09T18:59:08.115Z\"),\n            modifiedAt: new Date(\"2024-09-29T03:43:11.374Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 916655,\n            },\n            type: \"date\",\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 596151,\n          required: false,\n        },\n      ],\n      customerMetadata: {\n        \"key\": false,\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerCreatedPost({\n    type: \"customer.created\",\n    timestamp: new Date(\"2025-10-24T17:37:29.711Z\"),\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2025-03-08T02:57:16.205Z\"),\n      modifiedAt: new Date(\"2024-10-31T06:26:45.555Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2023-03-24T20:28:46.681Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerDeletedPost({\n    type: \"customer.deleted\",\n    timestamp: new Date(\"2023-07-12T21:40:34.752Z\"),\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2025-12-23T11:32:42.100Z\"),\n      modifiedAt: new Date(\"2023-07-09T17:16:24.833Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2023-09-30T09:04:17.770Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerStateChangedPost({\n    type: \"customer.state_changed\",\n    timestamp: new Date(\"2025-05-22T16:03:32.369Z\"),\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-25T20:57:42.542Z\"),\n      modifiedAt: null,\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-09-08T18:19:10.187Z\"),\n      activeSubscriptions: [],\n      grantedBenefits: [\n        {\n          id: \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n          createdAt: new Date(\"2025-09-01T02:21:29.525Z\"),\n          modifiedAt: new Date(\"2023-11-12T17:51:37.646Z\"),\n          grantedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          benefitId: \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n          benefitType: \"meter_credit\",\n          benefitMetadata: {\n            \"key\": \"value\",\n          },\n          properties: {},\n        },\n      ],\n      activeMeters: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-08-10T12:57:32.427Z\"),\n          modifiedAt: new Date(\"2024-11-09T02:09:01.550Z\"),\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          balance: 75,\n        },\n      ],\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerUpdatedPost({\n    type: \"customer.updated\",\n    timestamp: new Date(\"2023-07-09T20:22:33.716Z\"),\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2024-07-18T23:25:12.977Z\"),\n      modifiedAt: new Date(\"2023-04-07T04:58:11.725Z\"),\n      metadata: {\n        \"key\": 983601,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-01-11T12:43:11.694Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer_seat.assigned"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerSeatAssignedPost({\n    type: \"customer_seat.assigned\",\n    timestamp: new Date(\"2023-01-24T21:46:22.729Z\"),\n    data: {\n      createdAt: new Date(\"2024-04-02T01:55:00.575Z\"),\n      modifiedAt: new Date(\"2025-03-27T17:16:29.966Z\"),\n      id: \"ded032fb-362e-4ae1-83b9-4f4bcab6f430\",\n      status: \"revoked\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer_seat.claimed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerSeatClaimedPost({\n    type: \"customer_seat.claimed\",\n    timestamp: new Date(\"2023-08-22T13:16:39.616Z\"),\n    data: {\n      createdAt: new Date(\"2023-05-10T18:50:40.033Z\"),\n      modifiedAt: new Date(\"2023-07-12T19:06:41.896Z\"),\n      id: \"35ac8c8c-dc4e-44ea-9684-2a2c2b600002\",\n      status: \"pending\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer_seat.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerSeatRevokedPost({\n    type: \"customer_seat.revoked\",\n    timestamp: new Date(\"2023-11-12T11:49:39.839Z\"),\n    data: {\n      createdAt: new Date(\"2024-08-05T10:54:13.336Z\"),\n      modifiedAt: new Date(\"2023-12-02T21:24:11.844Z\"),\n      id: \"518899df-02c0-4220-abaf-0f2f32e97539\",\n      status: \"pending\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    type: \"order.created\",\n    timestamp: new Date(\"2024-08-21T06:55:49.348Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-01-02T23:31:01.991Z\"),\n      modifiedAt: new Date(\"2025-11-09T23:45:36.352Z\"),\n      status: \"pending\",\n      paid: true,\n      subtotalAmount: 10000,\n      discountAmount: 1000,\n      netAmount: 9000,\n      taxAmount: 720,\n      totalAmount: 9720,\n      appliedBalanceAmount: 0,\n      dueAmount: 0,\n      refundedAmount: 0,\n      refundedTaxAmount: 0,\n      currency: \"usd\",\n      billingReason: \"purchase\",\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n      invoiceNumber: \"<value>\",\n      isInvoiceGenerated: false,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      platformFeeAmount: 500,\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-09T17:02:40.706Z\"),\n        modifiedAt: new Date(\"2025-10-06T19:34:47.732Z\"),\n        metadata: {\n          \"key\": 701529,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: null,\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        id: \"<value>\",\n        createdAt: new Date(\"2025-06-03T19:46:15.179Z\"),\n        modifiedAt: new Date(\"2023-10-21T21:28:56.316Z\"),\n        trialInterval: \"week\",\n        trialIntervalCount: 271259,\n        name: \"<value>\",\n        description: \"gadzooks trek amid misspend ravioli supposing bare pfft\",\n        recurringInterval: \"week\",\n        recurringIntervalCount: 168138,\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 260667,\n        type: \"percentage\",\n        amount: 1000,\n        currency: \"usd\",\n        createdAt: new Date(\"2024-04-11T00:21:08.353Z\"),\n        modifiedAt: new Date(\"2025-05-03T15:56:59.028Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: null,\n        startsAt: new Date(\"2023-03-06T18:58:41.541Z\"),\n        endsAt: new Date(\"2024-02-07T05:20:48.151Z\"),\n        maxRedemptions: 200286,\n        redemptionsCount: 148325,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: null,\n      items: [\n        {\n          createdAt: new Date(\"2024-01-04T15:31:18.185Z\"),\n          modifiedAt: new Date(\"2023-12-10T13:26:22.287Z\"),\n          id: \"<value>\",\n          label: \"Pro Plan\",\n          amount: 10000,\n          taxAmount: 720,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n      ],\n      description: \"Pro Plan\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderPaidPost({\n    type: \"order.paid\",\n    timestamp: new Date(\"2025-12-05T07:44:21.172Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-07-27T09:45:49.517Z\"),\n      modifiedAt: new Date(\"2024-12-13T20:55:19.644Z\"),\n      status: \"partially_refunded\",\n      paid: true,\n      subtotalAmount: 10000,\n      discountAmount: 1000,\n      netAmount: 9000,\n      taxAmount: 720,\n      totalAmount: 9720,\n      appliedBalanceAmount: 0,\n      dueAmount: 0,\n      refundedAmount: 0,\n      refundedTaxAmount: 0,\n      currency: \"usd\",\n      billingReason: \"subscription_update\",\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n      invoiceNumber: \"<value>\",\n      isInvoiceGenerated: true,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      platformFeeAmount: 500,\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-31T00:54:53.749Z\"),\n        modifiedAt: new Date(\"2025-07-24T12:09:26.716Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-04-20T14:41:24.727Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        id: \"<value>\",\n        createdAt: new Date(\"2023-06-18T22:24:34.935Z\"),\n        modifiedAt: new Date(\"2025-08-01T03:33:20.782Z\"),\n        trialInterval: \"week\",\n        trialIntervalCount: 125374,\n        name: \"<value>\",\n        description: \"easily carouse plus quietly reservation bright injunction plastic gah\",\n        recurringInterval: \"year\",\n        recurringIntervalCount: 458129,\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 375708,\n        type: \"percentage\",\n        amount: 1000,\n        currency: \"usd\",\n        createdAt: new Date(\"2024-05-24T21:01:40.292Z\"),\n        modifiedAt: new Date(\"2024-05-25T21:22:06.978Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-09-14T19:23:38.365Z\"),\n        endsAt: new Date(\"2024-10-02T13:51:42.523Z\"),\n        maxRedemptions: 231748,\n        redemptionsCount: 846855,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 5251.57,\n        },\n        createdAt: new Date(\"2025-02-12T23:41:13.290Z\"),\n        modifiedAt: new Date(\"2023-02-24T15:15:22.018Z\"),\n        id: \"<value>\",\n        amount: 10000,\n        currency: \"usd\",\n        recurringInterval: \"week\",\n        recurringIntervalCount: 310795,\n        status: \"canceled\",\n        currentPeriodStart: new Date(\"2023-11-20T10:20:23.628Z\"),\n        currentPeriodEnd: new Date(\"2025-08-05T06:11:40.745Z\"),\n        trialStart: new Date(\"2023-12-05T06:32:48.307Z\"),\n        trialEnd: null,\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2023-08-08T23:25:37.197Z\"),\n        startedAt: new Date(\"2024-10-04T00:59:57.339Z\"),\n        endsAt: new Date(\"2025-02-01T22:39:43.609Z\"),\n        endedAt: new Date(\"2023-08-04T10:17:52.706Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: null,\n        customerCancellationComment: \"<value>\",\n      },\n      items: [],\n      description: \"Pro Plan\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderRefundedPost({\n    type: \"order.refunded\",\n    timestamp: new Date(\"2024-07-23T18:00:11.615Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-03-19T11:53:59.744Z\"),\n      modifiedAt: new Date(\"2024-12-01T04:03:14.906Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 10000,\n      discountAmount: 1000,\n      netAmount: 9000,\n      taxAmount: 720,\n      totalAmount: 9720,\n      appliedBalanceAmount: 0,\n      dueAmount: 0,\n      refundedAmount: 0,\n      refundedTaxAmount: 0,\n      currency: \"usd\",\n      billingReason: \"subscription_create\",\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n      invoiceNumber: \"<value>\",\n      isInvoiceGenerated: false,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      platformFeeAmount: 500,\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-05-21T22:00:59.902Z\"),\n        modifiedAt: new Date(\"2024-08-24T07:48:58.778Z\"),\n        metadata: {\n          \"key\": 647689,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-08-19T02:54:30.835Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      userId: \"<value>\",\n      product: null,\n      discount: {\n        duration: \"once\",\n        durationInMonths: 310259,\n        type: \"percentage\",\n        amount: 1000,\n        currency: \"usd\",\n        createdAt: new Date(\"2023-01-26T21:26:48.872Z\"),\n        modifiedAt: new Date(\"2023-01-16T07:26:04.196Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 4016.73,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-09-14T03:05:33.012Z\"),\n        endsAt: null,\n        maxRedemptions: 211875,\n        redemptionsCount: 188354,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: null,\n      items: [\n        {\n          createdAt: new Date(\"2024-12-08T10:40:25.472Z\"),\n          modifiedAt: new Date(\"2023-12-20T17:19:16.701Z\"),\n          id: \"<value>\",\n          label: \"Pro Plan\",\n          amount: 10000,\n          taxAmount: 720,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n      ],\n      description: \"Pro Plan\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderUpdatedPost({\n    type: \"order.updated\",\n    timestamp: new Date(\"2023-10-25T00:08:50.290Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-04-30T23:35:35.375Z\"),\n      modifiedAt: new Date(\"2025-06-01T02:02:46.580Z\"),\n      status: \"pending\",\n      paid: true,\n      subtotalAmount: 10000,\n      discountAmount: 1000,\n      netAmount: 9000,\n      taxAmount: 720,\n      totalAmount: 9720,\n      appliedBalanceAmount: 0,\n      dueAmount: 0,\n      refundedAmount: 0,\n      refundedTaxAmount: 0,\n      currency: \"usd\",\n      billingReason: \"subscription_create\",\n      billingName: \"<value>\",\n      billingAddress: {\n        country: \"US\",\n      },\n      invoiceNumber: \"<value>\",\n      isInvoiceGenerated: true,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      platformFeeAmount: 500,\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-12-14T17:38:07.808Z\"),\n        modifiedAt: new Date(\"2024-04-07T10:18:18.539Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-10-23T02:39:12.424Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        id: \"<value>\",\n        createdAt: new Date(\"2024-12-03T05:16:11.415Z\"),\n        modifiedAt: new Date(\"2023-03-11T05:58:05.184Z\"),\n        trialInterval: null,\n        trialIntervalCount: null,\n        name: \"<value>\",\n        description: \"simple eventually briskly considering\",\n        recurringInterval: \"month\",\n        recurringIntervalCount: null,\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 976971,\n        type: \"fixed\",\n        basisPoints: 1000,\n        createdAt: new Date(\"2024-02-28T06:12:39.096Z\"),\n        modifiedAt: new Date(\"2023-10-01T05:16:42.046Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-08-28T07:16:56.183Z\"),\n        endsAt: new Date(\"2023-02-25T14:55:58.248Z\"),\n        maxRedemptions: 970746,\n        redemptionsCount: 314425,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: null,\n      items: [\n        {\n          createdAt: new Date(\"2024-10-24T22:29:24.352Z\"),\n          modifiedAt: new Date(\"2023-05-02T19:12:30.014Z\"),\n          id: \"<value>\",\n          label: \"Pro Plan\",\n          amount: 10000,\n          taxAmount: 720,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n      ],\n      description: \"Pro Plan\",\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    type: \"organization.updated\",\n    timestamp: new Date(\"2025-08-19T15:02:44.139Z\"),\n    data: {\n      createdAt: new Date(\"2025-05-07T21:24:48.059Z\"),\n      modifiedAt: new Date(\"2023-04-16T23:18:12.986Z\"),\n      id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: \"https://pessimistic-going.name/\",\n      email: \"Stefan_Pagac@yahoo.com\",\n      website: \"<value>\",\n      socials: [],\n      status: \"created\",\n      detailsSubmittedAt: new Date(\"2024-05-05T12:48:25.627Z\"),\n      featureSettings: {},\n      subscriptionSettings: {\n        allowMultipleSubscriptions: true,\n        allowCustomerUpdates: false,\n        prorationBehavior: \"prorate\",\n        benefitRevocationGracePeriod: 219094,\n      },\n      notificationSettings: {\n        newOrder: true,\n        newSubscription: false,\n      },\n      customerEmailSettings: {\n        orderConfirmation: false,\n        subscriptionCancellation: true,\n        subscriptionConfirmation: false,\n        subscriptionCycled: true,\n        subscriptionPastDue: true,\n        subscriptionRevoked: true,\n        subscriptionUncanceled: false,\n        subscriptionUpdated: true,\n      },\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    type: \"product.created\",\n    timestamp: new Date(\"2023-10-13T02:47:55.082Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-01-15T03:15:59.062Z\"),\n      modifiedAt: new Date(\"2023-07-04T11:33:29.001Z\"),\n      trialInterval: \"day\",\n      trialIntervalCount: 130829,\n      name: \"<value>\",\n      description: \"generously as at filthy busy athwart\",\n      recurringInterval: \"year\",\n      recurringIntervalCount: 944417,\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n\n      },\n      prices: [],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-03-03T14:19:40.156Z\"),\n          modifiedAt: new Date(\"2025-12-07T23:08:11.973Z\"),\n          type: \"discord\",\n          description: \"gosh consequently gladly beneath horse\",\n          selectable: true,\n          deletable: false,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": 5806.69,\n          },\n          properties: {\n            guildId: \"<id>\",\n            roleId: \"<id>\",\n            kickMember: false,\n            guildToken: \"<value>\",\n          },\n        },\n      ],\n      medias: [],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-10-04T08:22:15.858Z\"),\n            modifiedAt: null,\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            type: \"number\",\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 92084,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    type: \"product.updated\",\n    timestamp: new Date(\"2024-08-25T02:00:54.049Z\"),\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-02-11T18:19:05.372Z\"),\n      modifiedAt: new Date(\"2025-07-31T19:14:23.351Z\"),\n      trialInterval: \"year\",\n      trialIntervalCount: 907633,\n      name: \"<value>\",\n      description: \"square extract modulo bossy outlandish pecan\",\n      recurringInterval: \"year\",\n      recurringIntervalCount: 731544,\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-06-01T04:39:05.245Z\"),\n          modifiedAt: new Date(\"2024-05-10T10:53:55.427Z\"),\n          id: \"<value>\",\n          amountType: \"free\",\n          isArchived: true,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          legacy: true,\n        },\n      ],\n      benefits: [],\n      medias: [],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-06-23T20:05:36.217Z\"),\n            modifiedAt: new Date(\"2023-10-18T15:30:25.986Z\"),\n            id: \"<value>\",\n            metadata: {\n\n            },\n            type: \"text\",\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 752010,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundCreatedPost({\n    type: \"refund.created\",\n    timestamp: new Date(\"2025-02-15T13:46:01.700Z\"),\n    data: {\n      createdAt: new Date(\"2023-12-02T00:48:24.931Z\"),\n      modifiedAt: new Date(\"2025-08-16T15:26:20.191Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      status: \"pending\",\n      reason: \"other\",\n      amount: 104569,\n      taxAmount: 295454,\n      currency: \"Solomon Islands Dollar\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundUpdatedPost({\n    type: \"refund.updated\",\n    timestamp: new Date(\"2023-01-08T20:35:39.672Z\"),\n    data: {\n      createdAt: new Date(\"2025-03-28T13:42:04.506Z\"),\n      modifiedAt: new Date(\"2024-08-07T08:31:25.154Z\"),\n      id: \"<value>\",\n      metadata: {\n\n      },\n      status: \"canceled\",\n      reason: \"service_disruption\",\n      amount: 986698,\n      taxAmount: 785012,\n      currency: \"Congolese Franc\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    type: \"subscription.active\",\n    timestamp: new Date(\"2023-08-13T01:28:21.362Z\"),\n    data: {\n      createdAt: new Date(\"2023-10-12T10:17:29.274Z\"),\n      modifiedAt: new Date(\"2023-12-18T04:45:55.702Z\"),\n      id: \"<value>\",\n      amount: 10000,\n      currency: \"usd\",\n      recurringInterval: \"year\",\n      recurringIntervalCount: 291908,\n      status: \"past_due\",\n      currentPeriodStart: new Date(\"2023-06-09T14:14:48.363Z\"),\n      currentPeriodEnd: null,\n      trialStart: null,\n      trialEnd: null,\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2024-09-14T15:19:58.463Z\"),\n      startedAt: new Date(\"2024-07-30T05:01:30.550Z\"),\n      endsAt: new Date(\"2024-02-02T06:13:13.441Z\"),\n      endedAt: new Date(\"2023-10-10T03:15:20.759Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"unused\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 667866,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-02-14T12:59:50.680Z\"),\n        modifiedAt: new Date(\"2025-03-11T11:17:02.540Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-04-08T22:28:00.101Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-11-05T10:18:40.300Z\"),\n        modifiedAt: new Date(\"2024-04-23T18:24:43.408Z\"),\n        trialInterval: \"year\",\n        trialIntervalCount: 714669,\n        name: \"<value>\",\n        description: \"amongst incidentally irritably cauliflower antique\",\n        recurringInterval: \"month\",\n        recurringIntervalCount: 48572,\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": false,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2025-03-24T10:57:36.466Z\"),\n            modifiedAt: new Date(\"2024-10-17T11:42:46.643Z\"),\n            id: \"<value>\",\n            amountType: \"custom\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"day\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 154892,\n            maximumAmount: 778615,\n            presetAmount: 829362,\n            legacy: true,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-04-05T11:10:16.533Z\"),\n            modifiedAt: new Date(\"2023-02-12T06:44:11.052Z\"),\n            type: \"github_repository\",\n            description: \"against effector as upbeat yuck\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"maintain\",\n            },\n          },\n        ],\n        medias: [],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 629236,\n        type: \"percentage\",\n        basisPoints: 1000,\n        createdAt: new Date(\"2023-04-09T15:13:09.162Z\"),\n        modifiedAt: new Date(\"2023-02-11T00:08:34.711Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-07-16T10:58:24.296Z\"),\n        endsAt: null,\n        maxRedemptions: 929853,\n        redemptionsCount: 426681,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-06-23T00:23:01.418Z\"),\n          modifiedAt: new Date(\"2023-08-22T07:22:13.326Z\"),\n          id: \"<value>\",\n          amountType: \"custom\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"week\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 168659,\n          maximumAmount: 84871,\n          presetAmount: 549701,\n          legacy: true,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2024-10-27T03:26:40.201Z\"),\n          modifiedAt: null,\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 99831,\n            },\n            createdAt: new Date(\"2024-03-30T14:50:52.711Z\"),\n            modifiedAt: new Date(\"2024-06-25T05:59:30.258Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  property: \"<value>\",\n                  operator: \"eq\",\n                  value: \"<value>\",\n                },\n              ],\n            },\n            aggregation: {\n              func: \"count\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    type: \"subscription.canceled\",\n    timestamp: new Date(\"2025-02-09T04:39:02.332Z\"),\n    data: {\n      createdAt: new Date(\"2025-04-09T17:46:08.645Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      amount: 10000,\n      currency: \"usd\",\n      recurringInterval: \"day\",\n      recurringIntervalCount: 867179,\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2024-08-12T22:41:41.907Z\"),\n      currentPeriodEnd: new Date(\"2023-08-04T03:14:29.655Z\"),\n      trialStart: new Date(\"2025-03-21T15:50:39.816Z\"),\n      trialEnd: new Date(\"2024-01-07T18:54:45.602Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-05-05T03:28:24.281Z\"),\n      startedAt: new Date(\"2024-08-20T02:19:30.433Z\"),\n      endsAt: new Date(\"2023-01-03T22:38:10.292Z\"),\n      endedAt: null,\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: null,\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"missing_features\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-06-06T08:13:58.211Z\"),\n        modifiedAt: new Date(\"2023-06-07T02:15:24.636Z\"),\n        metadata: {\n          \"key\": 1764.16,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-03-18T13:26:34.470Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-08-22T01:08:59.550Z\"),\n        modifiedAt: null,\n        trialInterval: \"day\",\n        trialIntervalCount: 920579,\n        name: \"<value>\",\n        description: \"via hm truly\",\n        recurringInterval: \"month\",\n        recurringIntervalCount: 848785,\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        prices: [],\n        benefits: [],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/lib\",\n            mimeType: \"<value>\",\n            size: 83334,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-09-21T18:00:22.332Z\"),\n            version: \"<value>\",\n            service: \"product_media\",\n            isUploaded: true,\n            createdAt: new Date(\"2025-04-11T14:16:04.184Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://entire-ethyl.org/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-11-19T14:39:19.899Z\"),\n              modifiedAt: new Date(\"2024-10-07T08:09:01.589Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              type: \"checkbox\",\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 350933,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"percentage\",\n        basisPoints: 1000,\n        createdAt: new Date(\"2023-05-20T18:55:11.120Z\"),\n        modifiedAt: new Date(\"2025-01-19T16:58:36.968Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-09-20T02:04:48.363Z\"),\n        endsAt: new Date(\"2023-02-23T04:10:00.244Z\"),\n        maxRedemptions: 839446,\n        redemptionsCount: 119301,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    type: \"subscription.created\",\n    timestamp: new Date(\"2024-05-03T11:46:21.459Z\"),\n    data: {\n      createdAt: new Date(\"2023-12-03T10:52:23.880Z\"),\n      modifiedAt: new Date(\"2024-05-29T05:21:44.072Z\"),\n      id: \"<value>\",\n      amount: 10000,\n      currency: \"usd\",\n      recurringInterval: \"day\",\n      recurringIntervalCount: 990795,\n      status: \"incomplete\",\n      currentPeriodStart: new Date(\"2024-01-07T06:33:36.381Z\"),\n      currentPeriodEnd: new Date(\"2024-07-30T16:54:44.427Z\"),\n      trialStart: new Date(\"2025-01-24T01:20:23.589Z\"),\n      trialEnd: new Date(\"2023-09-10T12:12:44.499Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2024-06-27T22:01:23.333Z\"),\n      startedAt: new Date(\"2024-07-24T19:43:04.879Z\"),\n      endsAt: null,\n      endedAt: new Date(\"2024-04-01T08:29:51.925Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"unused\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-09-10T08:59:46.091Z\"),\n        modifiedAt: new Date(\"2024-07-06T00:27:46.272Z\"),\n        metadata: {\n          \"key\": 9576.45,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-06-26T21:09:46.234Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        id: \"<value>\",\n        createdAt: new Date(\"2023-05-15T22:05:41.858Z\"),\n        modifiedAt: new Date(\"2024-01-31T16:35:38.441Z\"),\n        trialInterval: \"year\",\n        trialIntervalCount: 271531,\n        name: \"<value>\",\n        description: \"platypus scrape adventurously which cautiously secret completion\",\n        recurringInterval: \"year\",\n        recurringIntervalCount: 803045,\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [],\n        benefits: [],\n        medias: [],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 274053,\n        type: \"percentage\",\n        basisPoints: 1000,\n        createdAt: new Date(\"2025-09-05T16:45:03.444Z\"),\n        modifiedAt: new Date(\"2025-01-22T02:13:03.697Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-02-18T11:12:06.291Z\"),\n        endsAt: new Date(\"2024-01-29T14:46:42.846Z\"),\n        maxRedemptions: 440571,\n        redemptionsCount: 801134,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    type: \"subscription.revoked\",\n    timestamp: new Date(\"2024-01-02T06:40:50.860Z\"),\n    data: {\n      createdAt: new Date(\"2023-03-16T08:42:29.566Z\"),\n      modifiedAt: new Date(\"2023-10-28T01:20:21.930Z\"),\n      id: \"<value>\",\n      amount: 10000,\n      currency: \"usd\",\n      recurringInterval: \"day\",\n      recurringIntervalCount: 811590,\n      status: \"active\",\n      currentPeriodStart: new Date(\"2023-05-30T02:07:20.021Z\"),\n      currentPeriodEnd: new Date(\"2023-06-01T18:10:42.435Z\"),\n      trialStart: new Date(\"2023-02-17T04:59:11.584Z\"),\n      trialEnd: new Date(\"2024-02-14T23:20:57.498Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-11-13T16:37:04.348Z\"),\n      startedAt: new Date(\"2023-12-28T07:35:48.028Z\"),\n      endsAt: new Date(\"2024-01-26T10:24:50.250Z\"),\n      endedAt: new Date(\"2024-06-20T16:37:33.284Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 8717.41,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-05-28T06:09:58.228Z\"),\n        modifiedAt: new Date(\"2025-01-19T04:39:36.127Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-05-31T05:10:14.997Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-06-26T05:35:27.950Z\"),\n        modifiedAt: new Date(\"2024-06-01T00:18:42.763Z\"),\n        trialInterval: \"week\",\n        trialIntervalCount: 455030,\n        name: \"<value>\",\n        description: \"overburden quarrelsome outrun phew whose merrily language\",\n        recurringInterval: \"year\",\n        recurringIntervalCount: 518934,\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-12-16T06:31:21.339Z\"),\n            modifiedAt: new Date(\"2024-06-28T04:33:55.419Z\"),\n            type: \"discord\",\n            description: \"yuck after plus meh enrich that\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 484393,\n            },\n            properties: {\n              guildId: \"<id>\",\n              roleId: \"<id>\",\n              kickMember: false,\n              guildToken: \"<value>\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/bin\",\n            mimeType: \"<value>\",\n            size: 968821,\n            storageVersion: null,\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-08-08T17:21:00.549Z\"),\n            version: \"<value>\",\n            service: \"product_media\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-09-16T06:24:58.018Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://utter-requirement.name\",\n          },\n        ],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 999351,\n        type: \"percentage\",\n        amount: 1000,\n        currency: \"usd\",\n        createdAt: new Date(\"2024-07-01T13:17:29.420Z\"),\n        modifiedAt: new Date(\"2025-02-23T14:37:34.479Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-12-31T12:49:59.518Z\"),\n        endsAt: new Date(\"2024-06-27T11:23:29.412Z\"),\n        maxRedemptions: 437648,\n        redemptionsCount: 444423,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-10-03T04:33:30.421Z\"),\n          modifiedAt: new Date(\"2023-02-24T01:04:52.565Z\"),\n          id: \"<value>\",\n          amountType: \"fixed\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 213583,\n          legacy: true,\n        },\n      ],\n      meters: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUncanceledPost({\n    type: \"subscription.uncanceled\",\n    timestamp: new Date(\"2023-02-06T17:25:10.106Z\"),\n    data: {\n      createdAt: new Date(\"2023-05-13T11:53:26.507Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      amount: 10000,\n      currency: \"usd\",\n      recurringInterval: \"year\",\n      recurringIntervalCount: 406654,\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2025-06-06T02:06:49.326Z\"),\n      currentPeriodEnd: new Date(\"2023-04-28T08:16:42.068Z\"),\n      trialStart: new Date(\"2023-10-03T23:40:30.923Z\"),\n      trialEnd: new Date(\"2024-11-16T02:01:16.824Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-12-23T04:50:00.016Z\"),\n      startedAt: new Date(\"2024-10-18T16:25:47.209Z\"),\n      endsAt: new Date(\"2023-01-21T06:39:24.599Z\"),\n      endedAt: new Date(\"2023-06-01T22:55:56.558Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: null,\n      customerCancellationReason: \"switched_service\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-12-23T09:30:11.195Z\"),\n        modifiedAt: new Date(\"2024-12-20T09:31:52.259Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-09-22T11:20:51.361Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-10-15T19:47:04.648Z\"),\n        modifiedAt: new Date(\"2024-08-04T07:14:33.597Z\"),\n        trialInterval: \"month\",\n        trialIntervalCount: 449040,\n        name: \"<value>\",\n        description: \"geez proper whenever exaggerate\",\n        recurringInterval: \"week\",\n        recurringIntervalCount: 130752,\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 4421.44,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-02-14T17:42:30.228Z\"),\n            modifiedAt: new Date(\"2023-11-01T03:56:36.911Z\"),\n            id: \"<value>\",\n            amountType: \"seat_based\",\n            isArchived: true,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"week\",\n            priceCurrency: \"<value>\",\n            seatTiers: {\n              tiers: [],\n            },\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-10-16T22:21:29.269Z\"),\n            modifiedAt: new Date(\"2024-12-25T00:51:16.069Z\"),\n            type: \"license_keys\",\n            description: \"confound consequently fairly around winged lounge hmph\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n\n            },\n            properties: {\n              prefix: null,\n              expires: {\n                ttl: 137943,\n                timeframe: \"year\",\n              },\n              activations: {\n                limit: 601895,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 7151,\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/home/user\",\n            mimeType: \"<value>\",\n            size: 973918,\n            storageVersion: null,\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-08-03T23:06:56.842Z\"),\n            version: \"<value>\",\n            service: \"product_media\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-07-11T07:06:51.985Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://brave-apparatus.org\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-11-24T20:44:07.855Z\"),\n              modifiedAt: new Date(\"2023-01-08T04:12:28.982Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              type: \"number\",\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 641015,\n            required: true,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        basisPoints: 1000,\n        createdAt: new Date(\"2023-02-07T10:32:39.606Z\"),\n        modifiedAt: new Date(\"2025-11-03T02:51:34.636Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: null,\n        endsAt: new Date(\"2024-04-21T02:08:16.256Z\"),\n        maxRedemptions: 865781,\n        redemptionsCount: 827760,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    type: \"subscription.updated\",\n    timestamp: new Date(\"2023-06-24T13:26:25.969Z\"),\n    data: {\n      createdAt: new Date(\"2024-05-25T12:11:24.717Z\"),\n      modifiedAt: new Date(\"2024-07-08T02:17:23.799Z\"),\n      id: \"<value>\",\n      amount: 10000,\n      currency: \"usd\",\n      recurringInterval: \"week\",\n      recurringIntervalCount: 489836,\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-06-19T12:29:28.503Z\"),\n      currentPeriodEnd: new Date(\"2023-08-24T22:14:10.131Z\"),\n      trialStart: new Date(\"2025-12-11T02:41:54.261Z\"),\n      trialEnd: new Date(\"2025-12-29T02:13:52.269Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2025-01-23T22:07:32.693Z\"),\n      startedAt: new Date(\"2025-05-14T13:55:44.367Z\"),\n      endsAt: new Date(\"2024-10-25T00:53:02.943Z\"),\n      endedAt: new Date(\"2023-09-29T06:12:50.252Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"switched_service\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-02-26T04:35:08.698Z\"),\n        modifiedAt: new Date(\"2024-01-10T06:45:35.933Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-04-21T20:23:52.355Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=404\",\n      },\n      product: {\n        id: \"<value>\",\n        createdAt: new Date(\"2023-05-10T07:26:17.258Z\"),\n        modifiedAt: new Date(\"2025-07-20T14:48:07.590Z\"),\n        trialInterval: \"year\",\n        trialIntervalCount: 640251,\n        name: \"<value>\",\n        description: \"swelter when besides utter phew knottily utilization now\",\n        recurringInterval: \"year\",\n        recurringIntervalCount: null,\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 2229.58,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-10-24T03:47:20.035Z\"),\n            modifiedAt: new Date(\"2023-07-28T10:52:24.280Z\"),\n            id: \"<value>\",\n            amountType: \"custom\",\n            isArchived: true,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"week\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 588876,\n            maximumAmount: 280866,\n            presetAmount: 942797,\n            legacy: true,\n          },\n        ],\n        benefits: [],\n        medias: [],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        amount: 1000,\n        currency: \"usd\",\n        createdAt: new Date(\"2025-11-18T23:26:50.006Z\"),\n        modifiedAt: new Date(\"2024-05-31T09:53:13.946Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-12-28T16:59:30.195Z\"),\n        endsAt: new Date(\"2023-06-09T06:11:59.062Z\"),\n        maxRedemptions: 580493,\n        redemptionsCount: 595442,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [\n        {\n          createdAt: new Date(\"2024-05-25T04:21:31.587Z\"),\n          modifiedAt: new Date(\"2024-02-19T12:40:10.475Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n\n            },\n            createdAt: new Date(\"2023-04-12T20:54:06.410Z\"),\n            modifiedAt: new Date(\"2025-03-19T14:28:57.223Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  conjunction: \"and\",\n                  clauses: [],\n                },\n              ],\n            },\n            aggregation: {\n              func: \"min\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  console.log(result);\n}\n\nrun();"
