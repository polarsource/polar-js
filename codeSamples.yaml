overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    description: \"mature emergent at outside arrogantly gadzooks zealous equatorial notwithstanding\",\n    properties: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    allowDiscountCodes: true,\n    requireBillingAddress: false,\n    productPriceId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.create({\n    customerBillingAddress: {\n      country: \"US\",\n    },\n    products: [\n      \"<value 1>\",\n      \"<value 2>\",\n      \"<value 3>\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {\n      customerBillingAddress: null,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.update({\n    id: \"<value>\",\n    checkoutUpdate: {\n      customerBillingAddress: {\n        country: \"US\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    slug: \"<value>\",\n    name: \"<value>\",\n    properties: {\n      options: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    billingAddress: {\n      country: \"US\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.getPaymentMethods({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.addPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    confirmationTokenId: \"<id>\",\n    setDefault: false,\n    returnUrl: \"https://yearly-custom.net/\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.customers.deletePaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.get({\n    token: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerSubscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSessions.create({\n    customerExternalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    externalId: \"usr_1337\",\n    email: \"customer@example.com\",\n    name: \"John Doe\",\n    billingAddress: {\n      country: \"US\",\n    },\n    taxId: [\n      \"911144442\",\n      \"us_ein\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.deleteExternal({\n    externalId: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.updateExternal({\n    externalId: \"<id>\",\n    customerUpdateExternalID: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: null,\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getStateExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      externalId: \"usr_1337\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getState({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"once\",\n    type: \"fixed\",\n    basisPoints: 449604,\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.ingest({\n    events: [],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.listNames({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 612128,\n    upload: {\n      parts: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/boot\",\n      parts: [\n        {\n          number: 979613,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 979613,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 979613,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.create({\n    name: \"<value>\",\n    filter: {\n      conjunction: \"or\",\n      clauses: [\n        {\n          property: \"<value>\",\n          operator: \"ne\",\n          value: \"<value>\",\n        },\n      ],\n    },\n    aggregation: {\n      func: \"sum\",\n      property: \"<value>\",\n    },\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.update({\n    id: \"<value>\",\n    meterUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.quantities({\n    id: \"<value>\",\n    startTimestamp: new Date(\"2025-11-25T04:37:16.823Z\"),\n    endTimestamp: new Date(\"2025-11-26T17:06:00.727Z\"),\n    interval: \"day\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types/rfcdate.js\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2025-03-14\"),\n    endDate: new RFCDate(\"2025-03-18\"),\n    interval: \"hour\",\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.create({\n    redirectUris: [\n      \"https://impolite-hippodrome.com/\",\n      \"https://acidic-tomography.net/\",\n    ],\n    clientName: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.delete({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.get({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.update({\n    clientId: \"<id>\",\n    oAuth2ClientConfigurationUpdate: {\n      redirectUris: [\n        \"https://classic-cantaloupe.org\",\n        \"https://corrupt-status.biz/\",\n      ],\n      clientName: \"<value>\",\n      clientId: \"<id>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://memorable-season.name\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    organizationUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/payments/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.payments.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    recurringInterval: \"year\",\n    prices: [],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value 1>\",\n        \"<value 2>\",\n        \"<value 3>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.create({\n    orderId: \"<value>\",\n    reason: \"customer_request\",\n    amount: 90,\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.revoke({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.update({\n    id: \"<value>\",\n    subscriptionUpdate: {\n      productId: \"<value>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-05-25T19:36:21.799Z\"),\n      modifiedAt: new Date(\"2023-12-03T18:35:26.911Z\"),\n      description: \"futon redraw forenenst pecan evince if\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 9.17,\n        \"key2\": 469914,\n      },\n      properties: {\n        units: 479716,\n        rollover: false,\n        meterId: \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-05-30T17:26:31.997Z\"),\n      modifiedAt: new Date(\"2024-07-30T05:38:56.086Z\"),\n      description: \"metal preregister psst woot somber\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 938.65,\n      },\n      properties: {\n        archived: {\n          \"key\": true,\n          \"key1\": true,\n          \"key2\": true,\n        },\n        files: [],\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-07-29T09:12:26.895Z\"),\n      modifiedAt: new Date(\"2025-07-26T11:51:14.320Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-05-22T17:07:22.158Z\"),\n        modifiedAt: new Date(\"2025-05-12T01:27:02.379Z\"),\n        metadata: {\n          \"key\": 74631,\n          \"key1\": 8472.54,\n          \"key2\": \"<value>\",\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-02-04T07:22:26.555Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2023-06-12T14:51:22.188Z\"),\n        modifiedAt: new Date(\"2023-06-04T11:09:21.440Z\"),\n        description: \"vibraphone however abseil yet conservative\",\n        selectable: false,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 164738,\n          \"key2\": 826637,\n        },\n        properties: {\n          repositoryOwner: \"polarsource\",\n          repositoryName: \"private_repo\",\n          permission: \"maintain\",\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCycledPost({\n    data: {\n      createdAt: new Date(\"2023-11-21T13:26:50.948Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-02-09T07:31:14.605Z\"),\n        modifiedAt: new Date(\"2024-01-29T22:31:09.229Z\"),\n        metadata: {\n          \"key\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: null,\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-08-25T13:47:56.433Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-07-14T03:36:29.696Z\"),\n        modifiedAt: new Date(\"2023-08-20T01:19:24.073Z\"),\n        description: \"witty noisily negative colligate hence geez phew pacemaker marten\",\n        selectable: true,\n        deletable: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        properties: {\n          archived: {\n            \"key\": true,\n          },\n          files: [],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-10-11T18:40:00.865Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-02-19T18:50:01.394Z\"),\n        modifiedAt: new Date(\"2024-11-20T19:24:54.327Z\"),\n        metadata: {\n          \"key\": 571706,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: null,\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-03-12T16:39:36.178Z\"),\n        modifiedAt: new Date(\"2024-07-08T07:08:59.377Z\"),\n        description: \"grandiose royal surface before ouch silently authentic more override reassuringly\",\n        selectable: false,\n        deletable: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 6254.36,\n          \"key2\": \"<value>\",\n        },\n        properties: {\n          units: 708154,\n          rollover: true,\n          meterId: \"<value>\",\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-06-15T00:42:20.858Z\"),\n      modifiedAt: new Date(\"2023-09-09T02:35:13.085Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-07-19T15:08:59.439Z\"),\n        modifiedAt: new Date(\"2024-06-22T06:57:35.281Z\"),\n        metadata: {\n          \"key\": false,\n          \"key1\": 322224,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-09-29T05:46:04.457Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2023-12-23T22:21:47.780Z\"),\n        modifiedAt: new Date(\"2024-02-26T16:39:20.374Z\"),\n        description: \"cutlet flickering ecstatic materialise verbally appliance\",\n        selectable: true,\n        deletable: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 2069.39,\n          \"key1\": \"<value>\",\n        },\n        properties: {\n          archived: {\n\n          },\n          files: [\n            \"<value 1>\",\n          ],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-02-15T15:44:21.478Z\"),\n      modifiedAt: new Date(\"2023-09-13T08:36:46.434Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"expired\",\n      clientSecret: \"<value>\",\n      url: \"https://whole-aftermath.net/\",\n      expiresAt: new Date(\"2023-12-28T10:30:56.042Z\"),\n      successUrl: \"https://moral-premier.name/\",\n      embedOrigin: \"<value>\",\n      amount: 929514,\n      discountAmount: 323773,\n      netAmount: 115799,\n      taxAmount: 97012,\n      totalAmount: 859980,\n      currency: \"Fiji Dollar\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: null,\n      allowDiscountCodes: true,\n      requireBillingAddress: true,\n      isDiscountApplicable: true,\n      isFreeProductPrice: true,\n      isPaymentRequired: true,\n      isPaymentSetupRequired: true,\n      isPaymentFormRequired: true,\n      customerId: \"<value>\",\n      isBusinessCustomer: false,\n      customerName: \"<value>\",\n      customerEmail: null,\n      customerIpAddress: null,\n      customerBillingName: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n        \"key2\": \"<value>\",\n      },\n      metadata: {\n        \"key\": false,\n        \"key1\": false,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2025-07-23T17:21:51.405Z\"),\n          modifiedAt: new Date(\"2024-01-17T03:32:08.030Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"funny abscond fairly except slight\",\n          recurringInterval: null,\n          isRecurring: true,\n          isArchived: true,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2023-09-13T08:36:46.434Z\"),\n              modifiedAt: new Date(\"2023-09-14T02:01:27.394Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n            },\n          ],\n          benefits: [],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/var/log\",\n              mimeType: \"<value>\",\n              size: 982910,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-09-13T03:57:17.676Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2023-03-23T06:47:50.944Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://yummy-ocelot.biz/\",\n            },\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/var/log\",\n              mimeType: \"<value>\",\n              size: 982910,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-09-13T03:57:17.676Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2023-03-23T06:47:50.944Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://yummy-ocelot.biz/\",\n            },\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/var/log\",\n              mimeType: \"<value>\",\n              size: 982910,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-09-13T03:57:17.676Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2023-03-23T06:47:50.944Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://yummy-ocelot.biz/\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2023-03-01T03:35:30.257Z\"),\n        modifiedAt: new Date(\"2024-12-19T15:40:11.887Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"until joyful how\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2025-03-15T14:26:53.109Z\"),\n            modifiedAt: new Date(\"2023-12-28T10:30:56.042Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"year\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 700309,\n            maximumAmount: 631188,\n            presetAmount: 968968,\n          },\n          {\n            createdAt: new Date(\"2023-05-07T21:58:39.365Z\"),\n            modifiedAt: new Date(\"2024-04-23T21:54:44.503Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"year\",\n            priceCurrency: \"<value>\",\n            priceAmount: 275553,\n          },\n          {\n            createdAt: new Date(\"2023-08-08T15:45:51.732Z\"),\n            modifiedAt: new Date(\"2024-01-18T11:16:03.208Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 49018,\n            maximumAmount: 322400,\n            presetAmount: 119260,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-11-22T11:07:53.319Z\"),\n            modifiedAt: new Date(\"2025-09-17T18:38:51.288Z\"),\n            type: \"discord\",\n            description: \"brr now psst\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-11-22T11:07:53.319Z\"),\n            modifiedAt: new Date(\"2025-09-17T18:38:51.288Z\"),\n            type: \"discord\",\n            description: \"brr now psst\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [],\n      },\n      productPrice: {\n        createdAt: new Date(\"2024-04-06T18:48:21.449Z\"),\n        modifiedAt: new Date(\"2023-02-22T08:13:16.795Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 470604,\n        type: \"fixed\",\n        basisPoints: 567071,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-01-27T12:44:05.844Z\"),\n            modifiedAt: new Date(\"2023-11-12T13:10:44.040Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 833527,\n              \"key1\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 786803,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-01-27T12:44:05.844Z\"),\n            modifiedAt: new Date(\"2023-11-12T13:10:44.040Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 833527,\n              \"key1\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 786803,\n          required: false,\n        },\n      ],\n      customerMetadata: {\n\n      },\n      customerBillingAddressFields: {\n        country: true,\n        state: false,\n        city: false,\n        postalCode: true,\n        line1: true,\n        line2: false,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-03-19T05:40:46.816Z\"),\n      modifiedAt: new Date(\"2025-01-17T21:45:54.449Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"succeeded\",\n      clientSecret: \"<value>\",\n      url: \"https://wasteful-kinase.net/\",\n      expiresAt: new Date(\"2024-07-13T07:40:45.762Z\"),\n      successUrl: \"https://unwieldy-lift.name\",\n      embedOrigin: \"<value>\",\n      amount: 328864,\n      discountAmount: 67168,\n      netAmount: 710560,\n      taxAmount: 164230,\n      totalAmount: 754328,\n      currency: \"New Taiwan Dollar\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      requireBillingAddress: true,\n      isDiscountApplicable: true,\n      isFreeProductPrice: true,\n      isPaymentRequired: true,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: true,\n      customerId: null,\n      isBusinessCustomer: false,\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingName: \"<value>\",\n      customerBillingAddress: {\n        country: \"US\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n\n      },\n      metadata: {\n        \"key\": 8729.81,\n        \"key1\": \"<value>\",\n        \"key2\": 302746,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2024-02-06T13:10:07.718Z\"),\n          modifiedAt: new Date(\"2025-05-28T09:18:17.409Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"gee unlike aboard entice which break\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2025-01-17T21:45:54.449Z\"),\n              modifiedAt: new Date(\"2024-11-07T08:23:01.152Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              priceAmount: 940459,\n            },\n            {\n              createdAt: new Date(\"2024-07-13T07:40:45.762Z\"),\n              modifiedAt: new Date(\"2025-03-26T06:13:51.386Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"year\",\n            },\n          ],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-07-05T15:21:14.498Z\"),\n              modifiedAt: new Date(\"2023-11-21T02:59:50.838Z\"),\n              type: \"downloadables\",\n              description: \"highlight sandy overspend scratchy yet by\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [],\n        },\n        {\n          createdAt: new Date(\"2024-02-06T13:10:07.718Z\"),\n          modifiedAt: new Date(\"2025-05-28T09:18:17.409Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"gee unlike aboard entice which break\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2024-05-01T03:58:27.962Z\"),\n              modifiedAt: new Date(\"2023-12-27T10:27:01.430Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"one_time\",\n              recurringInterval: \"year\",\n            },\n            {\n              createdAt: new Date(\"2025-04-06T17:49:44.545Z\"),\n              modifiedAt: new Date(\"2025-08-08T18:57:45.007Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"one_time\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 140837,\n              maximumAmount: 373760,\n              presetAmount: 41301,\n            },\n          ],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-07-05T15:21:14.498Z\"),\n              modifiedAt: new Date(\"2023-11-21T02:59:50.838Z\"),\n              type: \"downloadables\",\n              description: \"highlight sandy overspend scratchy yet by\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [],\n        },\n        {\n          createdAt: new Date(\"2024-02-06T13:10:07.718Z\"),\n          modifiedAt: new Date(\"2025-05-28T09:18:17.409Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"gee unlike aboard entice which break\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2024-04-12T18:30:19.906Z\"),\n              modifiedAt: new Date(\"2023-03-19T14:32:39.947Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"year\",\n            },\n            {\n              createdAt: new Date(\"2025-01-10T10:00:41.343Z\"),\n              modifiedAt: new Date(\"2025-04-08T09:51:58.249Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"one_time\",\n              recurringInterval: \"year\",\n            },\n          ],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2025-07-05T15:21:14.498Z\"),\n              modifiedAt: new Date(\"2023-11-21T02:59:50.838Z\"),\n              type: \"downloadables\",\n              description: \"highlight sandy overspend scratchy yet by\",\n              selectable: true,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2024-04-04T09:43:29.328Z\"),\n        modifiedAt: new Date(\"2024-01-03T07:24:30.583Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"patroller fax sadly sick bitterly indeed grandson bravely loyally wholly\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2025-01-29T09:14:14.399Z\"),\n            modifiedAt: new Date(\"2025-08-14T18:53:15.322Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n          {\n            createdAt: new Date(\"2025-06-29T05:21:38.584Z\"),\n            modifiedAt: new Date(\"2025-10-14T04:57:44.285Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 795829,\n            maximumAmount: 801449,\n            presetAmount: 215929,\n          },\n          {\n            createdAt: new Date(\"2025-10-23T11:11:52.082Z\"),\n            modifiedAt: new Date(\"2025-06-04T15:43:18.802Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"year\",\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-07-05T15:21:14.498Z\"),\n            modifiedAt: new Date(\"2023-11-21T02:59:50.838Z\"),\n            type: \"downloadables\",\n            description: \"highlight sandy overspend scratchy yet by\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/opt\",\n            mimeType: \"<value>\",\n            size: 349206,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-11-20T22:00:21.061Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-01T19:20:04.513Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://noted-availability.info\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/opt\",\n            mimeType: \"<value>\",\n            size: 349206,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-11-20T22:00:21.061Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-01T19:20:04.513Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://noted-availability.info\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/opt\",\n            mimeType: \"<value>\",\n            size: 349206,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-11-20T22:00:21.061Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-01T19:20:04.513Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://noted-availability.info\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2024-11-13T15:44:29.425Z\"),\n        modifiedAt: new Date(\"2024-08-21T16:24:51.218Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 971558,\n        maximumAmount: 879171,\n        presetAmount: 591735,\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 187379,\n        type: \"fixed\",\n        basisPoints: 373595,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-09-18T09:12:02.157Z\"),\n            modifiedAt: new Date(\"2023-07-11T01:18:07.226Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 704552,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-09-18T09:12:02.157Z\"),\n            modifiedAt: new Date(\"2023-07-11T01:18:07.226Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 704552,\n          required: true,\n        },\n      ],\n      customerMetadata: {\n        \"key\": 384374,\n        \"key1\": 126671,\n        \"key2\": 568803,\n      },\n      customerBillingAddressFields: {\n        country: true,\n        state: false,\n        city: false,\n        postalCode: false,\n        line1: false,\n        line2: false,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerCreatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2025-10-24T17:37:29.711Z\"),\n      modifiedAt: new Date(\"2025-07-16T19:46:09.413Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 9709.6,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: null,\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2023-10-26T06:10:46.111Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerDeletedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-12T21:40:34.752Z\"),\n      modifiedAt: new Date(\"2025-02-26T09:36:28.870Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2023-07-08T00:32:27.730Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerStateChangedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2025-05-22T16:03:32.369Z\"),\n      modifiedAt: new Date(\"2023-04-17T22:11:17.879Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-09-08T18:19:10.187Z\"),\n      activeSubscriptions: [\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-06-22T09:12:55.079Z\"),\n          modifiedAt: new Date(\"2025-03-01T22:24:58.561Z\"),\n          metadata: {\n            \"key\": true,\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"year\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          meters: [],\n        },\n      ],\n      grantedBenefits: [],\n      activeMeters: [\n        {\n          createdAt: new Date(\"2023-10-04T09:01:19.436Z\"),\n          modifiedAt: new Date(\"2025-07-31T21:26:56.213Z\"),\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          balance: 75,\n        },\n        {\n          createdAt: new Date(\"2023-10-04T09:01:19.436Z\"),\n          modifiedAt: new Date(\"2025-07-31T21:26:56.213Z\"),\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          balance: 75,\n        },\n      ],\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerUpdatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-09T20:22:33.716Z\"),\n      modifiedAt: new Date(\"2024-10-16T21:39:43.150Z\"),\n      metadata: {\n\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"911144442\",\n        \"us_ein\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-12-14T00:37:03.564Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-08-21T06:55:49.348Z\"),\n      modifiedAt: null,\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 952546,\n      discountAmount: 47294,\n      netAmount: 220865,\n      amount: 835005,\n      taxAmount: 913636,\n      totalAmount: 727987,\n      refundedAmount: 597376,\n      refundedTaxAmount: 864844,\n      currency: \"Kip\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": true,\n        \"key1\": 2184.01,\n        \"key2\": \"<value>\",\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-11-07T09:52:21.455Z\"),\n        modifiedAt: new Date(\"2025-06-03T19:46:15.179Z\"),\n        metadata: {\n          \"key\": 526331,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-10-25T07:11:48.501Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2025-02-09T20:19:15.400Z\"),\n        modifiedAt: new Date(\"2023-03-30T07:05:37.419Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"against outbid to petty yeast off meanwhile colonialism\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 425196,\n        type: \"fixed\",\n        amount: 778891,\n        currency: \"Armenian Dram\",\n        createdAt: new Date(\"2023-03-20T16:46:25.677Z\"),\n        modifiedAt: new Date(\"2023-03-06T18:58:41.541Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 298954,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-04-08T15:39:19.572Z\"),\n        endsAt: new Date(\"2024-01-04T15:31:18.185Z\"),\n        maxRedemptions: 313467,\n        redemptionsCount: 237254,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: null,\n      items: [\n        {\n          createdAt: new Date(\"2023-10-09T05:35:46.860Z\"),\n          modifiedAt: new Date(\"2025-11-19T12:55:15.055Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 921740,\n          taxAmount: 964357,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2023-10-09T05:35:46.860Z\"),\n          modifiedAt: new Date(\"2025-11-19T12:55:15.055Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 921740,\n          taxAmount: 964357,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderPaidPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-12-05T07:44:21.172Z\"),\n      modifiedAt: new Date(\"2024-12-11T22:14:44.762Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 806442,\n      discountAmount: 990825,\n      netAmount: 746396,\n      amount: 341385,\n      taxAmount: 486648,\n      totalAmount: 562504,\n      refundedAmount: 314047,\n      refundedTaxAmount: 570780,\n      currency: \"Norwegian Krone\",\n      billingReason: \"subscription_create\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-08-30T09:47:22.437Z\"),\n        modifiedAt: new Date(\"2025-04-20T14:41:24.727Z\"),\n        metadata: {\n          \"key\": 154136,\n          \"key1\": false,\n          \"key2\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-06-08T00:11:47.056Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": false,\n          \"key2\": 1122.47,\n        },\n        createdAt: new Date(\"2024-03-19T01:07:15.346Z\"),\n        modifiedAt: new Date(\"2025-03-22T13:41:39.854Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"instead unnaturally curly scared but definite knowledgeably\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 458129,\n        type: \"fixed\",\n        basisPoints: 400985,\n        createdAt: new Date(\"2025-12-02T15:10:04.656Z\"),\n        modifiedAt: new Date(\"2024-10-30T18:07:50.242Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 4652.15,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-11-24T17:59:56.836Z\"),\n        endsAt: new Date(\"2025-08-12T18:11:29.547Z\"),\n        maxRedemptions: 727805,\n        redemptionsCount: 584469,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2025-07-17T03:39:23.964Z\"),\n        modifiedAt: new Date(\"2025-10-30T20:20:46.051Z\"),\n        id: \"<value>\",\n        amount: 540428,\n        currency: \"Moroccan Dirham\",\n        recurringInterval: \"year\",\n        status: \"canceled\",\n        currentPeriodStart: new Date(\"2023-02-24T15:15:22.018Z\"),\n        currentPeriodEnd: new Date(\"2023-12-07T15:09:08.144Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2023-07-01T03:36:16.430Z\"),\n        startedAt: new Date(\"2024-09-21T14:56:16.106Z\"),\n        endsAt: new Date(\"2023-01-21T03:35:38.158Z\"),\n        endedAt: new Date(\"2023-12-02T06:46:04.196Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"other\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderRefundedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2024-07-23T18:00:11.615Z\"),\n      modifiedAt: new Date(\"2024-08-23T03:13:11.383Z\"),\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 678552,\n      discountAmount: 294178,\n      netAmount: 721778,\n      amount: 913001,\n      taxAmount: 518308,\n      totalAmount: 820663,\n      refundedAmount: 472431,\n      refundedTaxAmount: 879331,\n      currency: \"Hong Kong Dollar\",\n      billingReason: \"subscription_create\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": 4542.91,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-08-11T17:50:11.031Z\"),\n        modifiedAt: new Date(\"2023-02-24T05:25:29.794Z\"),\n        metadata: {\n          \"key\": 97027,\n          \"key1\": 958634,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: null,\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-01-16T07:26:04.196Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n          \"key\": 4016.73,\n          \"key1\": 9058.31,\n          \"key2\": true,\n        },\n        createdAt: new Date(\"2024-10-26T18:25:25.517Z\"),\n        modifiedAt: new Date(\"2023-07-26T10:28:20.791Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: null,\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 333301,\n        type: \"percentage\",\n        amount: 985928,\n        currency: \"Tunisian Dinar\",\n        createdAt: new Date(\"2025-03-31T17:18:12.309Z\"),\n        modifiedAt: new Date(\"2025-04-04T07:20:27.321Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: null,\n        endsAt: new Date(\"2025-11-07T12:21:07.975Z\"),\n        maxRedemptions: 986922,\n        redemptionsCount: 691292,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2023-03-16T14:38:58.849Z\"),\n        modifiedAt: new Date(\"2024-08-12T02:18:50.288Z\"),\n        id: \"<value>\",\n        amount: 443730,\n        currency: \"Pa'anga\",\n        recurringInterval: \"month\",\n        status: \"past_due\",\n        currentPeriodStart: new Date(\"2025-08-22T13:19:25.286Z\"),\n        currentPeriodEnd: new Date(\"2025-05-03T08:49:50.424Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2023-11-21T12:57:47.903Z\"),\n        startedAt: new Date(\"2023-09-21T04:07:05.991Z\"),\n        endsAt: new Date(\"2023-10-30T23:29:28.584Z\"),\n        endedAt: new Date(\"2025-05-20T18:28:46.249Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"low_quality\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-01-22T05:05:29.797Z\"),\n          modifiedAt: new Date(\"2025-11-07T21:20:59.535Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 287841,\n          taxAmount: 922801,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderUpdatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-10-25T00:08:50.290Z\"),\n      modifiedAt: new Date(\"2024-01-08T20:00:47.692Z\"),\n      status: \"partially_refunded\",\n      paid: true,\n      subtotalAmount: 198772,\n      discountAmount: 338283,\n      netAmount: 321919,\n      amount: 827864,\n      taxAmount: 380359,\n      totalAmount: 596980,\n      refundedAmount: 404069,\n      refundedTaxAmount: 718668,\n      currency: \"Nuevo Sol\",\n      billingReason: \"subscription_create\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": false,\n        \"key1\": 187509,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-12-03T05:16:11.415Z\"),\n        modifiedAt: new Date(\"2023-03-11T05:58:05.184Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: null,\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-06-26T15:51:37.068Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      product: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2024-07-10T12:45:44.731Z\"),\n        modifiedAt: new Date(\"2024-09-19T13:13:25.785Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"bossy direct reservation quaintly atop interestingly\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 227959,\n        type: \"fixed\",\n        amount: 785594,\n        currency: \"Barbados Dollar\",\n        createdAt: new Date(\"2025-08-02T14:17:04.679Z\"),\n        modifiedAt: new Date(\"2023-04-10T21:27:35.876Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 330083,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-09-01T14:56:03.459Z\"),\n        endsAt: new Date(\"2024-10-01T02:03:16.161Z\"),\n        maxRedemptions: 723901,\n        redemptionsCount: 125128,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2024-10-31T22:22:01.280Z\"),\n        modifiedAt: new Date(\"2025-05-03T18:27:32.620Z\"),\n        id: \"<value>\",\n        amount: 405025,\n        currency: \"Pa'anga\",\n        recurringInterval: \"month\",\n        status: \"unpaid\",\n        currentPeriodStart: new Date(\"2023-08-26T12:56:24.423Z\"),\n        currentPeriodEnd: new Date(\"2024-02-06T09:06:51.703Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2024-03-28T15:10:13.508Z\"),\n        startedAt: new Date(\"2023-11-03T05:13:30.202Z\"),\n        endsAt: new Date(\"2024-03-03T03:52:46.888Z\"),\n        endedAt: new Date(\"2025-07-30T00:35:38.035Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: null,\n        customerCancellationReason: \"switched_service\",\n        customerCancellationComment: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2025-01-03T16:01:28.999Z\"),\n          modifiedAt: null,\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 516134,\n          taxAmount: 41202,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2025-01-03T16:01:28.999Z\"),\n          modifiedAt: null,\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 516134,\n          taxAmount: 41202,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2025-01-03T16:01:28.999Z\"),\n          modifiedAt: null,\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 516134,\n          taxAmount: 41202,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-08-19T15:02:44.139Z\"),\n      modifiedAt: new Date(\"2025-08-23T00:45:50.780Z\"),\n      id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: null,\n      email: \"Lemuel44@gmail.com\",\n      website: \"<value>\",\n      socials: [\n        {\n          platform: \"tiktok\",\n          url: \"https://grizzled-patroller.info/\",\n        },\n        {\n          platform: \"tiktok\",\n          url: \"https://grizzled-patroller.info/\",\n        },\n      ],\n      detailsSubmittedAt: null,\n      featureSettings: {},\n      subscriptionSettings: {\n        allowMultipleSubscriptions: true,\n        allowCustomerUpdates: false,\n        prorationBehavior: \"invoice\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-10-13T02:47:55.082Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"till that ew put\",\n      recurringInterval: \"month\",\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 785881,\n        \"key1\": false,\n        \"key2\": false,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-07-28T01:37:16.074Z\"),\n          modifiedAt: new Date(\"2023-07-04T11:33:29.001Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 11607,\n          maximumAmount: 141385,\n          presetAmount: 130829,\n        },\n        {\n          createdAt: new Date(\"2025-01-10T16:35:07.867Z\"),\n          modifiedAt: new Date(\"2025-07-03T18:52:57.743Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 229195,\n        },\n        {\n          createdAt: new Date(\"2023-11-13T15:31:37.843Z\"),\n          modifiedAt: new Date(\"2024-12-09T02:07:21.938Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 244234,\n        },\n      ],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-07-31T20:09:09.874Z\"),\n          modifiedAt: new Date(\"2023-08-27T06:26:02.524Z\"),\n          description: \"aha than before frugal ornery thoroughly once provided cork\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": \"<value>\",\n            \"key1\": 919470,\n            \"key2\": 8910.27,\n          },\n          properties: {\n            guildId: \"<id>\",\n            roleId: \"<id>\",\n            guildToken: \"<value>\",\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/Users\",\n          mimeType: \"<value>\",\n          size: 616062,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2025-10-29T10:58:55.115Z\"),\n          version: \"<value>\",\n          isUploaded: true,\n          createdAt: new Date(\"2024-02-03T23:25:29.448Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://livid-stool.biz/\",\n        },\n      ],\n      attachedCustomFields: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-08-25T02:00:54.049Z\"),\n      modifiedAt: new Date(\"2023-07-21T03:22:42.071Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"fooey optimistic beyond dress helpfully whispered structure heartfelt consequently\",\n      recurringInterval: \"year\",\n      isRecurring: false,\n      isArchived: false,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 495401,\n        \"key1\": true,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-07-21T03:22:42.071Z\"),\n          modifiedAt: new Date(\"2025-07-31T19:14:23.351Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"year\",\n        },\n        {\n          createdAt: new Date(\"2025-03-05T18:32:31.794Z\"),\n          modifiedAt: new Date(\"2024-03-24T14:09:55.947Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n        {\n          createdAt: new Date(\"2024-10-05T01:46:47.680Z\"),\n          modifiedAt: new Date(\"2024-02-26T02:21:28.922Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n        },\n      ],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2024-12-26T20:43:42.655Z\"),\n          modifiedAt: new Date(\"2023-11-13T02:29:49.304Z\"),\n          description: \"towards avaricious oof after nutritious\",\n          selectable: true,\n          deletable: true,\n          organizationId: \"<value>\",\n          metadata: {\n\n          },\n          properties: {\n            archived: {\n              \"key\": false,\n            },\n            files: [\n              \"<value 1>\",\n              \"<value 2>\",\n              \"<value 3>\",\n            ],\n          },\n        },\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-09-18T01:08:29.935Z\"),\n          modifiedAt: new Date(\"2025-06-15T04:30:20.706Z\"),\n          description: \"where patroller after aw arid\",\n          selectable: false,\n          deletable: true,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": true,\n            \"key1\": \"<value>\",\n          },\n          properties: {\n            units: 292879,\n            rollover: true,\n            meterId: \"<value>\",\n          },\n        },\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2023-08-06T07:32:57.958Z\"),\n          modifiedAt: new Date(\"2023-04-29T20:41:41.892Z\"),\n          description: \"once however abnormally pace wretched presell\",\n          selectable: false,\n          deletable: true,\n          organizationId: \"<value>\",\n          metadata: {\n            \"key\": false,\n          },\n          properties: {\n            repositoryOwner: \"polarsource\",\n            repositoryName: \"private_repo\",\n            permission: \"pull\",\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/opt\",\n          mimeType: \"<value>\",\n          size: 435627,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2025-04-14T07:39:07.142Z\"),\n          version: \"<value>\",\n          isUploaded: true,\n          createdAt: new Date(\"2024-04-21T20:24:54.389Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://uneven-juggernaut.net\",\n        },\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-10-22T03:22:15.717Z\"),\n            modifiedAt: new Date(\"2024-11-21T19:59:56.303Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": true,\n              \"key1\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 876633,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-10-22T03:22:15.717Z\"),\n            modifiedAt: new Date(\"2024-11-21T19:59:56.303Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": true,\n              \"key1\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 876633,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-02-15T13:46:01.700Z\"),\n      modifiedAt: new Date(\"2024-07-08T10:47:55.917Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": 1671.19,\n        \"key1\": \"<value>\",\n        \"key2\": true,\n      },\n      status: \"succeeded\",\n      reason: \"satisfaction_guarantee\",\n      amount: 800478,\n      taxAmount: 856871,\n      currency: \"Lebanese Pound\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-01-08T20:35:39.672Z\"),\n      modifiedAt: new Date(\"2025-09-12T22:02:00.691Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": false,\n      },\n      status: \"canceled\",\n      reason: \"satisfaction_guarantee\",\n      amount: 168595,\n      taxAmount: 859949,\n      currency: \"Venezuelan bolívar\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: true,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    data: {\n      createdAt: new Date(\"2023-08-13T01:28:21.362Z\"),\n      modifiedAt: new Date(\"2024-06-25T00:41:05.678Z\"),\n      id: \"<value>\",\n      amount: 320436,\n      currency: \"Peso Uruguayo\",\n      recurringInterval: \"month\",\n      status: \"past_due\",\n      currentPeriodStart: new Date(\"2023-06-09T14:14:48.363Z\"),\n      currentPeriodEnd: null,\n      cancelAtPeriodEnd: true,\n      canceledAt: null,\n      startedAt: new Date(\"2023-07-21T07:29:31.409Z\"),\n      endsAt: new Date(\"2025-08-05T11:38:46.213Z\"),\n      endedAt: new Date(\"2024-09-05T04:27:23.768Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_complex\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": false,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-08-17T18:35:42.212Z\"),\n        modifiedAt: new Date(\"2025-01-01T23:32:39.659Z\"),\n        metadata: {\n          \"key\": 7303.56,\n          \"key1\": 796236,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: null,\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-11-05T10:18:40.300Z\"),\n        modifiedAt: new Date(\"2024-04-23T18:24:43.408Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"athwart fail wound oh nor boohoo reasoning against since\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 722592,\n        },\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-05-21T10:49:13.924Z\"),\n            modifiedAt: null,\n            description: \"chime softly outgoing gray\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n\n            },\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 18256,\n                timeframe: \"day\",\n              },\n              activations: {\n                limit: 776442,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 89994,\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-02-11T00:08:34.711Z\"),\n            modifiedAt: new Date(\"2024-10-21T08:00:16.195Z\"),\n            description: \"as draft noon kettledrum alligator\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 331688,\n              \"key1\": 10869,\n              \"key2\": true,\n            },\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"maintain\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-02-11T00:08:34.711Z\"),\n            modifiedAt: new Date(\"2024-10-21T08:00:16.195Z\"),\n            description: \"as draft noon kettledrum alligator\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 331688,\n              \"key1\": 10869,\n              \"key2\": true,\n            },\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"maintain\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/libexec\",\n            mimeType: \"<value>\",\n            size: 980211,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-09-01T03:11:19.881Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-05-05T22:00:20.852Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://shabby-integer.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/libexec\",\n            mimeType: \"<value>\",\n            size: 980211,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-09-01T03:11:19.881Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-05-05T22:00:20.852Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://shabby-integer.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/libexec\",\n            mimeType: \"<value>\",\n            size: 980211,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-09-01T03:11:19.881Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-05-05T22:00:20.852Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://shabby-integer.org\",\n          },\n        ],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 482318,\n        type: \"percentage\",\n        amount: 489921,\n        currency: \"Chilean Peso\",\n        createdAt: new Date(\"2023-10-09T08:41:16.911Z\"),\n        modifiedAt: new Date(\"2025-08-16T07:28:28.929Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-04-06T16:40:05.860Z\"),\n        endsAt: new Date(\"2023-01-06T22:21:47.288Z\"),\n        maxRedemptions: null,\n        redemptionsCount: 313365,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-06-25T00:41:05.678Z\"),\n          modifiedAt: new Date(\"2023-12-18T04:45:55.702Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 291908,\n          maximumAmount: 592565,\n          presetAmount: 145614,\n        },\n        {\n          createdAt: new Date(\"2023-02-11T00:38:47.217Z\"),\n          modifiedAt: new Date(\"2024-09-09T22:42:06.531Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 568101,\n          maximumAmount: 864494,\n          presetAmount: 525739,\n        },\n        {\n          createdAt: new Date(\"2024-06-17T20:38:09.011Z\"),\n          modifiedAt: new Date(\"2023-10-10T03:15:20.759Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 277670,\n        },\n      ],\n      meters: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    data: {\n      createdAt: new Date(\"2025-02-09T04:39:02.332Z\"),\n      modifiedAt: new Date(\"2023-04-18T10:38:03.481Z\"),\n      id: \"<value>\",\n      amount: 137392,\n      currency: \"New Taiwan Dollar\",\n      recurringInterval: \"month\",\n      status: \"active\",\n      currentPeriodStart: new Date(\"2023-06-17T04:15:56.819Z\"),\n      currentPeriodEnd: new Date(\"2023-06-02T15:48:16.857Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2024-01-07T18:54:45.602Z\"),\n      startedAt: new Date(\"2025-02-23T12:23:49.579Z\"),\n      endsAt: new Date(\"2023-11-16T08:24:59.166Z\"),\n      endedAt: new Date(\"2023-07-21T16:25:14.433Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: null,\n      checkoutId: null,\n      customerCancellationReason: null,\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-10-25T05:52:42.846Z\"),\n        modifiedAt: new Date(\"2023-09-20T10:20:50.540Z\"),\n        metadata: {\n          \"key\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-07-13T08:26:56.650Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-06-11T17:21:10.206Z\"),\n        modifiedAt: new Date(\"2025-03-18T13:26:34.470Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"unimpressively stiffen promptly\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-04-18T10:38:03.481Z\"),\n            modifiedAt: new Date(\"2023-05-31T13:57:32.256Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            unitAmount: \"<value>\",\n            capAmount: 538272,\n            meterId: \"<value>\",\n            meter: {\n              id: \"<value>\",\n              name: \"<value>\",\n            },\n          },\n          {\n            createdAt: new Date(\"2023-06-02T15:48:16.857Z\"),\n            modifiedAt: new Date(\"2025-03-21T15:50:39.816Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"year\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 339222,\n            maximumAmount: 765022,\n            presetAmount: 715800,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-09-21T18:00:22.332Z\"),\n            modifiedAt: new Date(\"2023-05-12T19:14:12.206Z\"),\n            description: \"ostrich smog zowie loyally naturally noisily castanet pace deliberately\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n\n            },\n            properties: {\n              archived: {\n                \"key\": true,\n                \"key1\": true,\n              },\n              files: [],\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-12-18T22:12:17.302Z\"),\n            modifiedAt: new Date(\"2024-10-10T09:48:09.804Z\"),\n            description: \"knavishly goat programme intrigue elegantly fooey decisive\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": false,\n              \"key1\": 922.01,\n              \"key2\": 5307.16,\n            },\n            properties: {\n              note: \"<value>\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-06-11T13:23:03.299Z\"),\n            modifiedAt: new Date(\"2024-10-18T20:00:03.185Z\"),\n            description: \"at like through stale yum corny\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            properties: {\n              units: 743161,\n              rollover: false,\n              meterId: \"<value>\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var/yp\",\n            mimeType: \"<value>\",\n            size: 91402,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: null,\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: null,\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-02-20T02:39:11.781Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://young-obesity.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var/yp\",\n            mimeType: \"<value>\",\n            size: 91402,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: null,\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: null,\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-02-20T02:39:11.781Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://young-obesity.org\",\n          },\n        ],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        basisPoints: 942713,\n        createdAt: new Date(\"2025-05-02T10:03:23.149Z\"),\n        modifiedAt: new Date(\"2024-03-07T17:30:21.663Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": false,\n          \"key2\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-11-05T08:42:03.906Z\"),\n        endsAt: null,\n        maxRedemptions: 510938,\n        redemptionsCount: 760335,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-08-20T02:19:30.433Z\"),\n          modifiedAt: new Date(\"2023-07-21T16:25:14.433Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 25751,\n          maximumAmount: 79919,\n          presetAmount: 968084,\n        },\n      ],\n      meters: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-05-03T11:46:21.459Z\"),\n      modifiedAt: new Date(\"2025-01-12T06:30:14.360Z\"),\n      id: \"<value>\",\n      amount: 469182,\n      currency: \"Boliviano boliviano\",\n      recurringInterval: \"year\",\n      status: \"incomplete\",\n      currentPeriodStart: new Date(\"2024-01-07T06:33:36.381Z\"),\n      currentPeriodEnd: new Date(\"2024-07-30T16:54:44.427Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-09-10T18:39:16.136Z\"),\n      startedAt: new Date(\"2025-08-30T21:29:16.432Z\"),\n      endsAt: new Date(\"2024-06-27T22:01:23.333Z\"),\n      endedAt: new Date(\"2024-07-24T19:43:04.879Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: null,\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"missing_features\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": false,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-05-18T22:55:50.482Z\"),\n        modifiedAt: new Date(\"2024-08-04T23:52:10.438Z\"),\n        metadata: {\n          \"key\": false,\n          \"key1\": false,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-05-15T22:05:41.858Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2024-05-25T09:51:02.679Z\"),\n        modifiedAt: new Date(\"2025-12-23T23:39:23.705Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"slink needily cemetery hydrocarbon a fledgling knit shirk appertain rural\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2025-01-12T06:30:14.360Z\"),\n            modifiedAt: new Date(\"2024-05-29T05:21:44.072Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 990795,\n            maximumAmount: 124912,\n            presetAmount: 338753,\n          },\n          {\n            createdAt: new Date(\"2023-10-20T18:48:25.568Z\"),\n            modifiedAt: new Date(\"2025-01-24T01:20:23.589Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 230391,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-08-16T04:04:01.242Z\"),\n            modifiedAt: new Date(\"2023-08-30T05:19:40.088Z\"),\n            description: \"courageously quick-witted out equally toward though quietly\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 3195.27,\n            },\n            properties: {\n              units: 371901,\n              rollover: false,\n              meterId: \"<value>\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/lost+found\",\n            mimeType: \"<value>\",\n            size: 719695,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-08-21T14:37:14.488Z\"),\n            version: null,\n            isUploaded: false,\n            createdAt: new Date(\"2025-10-28T06:08:47.416Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://repentant-unit.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/lost+found\",\n            mimeType: \"<value>\",\n            size: 719695,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-08-21T14:37:14.488Z\"),\n            version: null,\n            isUploaded: false,\n            createdAt: new Date(\"2025-10-28T06:08:47.416Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://repentant-unit.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/lost+found\",\n            mimeType: \"<value>\",\n            size: 719695,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-08-21T14:37:14.488Z\"),\n            version: null,\n            isUploaded: false,\n            createdAt: new Date(\"2025-10-28T06:08:47.416Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://repentant-unit.org/\",\n          },\n        ],\n        attachedCustomFields: [],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        basisPoints: 745503,\n        createdAt: new Date(\"2024-04-19T20:53:32.186Z\"),\n        modifiedAt: new Date(\"2024-11-15T00:04:04.545Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 3699.53,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-10-15T21:24:43.202Z\"),\n        endsAt: new Date(\"2025-09-26T06:55:01.272Z\"),\n        maxRedemptions: 104800,\n        redemptionsCount: 570322,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-06-27T22:01:23.333Z\"),\n          modifiedAt: new Date(\"2023-08-19T21:45:43.735Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2025-05-17T01:58:02.155Z\"),\n          modifiedAt: new Date(\"2024-09-29T09:35:40.427Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 201601,\n              \"key1\": true,\n              \"key2\": 2057.75,\n            },\n            createdAt: new Date(\"2025-03-06T04:32:46.256Z\"),\n            modifiedAt: new Date(\"2024-01-13T00:47:03.334Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"max\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2025-05-17T01:58:02.155Z\"),\n          modifiedAt: new Date(\"2024-09-29T09:35:40.427Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 201601,\n              \"key1\": true,\n              \"key2\": 2057.75,\n            },\n            createdAt: new Date(\"2025-03-06T04:32:46.256Z\"),\n            modifiedAt: new Date(\"2024-01-13T00:47:03.334Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"max\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2025-05-17T01:58:02.155Z\"),\n          modifiedAt: new Date(\"2024-09-29T09:35:40.427Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 201601,\n              \"key1\": true,\n              \"key2\": 2057.75,\n            },\n            createdAt: new Date(\"2025-03-06T04:32:46.256Z\"),\n            modifiedAt: new Date(\"2024-01-13T00:47:03.334Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"or\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"max\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    data: {\n      createdAt: new Date(\"2024-01-02T06:40:50.860Z\"),\n      modifiedAt: null,\n      id: \"<value>\",\n      amount: 357630,\n      currency: \"Fiji Dollar\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-04-30T10:39:59.432Z\"),\n      currentPeriodEnd: new Date(\"2025-03-19T11:29:47.842Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2023-02-17T04:59:11.584Z\"),\n      startedAt: new Date(\"2024-02-14T23:20:57.498Z\"),\n      endsAt: new Date(\"2025-04-28T23:19:31.379Z\"),\n      endedAt: new Date(\"2023-04-29T06:37:50.213Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"customer_service\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 764246,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-03-17T11:47:03.932Z\"),\n        modifiedAt: new Date(\"2025-12-12T02:48:12.123Z\"),\n        metadata: {\n          \"key\": true,\n          \"key1\": 683572,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-12-09T13:41:39.970Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2025-05-31T05:10:14.997Z\"),\n        modifiedAt: new Date(\"2024-05-08T09:12:04.956Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"pace aside typewriter if oh almost supposing twine\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 956675,\n        },\n        prices: [],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-06-28T04:33:55.419Z\"),\n            modifiedAt: new Date(\"2023-04-08T23:58:31.520Z\"),\n            description: \"eventually holster drab finished than sanity wiggly surprisingly judicious\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": false,\n              \"key1\": 683668,\n              \"key2\": 4880.9,\n            },\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"admin\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/Users\",\n            mimeType: \"<value>\",\n            size: 789606,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-10-08T06:21:41.000Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-12-10T00:21:44.017Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://poor-duster.name/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/Users\",\n            mimeType: \"<value>\",\n            size: 789606,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-10-08T06:21:41.000Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-12-10T00:21:44.017Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://poor-duster.name/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-02-06T03:19:32.386Z\"),\n              modifiedAt: new Date(\"2023-10-17T04:09:43.608Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 575720,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-02-06T03:19:32.386Z\"),\n              modifiedAt: new Date(\"2023-10-17T04:09:43.608Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 575720,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 357630,\n        type: \"fixed\",\n        amount: 88813,\n        currency: \"Syrian Pound\",\n        createdAt: new Date(\"2024-04-30T10:39:59.432Z\"),\n        modifiedAt: new Date(\"2023-05-30T02:07:20.021Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 1384.64,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-11-20T08:24:19.529Z\"),\n        endsAt: new Date(\"2023-02-17T04:59:11.584Z\"),\n        maxRedemptions: 535853,\n        redemptionsCount: 374063,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUncanceledPost({\n    data: {\n      createdAt: new Date(\"2023-02-06T17:25:10.106Z\"),\n      modifiedAt: new Date(\"2023-01-25T07:20:02.381Z\"),\n      id: \"<value>\",\n      amount: 755736,\n      currency: \"Iceland Krona\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-04-11T19:08:16.655Z\"),\n      currentPeriodEnd: new Date(\"2023-08-23T01:03:59.107Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2024-11-16T02:01:16.824Z\"),\n      startedAt: null,\n      endsAt: new Date(\"2023-12-23T04:50:00.016Z\"),\n      endedAt: new Date(\"2024-10-18T16:25:47.209Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: null,\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-10-01T20:42:25.530Z\"),\n        modifiedAt: new Date(\"2024-07-04T17:30:56.477Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-12-20T09:31:52.259Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2024-03-26T06:19:23.237Z\"),\n        modifiedAt: new Date(\"2024-05-11T18:08:21.251Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"questioningly proliferate yet vanish mooch yowza hopeful\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-01-25T07:20:02.381Z\"),\n            modifiedAt: new Date(\"2025-04-08T06:52:54.664Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 166712,\n            maximumAmount: 809387,\n            presetAmount: 425910,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-07-09T11:35:46.121Z\"),\n            modifiedAt: new Date(\"2024-07-14T11:45:04.348Z\"),\n            description: \"esteemed aha arcade\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": 549444,\n            },\n            properties: {\n              archived: {\n                \"key\": false,\n                \"key1\": false,\n                \"key2\": true,\n              },\n              files: [\n                \"<value 1>\",\n              ],\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-07-17T10:10:30.145Z\"),\n            modifiedAt: new Date(\"2024-02-22T01:39:19.437Z\"),\n            description: \"hmph frantically for into unfurl rapidly when\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"admin\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc/namedb\",\n            mimeType: \"<value>\",\n            size: 865781,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: null,\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-09-05T02:35:48.322Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-12-06T10:04:39.843Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://normal-giant.org/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-05-08T20:53:14.936Z\"),\n              modifiedAt: new Date(\"2025-08-01T19:32:49.347Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 791230,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 887720,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-05-08T20:53:14.936Z\"),\n              modifiedAt: new Date(\"2025-08-01T19:32:49.347Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 791230,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 887720,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-05-08T20:53:14.936Z\"),\n              modifiedAt: new Date(\"2025-08-01T19:32:49.347Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 791230,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 887720,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        basisPoints: 408479,\n        createdAt: new Date(\"2023-03-14T02:37:49.424Z\"),\n        modifiedAt: new Date(\"2025-12-23T02:41:08.695Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-07-07T16:21:42.534Z\"),\n        endsAt: new Date(\"2023-05-08T21:16:10.476Z\"),\n        maxRedemptions: 431440,\n        redemptionsCount: 127195,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-10-03T23:40:30.923Z\"),\n          modifiedAt: new Date(\"2024-08-30T15:34:10.479Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 34827,\n          maximumAmount: 307121,\n          presetAmount: 325001,\n        },\n      ],\n      meters: [\n        {\n          createdAt: new Date(\"2025-11-08T06:13:24.540Z\"),\n          modifiedAt: new Date(\"2023-05-26T16:36:35.734Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 479423,\n              \"key1\": 327992,\n            },\n            createdAt: new Date(\"2025-01-03T20:59:19.837Z\"),\n            modifiedAt: new Date(\"2024-09-23T23:32:35.223Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2025-11-08T06:13:24.540Z\"),\n          modifiedAt: new Date(\"2023-05-26T16:36:35.734Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 479423,\n              \"key1\": 327992,\n            },\n            createdAt: new Date(\"2025-01-03T20:59:19.837Z\"),\n            modifiedAt: new Date(\"2024-09-23T23:32:35.223Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2025-11-08T06:13:24.540Z\"),\n          modifiedAt: new Date(\"2023-05-26T16:36:35.734Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 479423,\n              \"key1\": 327992,\n            },\n            createdAt: new Date(\"2025-01-03T20:59:19.837Z\"),\n            modifiedAt: new Date(\"2024-09-23T23:32:35.223Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-06-24T13:26:25.969Z\"),\n      modifiedAt: new Date(\"2024-10-16T16:24:20.274Z\"),\n      id: \"<value>\",\n      amount: 505562,\n      currency: \"Guyana Dollar\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-06-19T12:29:28.503Z\"),\n      currentPeriodEnd: new Date(\"2023-08-24T22:14:10.131Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-08-31T06:08:08.476Z\"),\n      startedAt: new Date(\"2023-06-01T08:01:27.951Z\"),\n      endsAt: new Date(\"2025-01-23T22:07:32.693Z\"),\n      endedAt: new Date(\"2025-05-14T13:55:44.367Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      metadata: {\n        \"key\": 477870,\n        \"key1\": true,\n        \"key2\": 485359,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-01-10T06:45:35.933Z\"),\n        modifiedAt: new Date(\"2024-01-24T02:08:13.039Z\"),\n        metadata: {\n          \"key\": 117983,\n          \"key1\": 8500.16,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-08-09T14:29:57.545Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      product: {\n        createdAt: new Date(\"2024-12-02T17:09:45.787Z\"),\n        modifiedAt: new Date(\"2025-03-11T00:51:56.943Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"obnoxiously save following clinch striking juicy\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": false,\n          \"key1\": 884041,\n          \"key2\": 4257.66,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-10-16T16:24:20.274Z\"),\n            modifiedAt: new Date(\"2024-07-08T02:17:23.799Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 489836,\n          },\n        ],\n        benefits: [],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/srv\",\n            mimeType: \"<value>\",\n            size: 29348,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: null,\n            lastModifiedAt: new Date(\"2023-10-03T10:28:13.472Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-07T09:47:56.854Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://flowery-promise.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/srv\",\n            mimeType: \"<value>\",\n            size: 29348,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: null,\n            lastModifiedAt: new Date(\"2023-10-03T10:28:13.472Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-07T09:47:56.854Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://flowery-promise.org/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-01-10T20:33:55.554Z\"),\n              modifiedAt: new Date(\"2023-03-14T14:16:19.041Z\"),\n              id: \"<value>\",\n              metadata: {\n\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 766194,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 892166,\n        type: \"fixed\",\n        amount: 996997,\n        currency: \"Canadian Dollar\",\n        createdAt: new Date(\"2023-06-09T06:11:59.062Z\"),\n        modifiedAt: new Date(\"2024-09-28T05:16:48.757Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 962223,\n          \"key1\": 587522,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-04-12T20:54:06.410Z\"),\n        endsAt: new Date(\"2025-03-19T14:28:57.223Z\"),\n        maxRedemptions: 852845,\n        redemptionsCount: 658199,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      prices: [],\n      meters: [\n        {\n          createdAt: new Date(\"2025-06-07T13:44:19.881Z\"),\n          modifiedAt: new Date(\"2023-12-06T20:26:36.699Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 6882,\n              \"key1\": 556425,\n              \"key2\": 117069,\n            },\n            createdAt: new Date(\"2023-05-21T02:26:27.963Z\"),\n            modifiedAt: new Date(\"2025-06-09T17:54:52.162Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  conjunction: \"or\",\n                  clauses: [],\n                },\n                {\n                  conjunction: \"or\",\n                  clauses: [],\n                },\n              ],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2025-06-07T13:44:19.881Z\"),\n          modifiedAt: new Date(\"2023-12-06T20:26:36.699Z\"),\n          id: \"<value>\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          amount: 0,\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          meter: {\n            metadata: {\n              \"key\": 6882,\n              \"key1\": 556425,\n              \"key2\": 117069,\n            },\n            createdAt: new Date(\"2023-05-21T02:26:27.963Z\"),\n            modifiedAt: new Date(\"2025-06-09T17:54:52.162Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            filter: {\n              conjunction: \"and\",\n              clauses: [\n                {\n                  conjunction: \"or\",\n                  clauses: [],\n                },\n                {\n                  conjunction: \"or\",\n                  clauses: [],\n                },\n              ],\n            },\n            aggregation: {\n              func: \"avg\",\n              property: \"<value>\",\n            },\n            organizationId: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
