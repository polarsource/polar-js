overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/advertisements/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.advertisements.list({\n    benefitId: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/advertisements/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.advertisements.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    description: \"delightfully fumigate convection though zowie up bulky electronics\",\n    properties: {\n      guildToken: \"<value>\",\n      roleId: \"<id>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "delete"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "grants"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "delete"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/custom/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.custom.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/custom/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.custom.create({\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/custom/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "client_get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.custom.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/custom/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "client_update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.custom.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/custom/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "client_confirm"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.custom.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/custom/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.custom.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/custom/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.custom.update({\n    id: \"<value>\",\n    checkoutUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    slug: \"<value>\",\n    name: \"<value>\",\n    properties: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "delete"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.get({\n    token: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "activate"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "deactivate"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "validate"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "invoice"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "cancel"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    id: \"<value>\",\n    customerSubscriptionUpdate: {\n      productPriceId: \"<value>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    email: \"Loyal79@yahoo.com\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "delete"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"forever\",\n    durationInMonths: 417458,\n    type: \"fixed\",\n    amount: 69025,\n    name: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "delete"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/external_organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.externalOrganizations.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 638424,\n    upload: {\n      parts: [\n        {\n          number: 417458,\n          chunkStart: 134365,\n          chunkEnd: 69025,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "delete"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "uploaded"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/sys\",\n      parts: [\n        {\n          number: 173116,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 894030,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 673715,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get_activation"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2024-02-07\"),\n    endDate: new RFCDate(\"2023-09-05\"),\n    interval: \"week\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "limits"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "authorize"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "introspect_token"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create_client"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.create({\n    redirectUris: [\n      \"https://inferior-chainstay.com\",\n    ],\n    clientName: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "delete_client"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.delete({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get_client"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.get({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update_client"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.update({\n    clientId: \"<id>\",\n    oAuth2ClientConfigurationUpdate: {\n      redirectUris: [\n        \"https://grown-worth.name\",\n        \"https://worthwhile-avalanche.org/\",\n        \"https://general-digit.com/\",\n      ],\n      clientName: \"<value>\",\n      clientId: \"<id>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "revoke_token"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "request_token"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://old-fort.name\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "userinfo"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "invoice"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"<value>\",\n    organizationUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "create"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    prices: [\n      {\n        recurringInterval: \"month\",\n      },\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update_benefits"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "get"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "update"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.update({\n    id: \"<value>\",\n    repositoryUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "list"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "export"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({});\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointbenefit_created_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    data: {\n      createdAt: new Date(\"2022-04-15T11:45:18.891Z\"),\n      modifiedAt: new Date(\"2024-06-17T12:04:55.002Z\"),\n      id: \"<value>\",\n      description: \"vastly lest but\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      properties: {\n        archived: {\n          \"key\": false,\n        },\n        files: [\n          \"<value>\",\n        ],\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointbenefit_updated_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-11-19T14:31:03.333Z\"),\n      modifiedAt: new Date(\"2022-08-21T02:54:25.671Z\"),\n      id: \"<value>\",\n      description: \"merge when gratefully sparse hmph throughout honesty untried gripping um\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      properties: {\n        repositoryOwner: \"polarsource\",\n        repositoryName: \"private_repo\",\n        permission: \"push\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointbenefit_grant_created_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-01-05T13:03:27.870Z\"),\n      modifiedAt: new Date(\"2022-05-08T00:47:14.556Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      properties: {\n        advertisementCampaignId: \"<id>\",\n      },\n      benefit: {\n        createdAt: new Date(\"2022-02-20T12:28:33.166Z\"),\n        modifiedAt: new Date(\"2023-07-19T18:10:25.895Z\"),\n        id: \"<value>\",\n        description: \"though oof geez ha scuffle um inwardly narrow waterlogged normal\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {},\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointbenefit_grant_revoked_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    data: {\n      createdAt: new Date(\"2024-03-12T10:35:36.881Z\"),\n      modifiedAt: new Date(\"2024-04-12T13:10:16.426Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      properties: {\n        advertisementCampaignId: \"<id>\",\n      },\n      benefit: {\n        createdAt: new Date(\"2024-04-12T13:10:16.426Z\"),\n        modifiedAt: new Date(\"2023-03-09T05:20:11.943Z\"),\n        id: \"<value>\",\n        description: \"incidentally immense scotch meh quaff generously supposing however ugh kindly\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          archived: {\n            \"key\": false,\n          },\n          files: [\n            \"<value>\",\n          ],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointbenefit_grant_updated_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-01-03T13:54:42.243Z\"),\n      modifiedAt: new Date(\"2023-02-25T11:58:59.486Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      properties: {\n        advertisementCampaignId: \"<id>\",\n      },\n      benefit: {\n        createdAt: new Date(\"2024-04-04T12:08:04.168Z\"),\n        modifiedAt: new Date(\"2024-02-23T02:27:57.903Z\"),\n        id: \"<value>\",\n        description: \"meager merit by pish intermesh gah out muddy ah\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          guildId: \"<id>\",\n          roleId: \"<id>\",\n          guildToken: \"<value>\",\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointcheckout_created_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-11-12T14:26:42.882Z\"),\n      modifiedAt: new Date(\"2023-05-28T05:08:06.235Z\"),\n      id: \"<value>\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://heavy-beret.com/\",\n      expiresAt: new Date(\"2022-02-25T02:26:48.460Z\"),\n      successUrl: \"https://sardonic-final.info/\",\n      embedOrigin: \"<value>\",\n      amount: 962818,\n      taxAmount: 6400,\n      currency: \"Yen\",\n      subtotalAmount: 648726,\n      totalAmount: 210702,\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      isDiscountApplicable: false,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: false,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"Ryley_Erdman@hotmail.com\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"South Africa\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {},\n      metadata: {\n        \"key\": 18677,\n        \"key1\": 95370,\n      },\n      product: {\n        createdAt: new Date(\"2022-04-02T00:05:42.586Z\"),\n        modifiedAt: new Date(\"2023-12-16T03:02:38.803Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"for embarrassment untidy long-term near honestly separate yet\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2024-11-19T15:59:15.588Z\"),\n            modifiedAt: new Date(\"2022-11-17T00:11:23.972Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 363560,\n            maximumAmount: 75876,\n            presetAmount: 82334,\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2023-08-22T00:47:02.059Z\"),\n            modifiedAt: new Date(\"2023-06-04T10:32:44.101Z\"),\n            id: \"<value>\",\n            type: \"license_keys\",\n            description: \"within jacket unless\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private/var\",\n            mimeType: \"<value>\",\n            size: 245189,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2022-11-03T15:00:03.276Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-06-07T13:47:02.365Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://webbed-experience.name/\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2024-02-15T09:22:19.644Z\"),\n        modifiedAt: new Date(\"2022-12-28T20:59:29.904Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 417896,\n        maximumAmount: 962818,\n        presetAmount: 6400,\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"fixed\",\n        basisPoints: 341163,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2022-08-19T22:18:44.316Z\"),\n            modifiedAt: new Date(\"2023-04-29T23:39:10.699Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {\n              options: [\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n              ],\n            },\n          },\n          order: 996863,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-07-03T09:46:29.338Z\"),\n            modifiedAt: new Date(\"2024-01-25T18:08:49.597Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {},\n          },\n          order: 72589,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-07-31T13:25:31.669Z\"),\n            modifiedAt: new Date(\"2022-11-12T09:40:10.044Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {},\n          },\n          order: 161325,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointcheckout_updated_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-10-04T13:06:10.658Z\"),\n      modifiedAt: new Date(\"2023-10-03T21:25:15.366Z\"),\n      id: \"<value>\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://square-cafe.biz/\",\n      expiresAt: new Date(\"2024-03-25T08:55:11.873Z\"),\n      successUrl: \"https://physical-import.name/\",\n      embedOrigin: \"<value>\",\n      amount: 245418,\n      taxAmount: 624213,\n      currency: \"Naira\",\n      subtotalAmount: 24587,\n      totalAmount: 447013,\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      isDiscountApplicable: true,\n      isFreeProductPrice: true,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: true,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"Jairo39@hotmail.com\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"Greenland\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {},\n      metadata: {\n\n      },\n      product: {\n        createdAt: new Date(\"2024-01-25T14:28:29.444Z\"),\n        modifiedAt: new Date(\"2024-09-21T12:18:51.327Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"engender reopen yahoo draft\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2024-10-20T04:48:05.954Z\"),\n            modifiedAt: new Date(\"2023-03-13T21:45:21.173Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 789773,\n            maximumAmount: 108579,\n            presetAmount: 316079,\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2024-04-09T09:30:36.910Z\"),\n            modifiedAt: new Date(\"2022-10-16T19:52:50.377Z\"),\n            id: \"<value>\",\n            type: \"github_repository\",\n            description: \"posh hm meatloaf politely ugh fidget to inborn putrid\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n          {\n            createdAt: new Date(\"2023-12-31T03:17:46.406Z\"),\n            modifiedAt: new Date(\"2022-11-12T16:32:46.306Z\"),\n            id: \"<value>\",\n            type: \"license_keys\",\n            description: \"blah likewise whose notwithstanding airline aboard frightened enfold colorfully\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/home/user\",\n            mimeType: \"<value>\",\n            size: 767806,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-01-15T18:22:33.094Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-02-14T06:20:54.950Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://pushy-tomatillo.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private\",\n            mimeType: \"<value>\",\n            size: 432333,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-03-08T18:51:14.729Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2022-11-18T09:33:10.032Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://affectionate-charm.net\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2023-10-29T13:46:29.597Z\"),\n        modifiedAt: new Date(\"2023-05-16T07:46:47.748Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        priceCurrency: \"<value>\",\n        priceAmount: 585155,\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        amount: 883154,\n        currency: \"East Caribbean Dollar\",\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-11-16T03:18:06.755Z\"),\n            modifiedAt: new Date(\"2023-11-06T16:13:01.569Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {},\n          },\n          order: 108303,\n          required: false,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointorder_created_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-11-12T12:46:15.007Z\"),\n      modifiedAt: new Date(\"2023-03-24T03:54:38.261Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n      },\n      amount: 485666,\n      taxAmount: 81588,\n      currency: \"Metical\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"Hungary\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        createdAt: new Date(\"2022-09-09T08:07:10.665Z\"),\n        modifiedAt: new Date(\"2023-08-19T18:18:41.438Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 407995,\n          \"key1\": \"<value>\",\n          \"key2\": \"<value>\",\n        },\n        email: \"Gia.Boyer87@yahoo.com\",\n        emailVerified: false,\n        name: \"<value>\",\n        billingAddress: {\n          country: \"Reunion\",\n        },\n        taxId: [\n          \"<value>\",\n          \"my_sst\",\n          \"br_cpf\",\n        ],\n        organizationId: \"<value>\",\n        avatarUrl: \"https://darling-kit.org\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Delphine_Weber@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-12-27T14:05:37.748Z\"),\n        modifiedAt: new Date(\"2024-01-02T22:00:53.940Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"circle colorize given\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2022-08-04T05:13:22.817Z\"),\n        modifiedAt: new Date(\"2023-06-17T06:57:11.062Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        priceCurrency: \"<value>\",\n        priceAmount: 81588,\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"fixed\",\n        basisPoints: 229323,\n        createdAt: new Date(\"2023-08-19T18:18:41.438Z\"),\n        modifiedAt: new Date(\"2024-09-23T11:59:51.286Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": false,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-12-09T16:33:38.176Z\"),\n        endsAt: new Date(\"2022-12-26T14:42:24.925Z\"),\n        maxRedemptions: 248386,\n        redemptionsCount: 506985,\n        organizationId: \"<value>\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 838937,\n          \"key1\": true,\n        },\n        createdAt: new Date(\"2024-05-09T06:10:47.548Z\"),\n        modifiedAt: new Date(\"2024-02-14T18:51:37.875Z\"),\n        id: \"<value>\",\n        amount: 420337,\n        currency: \"New Zealand Dollar\",\n        recurringInterval: \"year\",\n        status: \"incomplete\",\n        currentPeriodStart: new Date(\"2024-12-01T13:27:57.927Z\"),\n        currentPeriodEnd: new Date(\"2022-06-23T18:54:19.334Z\"),\n        cancelAtPeriodEnd: false,\n        startedAt: new Date(\"2023-11-16T11:53:36.436Z\"),\n        endedAt: new Date(\"2024-11-18T03:47:21.756Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        priceId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointorganization_updated_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    data: {\n      createdAt: new Date(\"2022-08-12T18:45:04.236Z\"),\n      modifiedAt: new Date(\"2024-12-29T16:35:25.119Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: \"https://devoted-bump.net\",\n      bio: \"<value>\",\n      company: \"Torp, Kuhlman and Howell\",\n      blog: \"<value>\",\n      location: \"<value>\",\n      email: \"Dock_Friesen57@yahoo.com\",\n      twitterUsername: \"<value>\",\n      pledgeMinimumAmount: 105265,\n      pledgeBadgeShowAmount: true,\n      defaultUpfrontSplitToContributors: 907160,\n      profileSettings: {},\n      featureSettings: {},\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["pledge.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointpledge_created_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointpledgeCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-03-12T00:19:41.487Z\"),\n      modifiedAt: new Date(\"2022-04-19T01:42:59.169Z\"),\n      id: \"<value>\",\n      amount: 330877,\n      currency: \"Jamaican Dollar\",\n      state: \"disputed\",\n      type: \"pay_directly\",\n      issue: {\n        id: \"66524b69-aa0b-47ac-bb9a-0cee5d3a9110\",\n        number: 280857,\n        title: \"<value>\",\n        state: \"open\",\n        issueCreatedAt: new Date(\"2023-02-26T00:33:35.289Z\"),\n        needsConfirmationSolved: false,\n        funding: {},\n        repository: {\n          id: \"356e14cb-87a4-484c-bcfa-ebfe50487706\",\n          isPrivate: true,\n          name: \"MyOrg\",\n          description: \"different premium tinderbox peter under often buzzing hastily\",\n          stars: 1337,\n          license: \"<value>\",\n          homepage: \"<value>\",\n          profileSettings: {},\n          organization: {\n            id: \"29159f56-74c0-464d-b598-8d5bc3b9cdda\",\n            name: \"<value>\",\n            avatarUrl: \"https://frightened-poppy.com/\",\n            isPersonal: false,\n            bio: \"<value>\",\n            prettyName: \"<value>\",\n            company: \"Bailey - Towne\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            email: \"Cortez_Stehr70@yahoo.com\",\n            twitterUsername: \"<value>\",\n            organizationId: \"<value>\",\n          },\n          internalOrganization: {\n            createdAt: new Date(\"2024-01-04T15:27:13.109Z\"),\n            modifiedAt: new Date(\"2023-02-15T22:10:17.041Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            slug: \"<value>\",\n            avatarUrl: \"https://hard-to-find-thyme.org\",\n            bio: \"<value>\",\n            company: \"Schinner - Wiegand\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            email: \"Pearline_Brekke@hotmail.com\",\n            twitterUsername: \"<value>\",\n            pledgeMinimumAmount: 273260,\n            pledgeBadgeShowAmount: false,\n            defaultUpfrontSplitToContributors: 976949,\n            profileSettings: {},\n            featureSettings: {},\n          },\n        },\n        pledgeBadgeCurrentlyEmbedded: true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["pledge.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointpledge_updated_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointpledgeUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-11-30T00:10:39.674Z\"),\n      modifiedAt: new Date(\"2024-10-02T21:42:49.754Z\"),\n      id: \"<value>\",\n      amount: 634567,\n      currency: \"Singapore Dollar\",\n      state: \"refunded\",\n      type: \"pay_on_completion\",\n      issue: {\n        id: \"d2e1349d-085a-441c-abf4-379a1f21d0da\",\n        number: 218372,\n        title: \"<value>\",\n        state: \"closed\",\n        issueCreatedAt: new Date(\"2023-08-13T14:08:31.083Z\"),\n        needsConfirmationSolved: true,\n        funding: {},\n        repository: {\n          id: \"814bd7c6-3412-4f11-b523-7b38c659f44a\",\n          isPrivate: false,\n          name: \"MyOrg\",\n          description: \"hm however microchip\",\n          stars: 1337,\n          license: \"<value>\",\n          homepage: \"<value>\",\n          profileSettings: {},\n          organization: {\n            id: \"3ddd5cc2-de10-41ef-baa1-7551cf671cc3\",\n            name: \"<value>\",\n            avatarUrl: \"https://gummy-interviewer.biz\",\n            isPersonal: false,\n            bio: \"<value>\",\n            prettyName: \"<value>\",\n            company: \"Ferry - Tremblay\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            email: \"Reggie_Crist@yahoo.com\",\n            twitterUsername: \"<value>\",\n            organizationId: \"<value>\",\n          },\n          internalOrganization: {\n            createdAt: new Date(\"2024-12-13T11:00:39.217Z\"),\n            modifiedAt: new Date(\"2024-12-02T09:51:26.214Z\"),\n            id: \"<value>\",\n            name: \"<value>\",\n            slug: \"<value>\",\n            avatarUrl: \"https://memorable-numeracy.com/\",\n            bio: \"<value>\",\n            company: \"Schuster - Crooks\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            email: \"Tatum.Block37@yahoo.com\",\n            twitterUsername: \"<value>\",\n            pledgeMinimumAmount: 653584,\n            pledgeBadgeShowAmount: false,\n            defaultUpfrontSplitToContributors: 175899,\n            profileSettings: {},\n            featureSettings: {},\n          },\n        },\n        pledgeBadgeCurrentlyEmbedded: false,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointproduct_created_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    data: {\n      createdAt: new Date(\"2022-03-27T06:36:20.130Z\"),\n      modifiedAt: new Date(\"2024-04-21T12:05:16.637Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"into horst metal grimy clinch big grounded industrialize\",\n      isRecurring: true,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-12-08T23:31:39.577Z\"),\n          modifiedAt: new Date(\"2023-04-26T10:21:28.587Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n        {\n          createdAt: new Date(\"2023-09-07T02:23:36.299Z\"),\n          modifiedAt: new Date(\"2023-10-10T12:20:00.039Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 527608,\n          maximumAmount: 32202,\n          presetAmount: 66164,\n        },\n      ],\n      benefits: [\n        {\n          createdAt: new Date(\"2022-08-11T12:50:57.278Z\"),\n          modifiedAt: new Date(\"2022-03-26T05:55:13.113Z\"),\n          id: \"<value>\",\n          description: \"tromp these near throughout shear\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            note: \"<value>\",\n          },\n          isTaxApplicable: false,\n        },\n        {\n          createdAt: new Date(\"2024-05-03T09:49:30.012Z\"),\n          modifiedAt: new Date(\"2024-02-20T10:03:27.777Z\"),\n          id: \"<value>\",\n          description: \"creature think tuber best\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            guildId: \"<id>\",\n            roleId: \"<id>\",\n            guildToken: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-04-18T11:46:21.794Z\"),\n          modifiedAt: new Date(\"2022-04-09T12:26:58.282Z\"),\n          id: \"<value>\",\n          description: \"massage super even\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            prefix: \"<value>\",\n            expires: {\n              ttl: 935647,\n              timeframe: \"month\",\n            },\n            activations: {\n              limit: 136136,\n              enableCustomerAdmin: false,\n            },\n            limitUsage: 923812,\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/Users\",\n          mimeType: \"<value>\",\n          size: 692895,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2022-02-28T01:03:14.537Z\"),\n          version: \"<value>\",\n          isUploaded: true,\n          createdAt: new Date(\"2022-06-03T00:39:20.038Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://monstrous-cop-out.net\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/var/mail\",\n          mimeType: \"<value>\",\n          size: 843323,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2022-04-23T21:31:25.476Z\"),\n          version: \"<value>\",\n          isUploaded: true,\n          createdAt: new Date(\"2022-07-19T01:29:35.587Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://well-made-farm.com\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/root\",\n          mimeType: \"<value>\",\n          size: 849549,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2022-07-30T13:09:33.963Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2023-10-03T20:39:40.444Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://simplistic-devastation.com\",\n        },\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2022-03-24T09:30:48.572Z\"),\n            modifiedAt: new Date(\"2022-02-09T00:26:32.257Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 657365,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {\n              options: [\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n              ],\n            },\n          },\n          order: 317196,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2022-11-16T07:29:59.811Z\"),\n            modifiedAt: new Date(\"2022-04-09T18:35:32.219Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {},\n          },\n          order: 492053,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2022-03-07T07:24:39.165Z\"),\n            modifiedAt: new Date(\"2024-01-26T07:31:37.106Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {},\n          },\n          order: 17631,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointproduct_updated_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-06-26T03:46:32.479Z\"),\n      modifiedAt: new Date(\"2022-06-04T01:47:33.158Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"er ick birdcage\",\n      isRecurring: true,\n      isArchived: false,\n      organizationId: \"<value>\",\n      metadata: {\n\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2022-04-14T23:22:06.974Z\"),\n          modifiedAt: new Date(\"2022-11-27T16:49:54.775Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          priceCurrency: \"<value>\",\n          priceAmount: 320395,\n          recurringInterval: \"month\",\n        },\n      ],\n      benefits: [\n        {\n          createdAt: new Date(\"2022-06-01T01:28:53.091Z\"),\n          modifiedAt: new Date(\"2023-03-01T01:53:23.154Z\"),\n          id: \"<value>\",\n          description: \"ick birdcage manage shark along always modulo fidget inside lightly\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            guildId: \"<id>\",\n            roleId: \"<id>\",\n            guildToken: \"<value>\",\n          },\n        },\n        {\n          createdAt: new Date(\"2023-02-12T19:04:33.442Z\"),\n          modifiedAt: new Date(\"2023-03-31T22:30:29.668Z\"),\n          id: \"<value>\",\n          description: \"lotion role till by yuck terribly\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            repositoryOwner: \"polarsource\",\n            repositoryName: \"private_repo\",\n            permission: \"maintain\",\n          },\n        },\n        {\n          createdAt: new Date(\"2022-05-05T14:08:08.545Z\"),\n          modifiedAt: new Date(\"2022-10-20T01:25:33.770Z\"),\n          id: \"<value>\",\n          description: \"minor aha boohoo team\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            repositoryOwner: \"polarsource\",\n            repositoryName: \"private_repo\",\n            permission: \"pull\",\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/usr/libexec\",\n          mimeType: \"<value>\",\n          size: 151389,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2022-12-22T05:20:03.719Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2024-02-19T02:35:29.302Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://meager-dividend.biz\",\n        },\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2022-10-31T20:54:51.973Z\"),\n            modifiedAt: new Date(\"2024-06-25T07:43:21.903Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {},\n          },\n          order: 19557,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-06-28T03:01:35.144Z\"),\n            modifiedAt: new Date(\"2022-03-31T13:51:41.910Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {},\n          },\n          order: 753420,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2022-12-10T00:18:34.847Z\"),\n            modifiedAt: new Date(\"2024-08-19T11:13:30.301Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 700832,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"<value>\",\n            properties: {},\n          },\n          order: 454407,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointsubscription_active_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    data: {\n      createdAt: new Date(\"2022-09-17T11:03:44.679Z\"),\n      modifiedAt: new Date(\"2024-07-24T20:02:17.426Z\"),\n      id: \"<value>\",\n      amount: 116760,\n      currency: \"Quetzal\",\n      recurringInterval: \"month\",\n      status: \"incomplete\",\n      currentPeriodStart: new Date(\"2022-08-25T00:14:50.252Z\"),\n      currentPeriodEnd: new Date(\"2022-12-10T18:25:01.577Z\"),\n      cancelAtPeriodEnd: false,\n      startedAt: new Date(\"2023-07-06T14:07:23.099Z\"),\n      endedAt: new Date(\"2023-07-01T08:12:48.355Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      priceId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        createdAt: new Date(\"2024-10-30T02:51:06.576Z\"),\n        modifiedAt: new Date(\"2023-06-21T14:46:16.535Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n          \"key1\": \"<value>\",\n          \"key2\": 615212,\n        },\n        email: \"Sincere42@gmail.com\",\n        emailVerified: false,\n        name: \"<value>\",\n        billingAddress: {\n          country: \"Tanzania\",\n        },\n        taxId: [\n          \"<value>\",\n          \"<value>\",\n          \"mx_rfc\",\n        ],\n        organizationId: \"<value>\",\n        avatarUrl: \"https://negative-tentacle.com\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Zoey_Bahringer88@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-03-05T21:40:58.905Z\"),\n        modifiedAt: new Date(\"2022-06-03T13:50:25.005Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"synthesise beautifully until below barring concerning\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 893296,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2022-12-23T21:06:29.057Z\"),\n            modifiedAt: new Date(\"2023-06-19T07:32:20.859Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            priceCurrency: \"<value>\",\n            priceAmount: 110303,\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2022-12-10T18:25:01.577Z\"),\n            modifiedAt: new Date(\"2023-09-05T07:05:35.451Z\"),\n            id: \"<value>\",\n            description: \"from suspiciously another bitter geez joyously courageously\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2022-07-07T22:15:53.860Z\"),\n            modifiedAt: new Date(\"2022-02-27T05:34:22.707Z\"),\n            id: \"<value>\",\n            description: \"newsprint toward like fast magnificent yippee\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {},\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/media\",\n            mimeType: \"<value>\",\n            size: 931655,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2022-06-07T17:40:48.757Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-07-28T18:04:02.928Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://remorseful-hamburger.name\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2022-12-20T17:12:38.621Z\"),\n              modifiedAt: new Date(\"2022-05-15T20:51:57.377Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 769742,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-02-18T13:39:50.808Z\"),\n              modifiedAt: new Date(\"2024-03-27T06:27:09.035Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 775460,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 61975,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2022-01-21T03:01:14.288Z\"),\n              modifiedAt: new Date(\"2024-03-03T05:42:43.472Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 531803,\n            required: true,\n          },\n        ],\n      },\n      price: {\n        createdAt: new Date(\"2024-11-26T01:05:50.319Z\"),\n        modifiedAt: new Date(\"2022-03-31T14:01:05.007Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 212226,\n        maximumAmount: 700283,\n        presetAmount: 223374,\n        recurringInterval: \"year\",\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 797898,\n        type: \"percentage\",\n        amount: 764641,\n        currency: \"Hryvnia\",\n        createdAt: new Date(\"2022-10-20T20:21:06.932Z\"),\n        modifiedAt: new Date(\"2023-10-20T13:44:20.141Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 630245,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-07-12T07:27:00.073Z\"),\n        endsAt: new Date(\"2022-10-29T18:42:02.439Z\"),\n        maxRedemptions: 240424,\n        redemptionsCount: 504359,\n        organizationId: \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointsubscription_canceled_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    data: {\n      createdAt: new Date(\"2023-02-08T10:04:43.200Z\"),\n      modifiedAt: new Date(\"2022-02-20T09:16:44.963Z\"),\n      id: \"<value>\",\n      amount: 384017,\n      currency: \"Nakfa\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2024-08-29T23:51:26.505Z\"),\n      currentPeriodEnd: new Date(\"2023-01-30T14:57:29.126Z\"),\n      cancelAtPeriodEnd: false,\n      startedAt: new Date(\"2022-05-31T10:57:35.559Z\"),\n      endedAt: new Date(\"2023-11-01T08:13:37.012Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      priceId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        createdAt: new Date(\"2022-07-13T20:08:34.251Z\"),\n        modifiedAt: new Date(\"2023-11-18T03:48:04.429Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": \"<value>\",\n          \"key2\": 199269,\n        },\n        email: \"Marcella_Gislason@gmail.com\",\n        emailVerified: false,\n        name: \"<value>\",\n        billingAddress: {\n          country: \"Kuwait\",\n        },\n        taxId: [\n          \"<value>\",\n          \"ca_qst\",\n          \"ua_vat\",\n        ],\n        organizationId: \"<value>\",\n        avatarUrl: \"https://oily-juggernaut.com/\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Sherwood.Murphy2@yahoo.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2022-04-28T07:50:03.180Z\"),\n        modifiedAt: new Date(\"2022-02-20T03:50:20.279Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"tenant indeed when distorted before excluding claw stool aw self-reliant\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 231419,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-02-25T21:11:48.890Z\"),\n            modifiedAt: new Date(\"2022-10-06T06:04:45.294Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            priceCurrency: \"<value>\",\n            priceAmount: 433194,\n            recurringInterval: \"year\",\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2023-01-30T14:57:29.126Z\"),\n            modifiedAt: new Date(\"2023-11-08T11:19:25.895Z\"),\n            id: \"<value>\",\n            description: \"above phew splash because\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 632248,\n                timeframe: \"day\",\n              },\n              activations: {\n                limit: 351735,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 629264,\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/include\",\n            mimeType: \"<value>\",\n            size: 778001,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-03-31T22:07:25.990Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-09-17T20:00:26.644Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://dim-tail.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc/namedb\",\n            mimeType: \"<value>\",\n            size: 797228,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2022-12-03T23:14:09.199Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-11T05:55:27.601Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://tragic-castanet.biz/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private/tmp\",\n            mimeType: \"<value>\",\n            size: 547184,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-08-24T04:18:58.722Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-07-31T11:34:39.128Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://cumbersome-forage.biz\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2022-02-02T14:55:14.427Z\"),\n              modifiedAt: new Date(\"2022-01-12T05:03:52.598Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 790486,\n            required: true,\n          },\n        ],\n      },\n      price: {\n        createdAt: new Date(\"2024-10-11T07:00:30.143Z\"),\n        modifiedAt: new Date(\"2023-12-24T22:35:56.583Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        priceCurrency: \"<value>\",\n        priceAmount: 257157,\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 881227,\n        type: \"percentage\",\n        basisPoints: 219027,\n        createdAt: new Date(\"2024-08-25T05:44:47.155Z\"),\n        modifiedAt: new Date(\"2024-05-20T21:20:47.625Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-02-10T10:42:46.688Z\"),\n        endsAt: new Date(\"2022-06-18T16:12:21.059Z\"),\n        maxRedemptions: 372199,\n        redemptionsCount: 943530,\n        organizationId: \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointsubscription_created_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-07-04T01:29:40.920Z\"),\n      modifiedAt: new Date(\"2022-02-20T03:35:25.500Z\"),\n      id: \"<value>\",\n      amount: 78980,\n      currency: \"Dong\",\n      recurringInterval: \"month\",\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2024-01-26T02:46:12.208Z\"),\n      currentPeriodEnd: new Date(\"2022-10-08T16:07:22.449Z\"),\n      cancelAtPeriodEnd: false,\n      startedAt: new Date(\"2024-10-17T20:21:29.819Z\"),\n      endedAt: new Date(\"2022-02-26T17:52:17.099Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      priceId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        createdAt: new Date(\"2022-09-06T09:33:34.348Z\"),\n        modifiedAt: new Date(\"2024-05-17T19:46:56.602Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 229409,\n        },\n        email: \"Jermey.Ward@gmail.com\",\n        emailVerified: false,\n        name: \"<value>\",\n        billingAddress: {\n          country: \"Vietnam\",\n        },\n        taxId: [\n          \"<value>\",\n          \"sg_gst\",\n        ],\n        organizationId: \"<value>\",\n        avatarUrl: \"https://junior-numeracy.info/\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Rosalia.Ritchie@yahoo.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-02-26T17:46:34.360Z\"),\n        modifiedAt: new Date(\"2023-12-01T21:55:43.801Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"from below aw request\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2022-03-28T13:29:27.613Z\"),\n            modifiedAt: new Date(\"2024-10-05T17:53:50.261Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            priceCurrency: \"<value>\",\n            priceAmount: 418755,\n          },\n          {\n            createdAt: new Date(\"2022-10-08T16:07:22.449Z\"),\n            modifiedAt: new Date(\"2024-03-25T06:36:23.018Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"year\",\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2022-07-04T19:46:53.033Z\"),\n            modifiedAt: new Date(\"2022-09-06T09:33:34.348Z\"),\n            id: \"<value>\",\n            description: \"foretell outgoing meh mechanically etch twine deed um on\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {},\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc/defaults\",\n            mimeType: \"<value>\",\n            size: 212274,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-02-07T09:30:30.379Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-02-24T03:01:46.062Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://courageous-sailor.com/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/bin\",\n            mimeType: \"<value>\",\n            size: 411556,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2022-11-06T04:00:51.558Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-08-27T08:53:33.064Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://snappy-airline.name\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-08-04T21:33:41.088Z\"),\n              modifiedAt: new Date(\"2023-01-18T07:13:43.618Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 893449,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-10-22T05:30:47.412Z\"),\n              modifiedAt: new Date(\"2024-06-17T14:49:05.261Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 966758,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 954791,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-05-30T03:00:41.121Z\"),\n              modifiedAt: new Date(\"2022-09-20T15:44:04.829Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 262037,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 748789,\n            required: true,\n          },\n        ],\n      },\n      price: {\n        createdAt: new Date(\"2024-10-04T05:55:28.900Z\"),\n        modifiedAt: new Date(\"2023-12-20T20:35:08.624Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 63766,\n        maximumAmount: 626461,\n        presetAmount: 467502,\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"fixed\",\n        basisPoints: 116399,\n        createdAt: new Date(\"2024-09-29T12:11:21.682Z\"),\n        modifiedAt: new Date(\"2022-07-03T04:55:47.377Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2022-03-13T02:22:01.631Z\"),\n        endsAt: new Date(\"2024-09-16T04:55:19.972Z\"),\n        maxRedemptions: 803154,\n        redemptionsCount: 825426,\n        organizationId: \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointsubscription_revoked_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    data: {\n      createdAt: new Date(\"2024-11-29T12:00:55.925Z\"),\n      modifiedAt: new Date(\"2022-03-13T04:36:55.320Z\"),\n      id: \"<value>\",\n      amount: 780683,\n      currency: \"CFP Franc\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2022-06-20T05:55:42.170Z\"),\n      currentPeriodEnd: new Date(\"2023-05-17T17:55:53.899Z\"),\n      cancelAtPeriodEnd: true,\n      startedAt: new Date(\"2024-10-25T10:04:20.460Z\"),\n      endedAt: new Date(\"2023-09-30T18:36:35.285Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      priceId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": 721489,\n      },\n      customer: {\n        createdAt: new Date(\"2022-06-02T05:06:11.692Z\"),\n        modifiedAt: new Date(\"2024-09-02T15:09:07.489Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 112038,\n          \"key1\": 182663,\n          \"key2\": 85731,\n        },\n        email: \"Tia59@yahoo.com\",\n        emailVerified: true,\n        name: \"<value>\",\n        billingAddress: {\n          country: \"Azerbaijan\",\n        },\n        taxId: [\n          \"au_arn\",\n        ],\n        organizationId: \"<value>\",\n        avatarUrl: \"https://babyish-plastic.net\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Reina59@yahoo.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2023-11-12T08:35:43.186Z\"),\n        modifiedAt: new Date(\"2023-02-16T16:26:12.752Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"knavishly next unlike\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-08-17T13:41:14.572Z\"),\n            modifiedAt: new Date(\"2022-12-18T14:14:00.851Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n          },\n          {\n            createdAt: new Date(\"2023-06-25T17:28:30.971Z\"),\n            modifiedAt: new Date(\"2024-10-25T10:04:20.460Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 581912,\n            maximumAmount: 382050,\n            presetAmount: 354441,\n            recurringInterval: \"year\",\n          },\n          {\n            createdAt: new Date(\"2024-06-23T22:13:15.423Z\"),\n            modifiedAt: new Date(\"2023-11-03T11:38:25.623Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2022-07-20T04:46:43.248Z\"),\n            modifiedAt: new Date(\"2023-11-18T04:36:46.811Z\"),\n            id: \"<value>\",\n            description: \"replicate where whenever\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"maintain\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/selinux\",\n            mimeType: \"<value>\",\n            size: 307478,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-08-09T04:03:47.757Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-03-19T06:48:17.921Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://bleak-worth.name\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/opt/sbin\",\n            mimeType: \"<value>\",\n            size: 846156,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-07-22T16:48:21.593Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2022-01-29T12:49:28.784Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://unusual-switch.name\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var/mail\",\n            mimeType: \"<value>\",\n            size: 4230,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-09-24T13:03:31.087Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2022-07-22T04:02:13.353Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://warm-sideboard.name/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2022-02-02T13:25:42.995Z\"),\n              modifiedAt: new Date(\"2023-01-21T09:49:19.562Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 107780,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 120474,\n            required: false,\n          },\n        ],\n      },\n      price: {\n        createdAt: new Date(\"2023-06-28T04:05:34.316Z\"),\n        modifiedAt: new Date(\"2023-04-02T06:25:10.726Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"year\",\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 623981,\n        type: \"percentage\",\n        amount: 886908,\n        currency: \"Tugrik\",\n        createdAt: new Date(\"2023-01-24T05:12:46.858Z\"),\n        modifiedAt: new Date(\"2023-07-07T23:08:05.752Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2022-03-18T18:07:14.590Z\"),\n        endsAt: new Date(\"2023-08-23T05:03:56.525Z\"),\n        maxRedemptions: 608057,\n        redemptionsCount: 892144,\n        organizationId: \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "_endpointsubscription_updated_post"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    data: {\n      createdAt: new Date(\"2022-08-16T06:35:49.390Z\"),\n      modifiedAt: new Date(\"2024-11-13T10:48:05.575Z\"),\n      id: \"<value>\",\n      amount: 299644,\n      currency: \"Baht\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2024-10-06T07:01:55.000Z\"),\n      currentPeriodEnd: new Date(\"2024-01-21T06:59:31.349Z\"),\n      cancelAtPeriodEnd: false,\n      startedAt: new Date(\"2022-10-04T04:56:04.382Z\"),\n      endedAt: new Date(\"2022-01-22T12:57:07.430Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      priceId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 442859,\n        \"key2\": 394013,\n      },\n      customer: {\n        createdAt: new Date(\"2024-09-14T04:37:19.722Z\"),\n        modifiedAt: new Date(\"2024-03-24T00:03:13.207Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": 392900,\n        },\n        email: \"Dominic.Toy27@yahoo.com\",\n        emailVerified: false,\n        name: \"<value>\",\n        billingAddress: {\n          country: \"Sweden\",\n        },\n        taxId: [\n          \"mx_rfc\",\n          \"gb_vat\",\n          \"<value>\",\n        ],\n        organizationId: \"<value>\",\n        avatarUrl: \"https://worthy-place.biz\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Domenico_Franecki46@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2023-06-12T14:55:33.574Z\"),\n        modifiedAt: new Date(\"2022-06-02T07:14:13.619Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"intent that yowza\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2022-11-25T09:50:52.301Z\"),\n            modifiedAt: new Date(\"2024-06-16T22:58:18.488Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"year\",\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2024-10-06T07:01:55.000Z\"),\n            modifiedAt: new Date(\"2024-01-21T06:59:31.349Z\"),\n            id: \"<value>\",\n            description: \"meanwhile amount accurate pleasing delicious book frenetically brr considering huzzah\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/lost+found\",\n            mimeType: \"<value>\",\n            size: 562154,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-08-06T03:20:53.935Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-09-07T09:54:32.715Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://rare-trash.info\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc/ppp\",\n            mimeType: \"<value>\",\n            size: 66044,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-07-07T23:54:00.303Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2022-10-11T04:49:26.739Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://worse-ceramic.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/home\",\n            mimeType: \"<value>\",\n            size: 75695,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2022-09-16T06:56:23.715Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-06-23T20:54:57.375Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://closed-seafood.info\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2022-03-28T22:24:16.436Z\"),\n              modifiedAt: new Date(\"2022-06-25T07:31:50.142Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 471294,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 553735,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-04-27T03:42:46.919Z\"),\n              modifiedAt: new Date(\"2022-07-10T15:18:31.478Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {},\n            },\n            order: 892169,\n            required: true,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-03-07T23:45:11.850Z\"),\n              modifiedAt: new Date(\"2024-12-11T04:05:14.451Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"<value>\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 578881,\n            required: false,\n          },\n        ],\n      },\n      price: {\n        createdAt: new Date(\"2024-10-02T04:07:15.390Z\"),\n        modifiedAt: new Date(\"2023-09-28T09:04:47.791Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 539267,\n        type: \"percentage\",\n        amount: 440126,\n        currency: \"Liberian Dollar\",\n        createdAt: new Date(\"2023-12-15T11:44:25.253Z\"),\n        modifiedAt: new Date(\"2023-03-06T16:20:52.572Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-11-05T14:17:31.159Z\"),\n        endsAt: new Date(\"2024-07-18T17:11:43.309Z\"),\n        maxRedemptions: 542595,\n        redemptionsCount: 673893,\n        organizationId: \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
