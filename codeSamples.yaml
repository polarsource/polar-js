overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    description: \"delightfully fumigate convection though zowie up bulky electronics\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {\n      files: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    allowDiscountCodes: true,\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.create({\n    allowDiscountCodes: true,\n    customerBillingAddress: {\n      country: \"SE\",\n    },\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.update({\n    id: \"<value>\",\n    checkoutUpdate: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    slug: \"<value>\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    billingAddress: {\n      country: \"FR\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.getPaymentMethods({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.addPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    confirmationTokenId: \"<id>\",\n    setDefault: false,\n    returnUrl: \"https://slight-digestive.info\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.customers.deletePaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.get({\n    token: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerSubscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSessions.create({\n    customerId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    externalId: \"usr_1337\",\n    email: \"customer@example.com\",\n    name: \"John Doe\",\n    billingAddress: {\n      country: \"SE\",\n    },\n    taxId: [\n      \"FR61954506077\",\n      \"eu_vat\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.deleteExternal({\n    externalId: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.updateExternal({\n    externalId: \"<id>\",\n    customerUpdate: {\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getStateExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getState({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"forever\",\n    durationInMonths: 417458,\n    type: \"fixed\",\n    amount: 69025,\n    currency: \"usd\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.ingest({\n    events: [\n      {\n        name: \"<value>\",\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        customerId: \"<value>\",\n      },\n      {\n        name: \"<value>\",\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        externalCustomerId: \"<id>\",\n      },\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.listNames({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/external_organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.externalOrganizations.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 638424,\n    upload: {\n      parts: [\n        {\n          number: 417458,\n          chunkStart: 134365,\n          chunkEnd: 69025,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/sys\",\n      parts: [\n        {\n          number: 173116,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 894030,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 673715,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.create({\n    name: \"<value>\",\n    filter: {\n      conjunction: \"and\",\n      clauses: [\n\n      ],\n    },\n    aggregation: {\n      func: \"sum\",\n      property: \"<value>\",\n    },\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.update({\n    id: \"<value>\",\n    meterUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.quantities({\n    id: \"<value>\",\n    startTimestamp: new Date(\"2023-09-17T00:45:34.608Z\"),\n    endTimestamp: new Date(\"2023-07-21T18:11:39.069Z\"),\n    interval: \"hour\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types/rfcdate.js\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2025-02-06\"),\n    endDate: new RFCDate(\"2024-09-04\"),\n    interval: \"week\",\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.create({\n    redirectUris: [\n      \"https://inferior-chainstay.com\",\n    ],\n    clientName: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.delete({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.get({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.update({\n    clientId: \"<id>\",\n    oAuth2ClientConfigurationUpdate: {\n      redirectUris: [\n        \"https://grown-worth.name\",\n        \"https://worthwhile-avalanche.org/\",\n        \"https://general-digit.com/\",\n      ],\n      clientName: \"<value>\",\n      clientId: \"<id>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://old-fort.name\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    organizationUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    recurringInterval: \"month\",\n    prices: [\n      {\n        priceCurrency: \"usd\",\n      },\n      {},\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.create({\n    orderId: \"<value>\",\n    reason: \"customer_request\",\n    amount: 638424,\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/repositories/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.repositories.update({\n    id: \"<value>\",\n    repositoryUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.revoke({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.update({\n    id: \"<value>\",\n    subscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-04-15T11:45:18.891Z\"),\n      modifiedAt: new Date(\"2025-06-17T12:04:55.002Z\"),\n      id: \"<value>\",\n      description: \"vastly lest but\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      properties: {\n        prefix: \"<value>\",\n        expires: {\n          ttl: 416849,\n          timeframe: \"year\",\n        },\n        activations: {\n          limit: 565064,\n          enableCustomerAdmin: false,\n        },\n        limitUsage: 387048,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-11-19T14:31:03.333Z\"),\n      modifiedAt: new Date(\"2023-08-21T02:54:25.671Z\"),\n      id: \"<value>\",\n      description: \"merge when gratefully sparse hmph throughout honesty untried gripping um\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      properties: {\n        archived: {\n          \"key\": false,\n        },\n        files: [\n          \"<value>\",\n        ],\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-01-04T13:03:27.870Z\"),\n      modifiedAt: new Date(\"2023-05-08T00:47:14.556Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-25T12:22:42.430Z\"),\n        modifiedAt: new Date(\"2023-03-03T22:39:55.256Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-04-05T03:50:05.028Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        createdAt: new Date(\"2023-05-08T00:47:14.556Z\"),\n        modifiedAt: new Date(\"2023-02-20T12:28:33.166Z\"),\n        id: \"<value>\",\n        description: \"ick form ack lest plus worriedly gifted\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 367981,\n            timeframe: \"year\",\n          },\n          activations: {\n            limit: 363847,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 223118,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCycledPost({\n    data: {\n      createdAt: new Date(\"2024-09-17T22:29:23.174Z\"),\n      modifiedAt: new Date(\"2025-06-14T11:07:13.305Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-11-28T04:36:34.627Z\"),\n        modifiedAt: new Date(\"2024-12-06T09:05:10.912Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-10-18T02:05:35.631Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        createdAt: new Date(\"2025-06-14T11:07:13.305Z\"),\n        modifiedAt: new Date(\"2025-10-15T03:09:38.180Z\"),\n        id: \"<value>\",\n        description: \"miskey ha alongside\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          archived: {\n            \"key\": false,\n          },\n          files: [\n            \"<value>\",\n          ],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-03-12T10:35:36.881Z\"),\n      modifiedAt: new Date(\"2025-04-12T13:10:16.426Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-03-29T21:56:48.008Z\"),\n        modifiedAt: new Date(\"2025-07-18T16:16:40.562Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-11-01T21:51:36.732Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        createdAt: new Date(\"2025-04-12T13:10:16.426Z\"),\n        modifiedAt: new Date(\"2024-03-08T05:20:11.943Z\"),\n        id: \"<value>\",\n        description: \"incidentally immense scotch meh quaff generously supposing however ugh kindly\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 996865,\n            timeframe: \"day\",\n          },\n          activations: {\n            limit: 924790,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 24670,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-01-02T13:54:42.243Z\"),\n      modifiedAt: new Date(\"2024-02-25T11:58:59.486Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-08T07:44:28.757Z\"),\n        modifiedAt: new Date(\"2024-08-31T04:19:19.970Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 549371,\n          \"key2\": 502350,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-07-15T16:39:59.264Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        createdAt: new Date(\"2024-02-25T11:58:59.486Z\"),\n        modifiedAt: new Date(\"2025-04-04T12:08:04.168Z\"),\n        id: \"<value>\",\n        description: \"oil painfully spring requirement import lest to tragic\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 529308,\n            timeframe: \"year\",\n          },\n          activations: {\n            limit: 475574,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 25979,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-11-12T14:26:42.882Z\"),\n      modifiedAt: new Date(\"2024-05-27T05:08:06.235Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://heavy-beret.com/\",\n      expiresAt: new Date(\"2023-02-25T02:26:48.460Z\"),\n      successUrl: \"https://sardonic-final.info/\",\n      embedOrigin: \"<value>\",\n      amount: 962818,\n      discountAmount: 6400,\n      netAmount: 426090,\n      taxAmount: 648726,\n      totalAmount: 210702,\n      currency: \"Riel\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: false,\n      isDiscountApplicable: false,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: false,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n      },\n      subtotalAmount: 219352,\n      metadata: {\n        \"key\": 366960,\n        \"key1\": false,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2023-01-21T11:17:02.173Z\"),\n          modifiedAt: new Date(\"2024-08-14T19:11:10.463Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"accessorise ack pave\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2023-11-17T00:11:23.972Z\"),\n              modifiedAt: new Date(\"2024-02-03T11:05:02.671Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n            },\n            {\n              createdAt: new Date(\"2024-06-03T08:42:54.736Z\"),\n              modifiedAt: new Date(\"2025-02-14T09:22:19.644Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 417896,\n              maximumAmount: 962818,\n              presetAmount: 6400,\n            },\n          ],\n          benefits: [\n\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/media\",\n              mimeType: \"<value>\",\n              size: 757308,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-07-16T16:32:06.101Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2025-12-08T10:05:37.208Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://separate-pinstripe.com\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2025-08-22T02:17:20.661Z\"),\n        modifiedAt: new Date(\"2025-09-12T19:41:14.261Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"darling lined nephew crank\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2025-11-18T07:12:26.749Z\"),\n            modifiedAt: new Date(\"2024-08-14T14:29:29.201Z\"),\n            id: \"<value>\",\n            type: \"github_repository\",\n            description: \"phew empty flawed worth radiant anti of blissfully\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            createdAt: new Date(\"2024-03-12T06:20:21.161Z\"),\n            modifiedAt: new Date(\"2024-06-27T20:20:27.400Z\"),\n            id: \"<value>\",\n            type: \"license_keys\",\n            description: \"ack neatly jagged as weekly drat nor why\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            createdAt: new Date(\"2024-03-31T07:42:35.077Z\"),\n            modifiedAt: new Date(\"2025-04-30T13:13:01.707Z\"),\n            id: \"<value>\",\n            type: \"github_repository\",\n            description: \"ironclad chilly seriously finger unbearably and bourgeoisie deplore unless\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/share\",\n            mimeType: \"<value>\",\n            size: 366209,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-09-08T17:09:22.377Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-01-15T08:45:21.256Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://cumbersome-seafood.net\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2023-08-19T22:18:44.316Z\"),\n        modifiedAt: new Date(\"2024-04-28T23:39:10.699Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        priceAmount: 598949,\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 928294,\n        type: \"fixed\",\n        basisPoints: 887018,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-01-24T18:08:49.597Z\"),\n            modifiedAt: new Date(\"2025-07-22T12:18:02.066Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 192934,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-11-12T09:40:10.044Z\"),\n            modifiedAt: new Date(\"2023-08-29T09:50:00.241Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 385218,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 597839,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-06-25T22:47:14.264Z\"),\n            modifiedAt: new Date(\"2025-01-27T19:10:37.564Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 18677,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 660585,\n          required: false,\n        },\n      ],\n      customerMetadata: {\n        \"key\": true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-10-04T13:06:10.658Z\"),\n      modifiedAt: new Date(\"2024-10-02T21:25:15.366Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://square-cafe.biz/\",\n      expiresAt: new Date(\"2025-03-25T08:55:11.873Z\"),\n      successUrl: \"https://physical-import.name/\",\n      embedOrigin: \"<value>\",\n      amount: 245418,\n      discountAmount: 624213,\n      netAmount: 615580,\n      taxAmount: 24587,\n      totalAmount: 447013,\n      currency: \"New Israeli Sheqel\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      isDiscountApplicable: true,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: true,\n      isPaymentFormRequired: false,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"SE\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n\n      },\n      subtotalAmount: 752191,\n      metadata: {\n        \"key\": 879426,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2023-07-11T15:52:54.020Z\"),\n          modifiedAt: new Date(\"2025-01-24T14:28:29.444Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"sashay thankfully overreact yum before overspend red bitter recklessly along\",\n          recurringInterval: \"year\",\n          isRecurring: true,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2025-10-20T04:48:05.954Z\"),\n              modifiedAt: new Date(\"2024-03-12T21:45:21.173Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"recurring\",\n              recurringInterval: \"month\",\n            },\n            {\n              createdAt: new Date(\"2023-12-02T12:51:00.416Z\"),\n              modifiedAt: new Date(\"2024-10-28T13:46:29.597Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n            },\n          ],\n          benefits: [\n            {\n              createdAt: new Date(\"2024-03-31T06:14:16.097Z\"),\n              modifiedAt: new Date(\"2023-08-22T12:21:49.089Z\"),\n              id: \"<value>\",\n              type: \"downloadables\",\n              description: \"inborn putrid frilly solemnly over notwithstanding forgather event vastly\",\n              selectable: false,\n              deletable: false,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/usr/src\",\n              mimeType: \"<value>\",\n              size: 541092,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2023-11-24T15:47:22.071Z\"),\n              version: \"<value>\",\n              isUploaded: true,\n              createdAt: new Date(\"2024-01-08T03:40:28.811Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://only-skyscraper.com\",\n            },\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/media\",\n              mimeType: \"<value>\",\n              size: 654810,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-09-02T04:41:11.909Z\"),\n              version: \"<value>\",\n              isUploaded: true,\n              createdAt: new Date(\"2024-07-02T04:06:47.300Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://determined-casement.info/\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2024-02-22T17:28:32.408Z\"),\n        modifiedAt: new Date(\"2024-12-14T16:24:53.412Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"upbeat um after ick\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n          {\n            createdAt: new Date(\"2024-11-15T03:18:06.755Z\"),\n            modifiedAt: new Date(\"2024-11-05T16:13:01.569Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            priceAmount: 371362,\n          },\n          {\n            createdAt: new Date(\"2025-08-02T14:33:19.677Z\"),\n            modifiedAt: new Date(\"2024-11-17T10:36:50.593Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 995460,\n            maximumAmount: 461061,\n            presetAmount: 134244,\n          },\n          {\n            createdAt: new Date(\"2024-03-10T17:45:08.857Z\"),\n            modifiedAt: new Date(\"2025-08-21T20:24:37.634Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"one_time\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 688507,\n            maximumAmount: 907403,\n            presetAmount: 166544,\n          },\n        ],\n        benefits: [\n\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/boot/defaults\",\n            mimeType: \"<value>\",\n            size: 87231,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-11-12T18:25:15.295Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-10-30T23:32:52.191Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://short-term-cappelletti.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var/log\",\n            mimeType: \"<value>\",\n            size: 215865,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-01-11T00:27:33.502Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-11-08T12:26:13.908Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://fluffy-aftermath.com/\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-05-08T16:44:17.277Z\"),\n        modifiedAt: new Date(\"2023-12-03T09:52:08.965Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        priceAmount: 751656,\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        amount: 557445,\n        currency: \"Kwacha\",\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n\n      ],\n      customerMetadata: {\n        \"key\": 132400,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerCreatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-11-05T00:02:45.979Z\"),\n      modifiedAt: new Date(\"2025-11-25T19:38:56.737Z\"),\n      metadata: {\n        \"key\": true,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-12-23T01:13:50.641Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerDeletedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-23T22:06:15.045Z\"),\n      modifiedAt: new Date(\"2025-04-24T07:05:50.504Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-05-11T04:45:12.206Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerStateChangedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2024-04-26T07:11:39.517Z\"),\n      modifiedAt: new Date(\"2023-06-21T11:54:36.368Z\"),\n      metadata: {\n        \"key\": 661266,\n        \"key1\": 162534,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-11-01T16:24:29.890Z\"),\n      activeSubscriptions: [\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-12-23T00:00:00.457Z\"),\n          modifiedAt: new Date(\"2024-03-19T21:14:46.825Z\"),\n          metadata: {\n\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"year\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          priceId: \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n        },\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-06-03T06:20:38.244Z\"),\n          modifiedAt: new Date(\"2025-06-03T23:57:08.417Z\"),\n          metadata: {\n            \"key\": 903699,\n            \"key1\": 716732,\n            \"key2\": true,\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"month\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          priceId: \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n        },\n      ],\n      grantedBenefits: [\n\n      ],\n      activeMeters: [\n        {\n          createdAt: new Date(\"2024-05-21T10:11:40.885Z\"),\n          modifiedAt: new Date(\"2024-05-01T05:59:19.269Z\"),\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          balance: 75,\n        },\n        {\n          createdAt: new Date(\"2023-11-21T13:12:44.218Z\"),\n          modifiedAt: new Date(\"2023-02-15T23:19:28.506Z\"),\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          balance: 75,\n        },\n      ],\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerUpdatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-10-11T01:52:16.669Z\"),\n      modifiedAt: new Date(\"2024-07-17T00:54:05.167Z\"),\n      metadata: {\n        \"key\": 906944,\n        \"key1\": \"<value>\",\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-10-11T03:02:11.318Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-11-11T12:46:15.007Z\"),\n      modifiedAt: new Date(\"2024-03-23T03:54:38.261Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n      },\n      status: \"paid\",\n      paid: true,\n      subtotalAmount: 81588,\n      discountAmount: 605593,\n      netAmount: 738083,\n      amount: 409401,\n      taxAmount: 229323,\n      totalAmount: 543579,\n      refundedAmount: 909216,\n      refundedTaxAmount: 983596,\n      currency: \"Lesotho Loti\",\n      billingReason: \"subscription_create\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-07-09T15:43:21.363Z\"),\n        modifiedAt: new Date(\"2024-02-28T23:50:54.596Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-08-11T14:36:04.800Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Madisen.Walker@gmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2025-01-19T08:45:08.985Z\"),\n        modifiedAt: new Date(\"2023-05-22T16:28:34.624Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"er especially but searchingly except married whereas healthily the adolescent\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-03-27T08:15:55.821Z\"),\n        modifiedAt: new Date(\"2023-11-08T15:41:27.758Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 81588,\n        maximumAmount: 605593,\n        presetAmount: 738083,\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 818565,\n        type: \"fixed\",\n        basisPoints: 906483,\n        createdAt: new Date(\"2023-05-27T06:09:33.002Z\"),\n        modifiedAt: new Date(\"2025-10-26T04:20:46.828Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-01-01T14:26:54.001Z\"),\n        endsAt: new Date(\"2024-04-27T06:32:08.441Z\"),\n        maxRedemptions: 67803,\n        redemptionsCount: 179412,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 229323,\n          \"key1\": 225194,\n          \"key2\": 909216,\n        },\n        createdAt: new Date(\"2024-10-02T14:42:22.494Z\"),\n        modifiedAt: new Date(\"2025-01-27T10:45:43.275Z\"),\n        id: \"<value>\",\n        amount: 511470,\n        currency: \"Rufiyaa\",\n        recurringInterval: \"month\",\n        status: \"trialing\",\n        currentPeriodStart: new Date(\"2025-03-17T12:03:23.602Z\"),\n        currentPeriodEnd: new Date(\"2025-09-21T14:39:10.503Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2024-09-22T12:36:58.113Z\"),\n        startedAt: new Date(\"2024-05-05T06:07:51.313Z\"),\n        endsAt: new Date(\"2023-12-23T02:17:00.839Z\"),\n        endedAt: new Date(\"2023-09-19T11:57:28.594Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"too_expensive\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-07-08T08:28:26.892Z\"),\n          modifiedAt: new Date(\"2023-08-21T17:49:18.014Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 444295,\n          taxAmount: 233719,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderPaidPost({\n    data: {\n      createdAt: new Date(\"2023-06-20T16:51:26.974Z\"),\n      modifiedAt: new Date(\"2023-07-05T02:29:13.883Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      status: \"partially_refunded\",\n      paid: true,\n      subtotalAmount: 789757,\n      discountAmount: 296121,\n      netAmount: 852158,\n      amount: 356116,\n      taxAmount: 518304,\n      totalAmount: 963472,\n      refundedAmount: 214173,\n      refundedTaxAmount: 945808,\n      currency: \"Vatu\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-03-15T20:12:34.914Z\"),\n        modifiedAt: new Date(\"2025-01-21T10:43:46.171Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 532881,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-06-04T01:01:09.426Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Candice71@yahoo.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2025-10-13T17:55:13.737Z\"),\n        modifiedAt: new Date(\"2023-02-01T15:29:39.557Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"whoa yet between ack yahoo far beyond\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2024-04-13T11:21:08.225Z\"),\n        modifiedAt: new Date(\"2023-11-03T02:24:15.609Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 789757,\n        maximumAmount: 296121,\n        presetAmount: 852158,\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        basisPoints: 192601,\n        createdAt: new Date(\"2023-03-27T12:32:36.522Z\"),\n        modifiedAt: new Date(\"2024-07-19T16:17:24.047Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 518304,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-10-01T01:32:05.087Z\"),\n        endsAt: new Date(\"2025-03-15T21:06:37.169Z\"),\n        maxRedemptions: 474664,\n        redemptionsCount: 590023,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2025-07-12T14:56:35.077Z\"),\n        modifiedAt: new Date(\"2023-11-06T20:14:02.358Z\"),\n        id: \"<value>\",\n        amount: 681345,\n        currency: \"Egyptian Pound\",\n        recurringInterval: \"month\",\n        status: \"active\",\n        currentPeriodStart: new Date(\"2025-11-01T02:57:30.371Z\"),\n        currentPeriodEnd: new Date(\"2025-09-13T23:53:46.890Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2025-11-25T02:54:38.042Z\"),\n        startedAt: new Date(\"2025-07-10T15:24:37.366Z\"),\n        endsAt: new Date(\"2025-03-24T18:32:32.732Z\"),\n        endedAt: new Date(\"2023-02-05T07:45:22.279Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"customer_service\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2024-10-21T20:50:24.490Z\"),\n          modifiedAt: new Date(\"2024-05-21T19:26:34.740Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 684174,\n          taxAmount: 154582,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderRefundedPost({\n    data: {\n      createdAt: new Date(\"2023-01-02T23:38:59.363Z\"),\n      modifiedAt: new Date(\"2025-02-28T12:31:35.473Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": true,\n        \"key1\": true,\n        \"key2\": \"<value>\",\n      },\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 824083,\n      discountAmount: 158895,\n      netAmount: 509231,\n      amount: 890779,\n      taxAmount: 952371,\n      totalAmount: 607176,\n      refundedAmount: 142855,\n      refundedTaxAmount: 315343,\n      currency: \"Mexican Peso\",\n      billingReason: \"purchase\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-09-11T11:53:56.379Z\"),\n        modifiedAt: new Date(\"2024-04-10T12:40:37.234Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-10-03T14:13:24.321Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Hipolito63@gmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2023-10-24T08:02:26.369Z\"),\n        modifiedAt: new Date(\"2023-02-24T04:06:14.907Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"apropos morning fess embody outlandish kit metallic willing\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-10-05T18:25:49.221Z\"),\n        modifiedAt: new Date(\"2025-10-25T11:18:00.181Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"percentage\",\n        basisPoints: 374000,\n        createdAt: new Date(\"2025-05-14T18:27:08.842Z\"),\n        modifiedAt: new Date(\"2024-03-29T01:39:29.288Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-03-08T18:37:23.056Z\"),\n        endsAt: new Date(\"2025-08-05T12:12:48.244Z\"),\n        maxRedemptions: 798101,\n        redemptionsCount: 4308,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2024-12-19T01:36:36.664Z\"),\n        modifiedAt: new Date(\"2025-07-25T07:36:05.277Z\"),\n        id: \"<value>\",\n        amount: 586546,\n        currency: \"Dobra\",\n        recurringInterval: \"month\",\n        status: \"incomplete\",\n        currentPeriodStart: new Date(\"2024-12-09T21:53:19.866Z\"),\n        currentPeriodEnd: new Date(\"2025-09-11T14:44:54.680Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2025-05-25T20:59:26.748Z\"),\n        startedAt: new Date(\"2024-11-16T16:43:07.776Z\"),\n        endsAt: new Date(\"2023-11-28T12:56:45.736Z\"),\n        endedAt: new Date(\"2024-11-08T08:38:56.844Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"customer_service\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2024-04-21T09:48:26.479Z\"),\n          modifiedAt: new Date(\"2023-03-11T03:15:27.257Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 531036,\n          taxAmount: 690659,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-07-30T20:50:28.569Z\"),\n      modifiedAt: new Date(\"2024-03-02T13:14:46.788Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      status: \"pending\",\n      paid: true,\n      subtotalAmount: 334220,\n      discountAmount: 7263,\n      netAmount: 832690,\n      amount: 700550,\n      taxAmount: 61899,\n      totalAmount: 190491,\n      refundedAmount: 400227,\n      refundedTaxAmount: 279797,\n      currency: \"Bahamian Dollar\",\n      billingReason: \"purchase\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-11-29T21:44:19.115Z\"),\n        modifiedAt: new Date(\"2023-10-30T08:05:04.104Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-03-18T10:39:58.209Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Prudence51@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-03-21T21:55:05.137Z\"),\n        modifiedAt: new Date(\"2025-02-05T08:10:52.828Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"icebreaker gah sentimental gray meanwhile\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-09-24T08:56:04.909Z\"),\n        modifiedAt: new Date(\"2025-03-20T18:12:36.939Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 334220,\n        maximumAmount: 7263,\n        presetAmount: 832690,\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"percentage\",\n        amount: 352171,\n        currency: \"Azerbaijanian Manat\",\n        createdAt: new Date(\"2023-10-05T02:53:48.703Z\"),\n        modifiedAt: new Date(\"2024-04-25T05:09:07.981Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-02-28T01:41:38.707Z\"),\n        endsAt: new Date(\"2024-08-02T19:05:58.642Z\"),\n        maxRedemptions: 118118,\n        redemptionsCount: 641753,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": false,\n        },\n        createdAt: new Date(\"2025-07-22T13:25:10.034Z\"),\n        modifiedAt: new Date(\"2025-10-13T14:11:16.615Z\"),\n        id: \"<value>\",\n        amount: 559325,\n        currency: \"Fiji Dollar\",\n        recurringInterval: \"year\",\n        status: \"incomplete\",\n        currentPeriodStart: new Date(\"2023-05-18T21:27:20.128Z\"),\n        currentPeriodEnd: new Date(\"2024-07-11T06:32:04.767Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2025-07-23T10:15:32.137Z\"),\n        startedAt: new Date(\"2024-08-15T13:04:18.126Z\"),\n        endsAt: new Date(\"2023-09-03T17:23:26.541Z\"),\n        endedAt: new Date(\"2024-04-27T20:21:39.429Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"customer_service\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-01-07T04:01:29.671Z\"),\n          modifiedAt: new Date(\"2025-12-04T07:00:35.238Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 766029,\n          taxAmount: 3532,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2025-07-13T15:12:52.856Z\"),\n          modifiedAt: new Date(\"2024-07-02T07:53:49.841Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 541142,\n          taxAmount: 25445,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2024-08-25T01:40:10.911Z\"),\n          modifiedAt: new Date(\"2025-05-27T01:46:10.631Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 600914,\n          taxAmount: 157162,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-08-12T18:45:04.236Z\"),\n      modifiedAt: new Date(\"2025-12-29T16:35:25.119Z\"),\n      id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: \"https://devoted-bump.net\",\n      email: \"Shaylee26@hotmail.com\",\n      website: \"<value>\",\n      socials: [\n        {\n          platform: \"tiktok\",\n          url: \"https://bright-bug.biz\",\n        },\n      ],\n      detailsSubmittedAt: new Date(\"2025-09-21T05:55:39.282Z\"),\n      featureSettings: {},\n      subscriptionSettings: {\n        allowMultipleSubscriptions: false,\n        allowCustomerUpdates: true,\n        prorationBehavior: \"prorate\",\n      },\n      bio: \"<value>\",\n      company: \"Glover and Sons\",\n      blog: \"<value>\",\n      location: \"<value>\",\n      twitterUsername: \"<value>\",\n      pledgeMinimumAmount: 949055,\n      pledgeBadgeShowAmount: false,\n      defaultUpfrontSplitToContributors: 950986,\n      profileSettings: {},\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["pledge.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointpledgeCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-03-12T00:19:41.487Z\"),\n      modifiedAt: new Date(\"2023-04-19T01:42:59.169Z\"),\n      id: \"<value>\",\n      amount: 330877,\n      currency: \"Jamaican Dollar\",\n      state: \"disputed\",\n      type: \"pay_directly\",\n      issue: {\n        id: \"66524b69-aa0b-47ac-bb9a-0cee5d3a9110\",\n        platform: \"github\",\n        number: 280857,\n        title: \"<value>\",\n        state: \"open\",\n        issueCreatedAt: new Date(\"2024-02-26T00:33:35.289Z\"),\n        needsConfirmationSolved: false,\n        funding: {},\n        repository: {\n          id: \"356e14cb-87a4-484c-bcfa-ebfe50487706\",\n          platform: \"github\",\n          isPrivate: true,\n          name: \"MyOrg\",\n          description: \"different premium tinderbox peter under often buzzing hastily\",\n          stars: 1337,\n          license: \"<value>\",\n          homepage: \"<value>\",\n          profileSettings: {},\n          organization: {\n            id: \"29159f56-74c0-464d-b598-8d5bc3b9cdda\",\n            platform: \"github\",\n            name: \"<value>\",\n            avatarUrl: \"https://frightened-poppy.com/\",\n            isPersonal: false,\n            bio: \"<value>\",\n            prettyName: \"<value>\",\n            company: \"Bailey - Towne\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            email: \"Cortez_Stehr70@yahoo.com\",\n            twitterUsername: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n          },\n          internalOrganization: {\n            createdAt: new Date(\"2025-01-03T15:27:13.109Z\"),\n            modifiedAt: new Date(\"2024-02-15T22:10:17.041Z\"),\n            id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            name: \"<value>\",\n            slug: \"<value>\",\n            avatarUrl: \"https://hard-to-find-thyme.org\",\n            email: \"Peter.Windler-Schimmel@gmail.com\",\n            website: \"<value>\",\n            socials: [\n              {\n                platform: \"instagram\",\n                url: \"https://muted-wallaby.com/\",\n              },\n              {\n                platform: \"facebook\",\n                url: \"https://warmhearted-tomography.net/\",\n              },\n            ],\n            detailsSubmittedAt: new Date(\"2024-10-15T23:04:30.538Z\"),\n            featureSettings: {},\n            subscriptionSettings: {\n              allowMultipleSubscriptions: false,\n              allowCustomerUpdates: true,\n              prorationBehavior: \"prorate\",\n            },\n            bio: \"<value>\",\n            company: \"Aufderhar - Moore\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            twitterUsername: \"<value>\",\n            pledgeMinimumAmount: 832231,\n            pledgeBadgeShowAmount: true,\n            defaultUpfrontSplitToContributors: 314718,\n            profileSettings: {},\n          },\n        },\n        pledgeBadgeCurrentlyEmbedded: true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["pledge.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointpledgeUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-11-29T00:10:39.674Z\"),\n      modifiedAt: new Date(\"2025-10-02T21:42:49.754Z\"),\n      id: \"<value>\",\n      amount: 634567,\n      currency: \"Singapore Dollar\",\n      state: \"refunded\",\n      type: \"pay_on_completion\",\n      issue: {\n        id: \"d2e1349d-085a-441c-abf4-379a1f21d0da\",\n        platform: \"github\",\n        number: 218372,\n        title: \"<value>\",\n        state: \"closed\",\n        issueCreatedAt: new Date(\"2024-08-12T14:08:31.083Z\"),\n        needsConfirmationSolved: true,\n        funding: {},\n        repository: {\n          id: \"814bd7c6-3412-4f11-b523-7b38c659f44a\",\n          platform: \"github\",\n          isPrivate: false,\n          name: \"MyOrg\",\n          description: \"hm however microchip\",\n          stars: 1337,\n          license: \"<value>\",\n          homepage: \"<value>\",\n          profileSettings: {},\n          organization: {\n            id: \"3ddd5cc2-de10-41ef-baa1-7551cf671cc3\",\n            platform: \"github\",\n            name: \"<value>\",\n            avatarUrl: \"https://gummy-interviewer.biz\",\n            isPersonal: false,\n            bio: \"<value>\",\n            prettyName: \"<value>\",\n            company: \"Ferry - Tremblay\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            email: \"Reggie_Crist@yahoo.com\",\n            twitterUsername: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n          },\n          internalOrganization: {\n            createdAt: new Date(\"2025-12-13T11:00:39.217Z\"),\n            modifiedAt: new Date(\"2025-12-02T09:51:26.214Z\"),\n            id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            name: \"<value>\",\n            slug: \"<value>\",\n            avatarUrl: \"https://memorable-numeracy.com/\",\n            email: \"Reginald_Jaskolski31@gmail.com\",\n            website: \"<value>\",\n            socials: [\n              {\n                platform: \"facebook\",\n                url: \"https://quarrelsome-traditionalism.biz/\",\n              },\n            ],\n            detailsSubmittedAt: new Date(\"2025-02-01T20:03:12.413Z\"),\n            featureSettings: {},\n            subscriptionSettings: {\n              allowMultipleSubscriptions: true,\n              allowCustomerUpdates: true,\n              prorationBehavior: \"invoice\",\n            },\n            bio: \"<value>\",\n            company: \"Miller LLC\",\n            blog: \"<value>\",\n            location: \"<value>\",\n            twitterUsername: \"<value>\",\n            pledgeMinimumAmount: 502976,\n            pledgeBadgeShowAmount: true,\n            defaultUpfrontSplitToContributors: 99860,\n            profileSettings: {},\n          },\n        },\n        pledgeBadgeCurrentlyEmbedded: true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-03-27T06:36:20.130Z\"),\n      modifiedAt: new Date(\"2025-04-21T12:05:16.637Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"into horst metal grimy clinch big grounded industrialize\",\n      recurringInterval: \"month\",\n      isRecurring: true,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-12-07T23:31:39.577Z\"),\n          modifiedAt: new Date(\"2024-04-25T10:21:28.587Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n        {\n          createdAt: new Date(\"2024-09-06T02:23:36.299Z\"),\n          modifiedAt: new Date(\"2024-10-09T12:20:00.039Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n        },\n      ],\n      benefits: [\n        {\n          createdAt: new Date(\"2023-08-25T11:57:08.578Z\"),\n          modifiedAt: new Date(\"2023-08-11T12:50:57.278Z\"),\n          id: \"<value>\",\n          description: \"regarding off tectonics\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            note: \"<value>\",\n          },\n          isTaxApplicable: false,\n        },\n        {\n          createdAt: new Date(\"2023-05-31T06:45:13.507Z\"),\n          modifiedAt: new Date(\"2024-11-07T08:23:04.365Z\"),\n          id: \"<value>\",\n          description: \"grade scientific whoa instead\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            archived: {\n              \"key\": false,\n            },\n            files: [\n              \"<value>\",\n            ],\n          },\n        },\n        {\n          createdAt: new Date(\"2023-05-22T06:22:23.984Z\"),\n          modifiedAt: new Date(\"2024-12-14T22:49:15.878Z\"),\n          id: \"<value>\",\n          description: \"witty calmly courageously useless smoothly blah conversation ape\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            units: 731698,\n            meterId: \"<value>\",\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/rescue\",\n          mimeType: \"<value>\",\n          size: 861937,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2023-09-19T08:45:31.567Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2025-08-31T07:18:33.196Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://tough-chasuble.org/\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/usr/X11R6\",\n          mimeType: \"<value>\",\n          size: 259149,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2025-09-30T16:27:59.116Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2024-06-06T11:48:42.671Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://winding-petal.net\",\n        },\n      ],\n      attachedCustomFields: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-06-25T03:46:32.479Z\"),\n      modifiedAt: new Date(\"2023-06-04T01:47:33.158Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"er ick birdcage\",\n      recurringInterval: \"month\",\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 498845,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-04-14T23:22:06.974Z\"),\n          modifiedAt: new Date(\"2023-11-27T16:49:54.775Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 147529,\n          maximumAmount: 389871,\n          presetAmount: 137830,\n        },\n      ],\n      benefits: [\n        {\n          createdAt: new Date(\"2025-10-01T01:25:21.739Z\"),\n          modifiedAt: new Date(\"2023-04-13T14:11:42.240Z\"),\n          id: \"<value>\",\n          description: \"ick nauseate louse over snoop consequently glossy probe\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            repositoryOwner: \"polarsource\",\n            repositoryName: \"private_repo\",\n            permission: \"push\",\n          },\n        },\n      ],\n      medias: [\n\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-12-17T05:54:42.907Z\"),\n            modifiedAt: new Date(\"2024-04-23T09:11:34.139Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 375783,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 173885,\n          required: true,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-12-29T06:17:19.062Z\"),\n      modifiedAt: new Date(\"2023-06-28T13:27:59.588Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": false,\n        \"key1\": true,\n      },\n      status: \"canceled\",\n      reason: \"fraudulent\",\n      amount: 872325,\n      taxAmount: 273821,\n      currency: \"New Israeli Sheqel\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: true,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-01-23T03:57:31.216Z\"),\n      modifiedAt: new Date(\"2024-04-24T01:16:45.429Z\"),\n      id: \"<value>\",\n      metadata: {\n\n      },\n      status: \"succeeded\",\n      reason: \"other\",\n      amount: 397442,\n      taxAmount: 509120,\n      currency: \"Rufiyaa\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    data: {\n      createdAt: new Date(\"2023-09-17T11:03:44.679Z\"),\n      modifiedAt: new Date(\"2025-07-24T20:02:17.426Z\"),\n      id: \"<value>\",\n      amount: 116760,\n      currency: \"Quetzal\",\n      recurringInterval: \"month\",\n      status: \"incomplete\",\n      currentPeriodStart: new Date(\"2023-08-25T00:14:50.252Z\"),\n      currentPeriodEnd: new Date(\"2023-12-10T18:25:01.577Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2024-07-05T14:07:23.099Z\"),\n      startedAt: new Date(\"2024-06-30T08:12:48.355Z\"),\n      endsAt: new Date(\"2023-06-29T07:42:54.895Z\"),\n      endedAt: new Date(\"2025-10-30T02:51:06.576Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"switched_service\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": true,\n        \"key1\": \"<value>\",\n        \"key2\": 615212,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-25T08:49:41.567Z\"),\n        modifiedAt: new Date(\"2025-09-05T08:50:11.879Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-04-06T03:26:32.986Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Marisol.Wisozk@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-10-30T00:00:20.195Z\"),\n        modifiedAt: new Date(\"2025-03-11T01:30:09.272Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"thoughtfully skyline ouch openly aboard moisten graffiti\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-05-08T23:16:06.519Z\"),\n            modifiedAt: new Date(\"2023-12-23T21:06:29.057Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2023-08-25T00:14:50.252Z\"),\n            modifiedAt: new Date(\"2023-12-10T18:25:01.577Z\"),\n            id: \"<value>\",\n            description: \"repeat catalyst wiggly table while amidst during\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2023-06-02T05:19:01.352Z\"),\n            modifiedAt: new Date(\"2023-07-07T22:15:53.860Z\"),\n            id: \"<value>\",\n            description: \"until below barring\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2024-03-04T01:17:37.967Z\"),\n            modifiedAt: new Date(\"2023-06-12T20:00:04.431Z\"),\n            id: \"<value>\",\n            description: \"um across colorfully\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/obj\",\n            mimeType: \"<value>\",\n            size: 919411,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-06-30T12:51:32.754Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-05-21T04:43:56.333Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://shameless-topsail.com/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/boot\",\n            mimeType: \"<value>\",\n            size: 863369,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-12-25T07:57:51.832Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-06-21T13:41:47.711Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://immediate-testimonial.info/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-09-29T16:24:13.569Z\"),\n              modifiedAt: new Date(\"2025-02-17T13:39:50.808Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 949243,\n            required: true,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-04-29T21:41:28.180Z\"),\n              modifiedAt: new Date(\"2023-11-30T07:49:25.048Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 748700,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-04-25T20:49:29.186Z\"),\n              modifiedAt: new Date(\"2024-08-24T16:42:14.455Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 226323,\n            required: true,\n          },\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 42472,\n        type: \"fixed\",\n        amount: 913895,\n        currency: \"Hryvnia\",\n        createdAt: new Date(\"2025-08-17T21:50:11.365Z\"),\n        modifiedAt: new Date(\"2024-02-25T14:27:25.880Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-04-15T12:11:21.791Z\"),\n        endsAt: new Date(\"2023-10-03T01:19:02.873Z\"),\n        maxRedemptions: 291805,\n        redemptionsCount: 492050,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2025-02-06T12:14:24.412Z\"),\n        modifiedAt: new Date(\"2023-09-02T19:38:26.542Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 357651,\n        maximumAmount: 776155,\n        presetAmount: 797898,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-08-24T08:10:54.506Z\"),\n          modifiedAt: new Date(\"2023-10-20T20:21:06.932Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          unitAmount: \"<value>\",\n          capAmount: 630245,\n          meterId: \"<value>\",\n          meter: {\n            id: \"<value>\",\n            name: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    data: {\n      createdAt: new Date(\"2024-02-08T10:04:43.200Z\"),\n      modifiedAt: new Date(\"2023-02-20T09:16:44.963Z\"),\n      id: \"<value>\",\n      amount: 384017,\n      currency: \"Nakfa\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2025-08-29T23:51:26.505Z\"),\n      currentPeriodEnd: new Date(\"2024-01-30T14:57:29.126Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-05-31T10:57:35.559Z\"),\n      startedAt: new Date(\"2024-10-31T08:13:37.012Z\"),\n      endsAt: new Date(\"2023-08-22T21:50:14.399Z\"),\n      endedAt: new Date(\"2023-07-13T20:08:34.251Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": \"<value>\",\n        \"key2\": 199269,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-12-04T19:57:16.999Z\"),\n        modifiedAt: new Date(\"2025-01-03T00:48:16.846Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-06-28T20:02:35.117Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Jazlyn_Botsford@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2025-10-12T16:18:30.796Z\"),\n        modifiedAt: new Date(\"2024-02-08T11:59:00.133Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"excluding pfft upside-down ick rust bestride circa\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-02-25T21:11:48.890Z\"),\n            modifiedAt: new Date(\"2023-10-06T06:04:45.294Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 803599,\n            maximumAmount: 886856,\n            presetAmount: 360058,\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2023-05-31T10:57:35.559Z\"),\n            modifiedAt: new Date(\"2024-10-31T08:13:37.012Z\"),\n            id: \"<value>\",\n            description: \"around meh patiently t-shirt\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n          {\n            createdAt: new Date(\"2024-11-20T16:08:42.528Z\"),\n            modifiedAt: new Date(\"2024-04-22T15:20:36.336Z\"),\n            id: \"<value>\",\n            description: \"as where yogurt\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"triage\",\n            },\n          },\n          {\n            createdAt: new Date(\"2025-06-17T04:10:53.571Z\"),\n            modifiedAt: new Date(\"2025-04-12T18:57:51.082Z\"),\n            id: \"<value>\",\n            description: \"intermix valiantly yippee vice amidst executor deafening sans\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n        ],\n        medias: [\n\n        ],\n        attachedCustomFields: [\n\n        ],\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"fixed\",\n        basisPoints: 676638,\n        createdAt: new Date(\"2023-02-14T19:29:15.551Z\"),\n        modifiedAt: new Date(\"2023-07-06T22:25:54.562Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n          \"key1\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-07-02T22:18:53.828Z\"),\n        endsAt: new Date(\"2023-05-09T11:48:29.568Z\"),\n        maxRedemptions: 867970,\n        redemptionsCount: 258117,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2024-03-30T22:07:25.990Z\"),\n        modifiedAt: new Date(\"2024-09-05T02:09:16.173Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        unitAmount: \"<value>\",\n        capAmount: 194904,\n        meterId: \"<value>\",\n        meter: {\n          id: \"<value>\",\n          name: \"<value>\",\n        },\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-06-03T19:12:20.362Z\"),\n          modifiedAt: new Date(\"2025-05-23T18:16:04.701Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          unitAmount: \"<value>\",\n          capAmount: 925408,\n          meterId: \"<value>\",\n          meter: {\n            id: \"<value>\",\n            name: \"<value>\",\n          },\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-07-03T01:29:40.920Z\"),\n      modifiedAt: new Date(\"2023-02-20T03:35:25.500Z\"),\n      id: \"<value>\",\n      amount: 78980,\n      currency: \"Dong\",\n      recurringInterval: \"month\",\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2025-01-25T02:46:12.208Z\"),\n      currentPeriodEnd: new Date(\"2023-10-08T16:07:22.449Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-10-17T20:21:29.819Z\"),\n      startedAt: new Date(\"2023-02-26T17:52:17.099Z\"),\n      endsAt: new Date(\"2023-07-04T19:46:53.033Z\"),\n      endedAt: new Date(\"2023-09-06T09:33:34.348Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"unused\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 229409,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-01T11:22:10.531Z\"),\n        modifiedAt: new Date(\"2024-06-26T00:08:47.301Z\"),\n        metadata: {\n          \"key\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-05-16T01:12:33.254Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Krystel_Skiles@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-10-31T02:44:33.320Z\"),\n        modifiedAt: new Date(\"2024-06-08T04:17:45.373Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"publication partially afore under subsidy why\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 819907,\n          \"key1\": 966758,\n        },\n        prices: [\n\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2023-02-20T03:35:25.500Z\"),\n            modifiedAt: new Date(\"2023-03-28T13:29:27.613Z\"),\n            id: \"<value>\",\n            description: \"average deer plagiarise carefree qua yippee by capitalise from than\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n        ],\n        medias: [\n\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-02-20T09:47:30.569Z\"),\n              modifiedAt: new Date(\"2024-11-29T01:30:25.624Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 144670,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-01-18T07:13:43.618Z\"),\n              modifiedAt: new Date(\"2025-03-25T07:32:09.500Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 601487,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 884463,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 665586,\n        type: \"percentage\",\n        basisPoints: 717090,\n        createdAt: new Date(\"2024-11-25T15:12:50.077Z\"),\n        modifiedAt: new Date(\"2024-02-21T18:53:58.260Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-11-16T14:07:14.983Z\"),\n        endsAt: new Date(\"2025-09-06T05:16:25.831Z\"),\n        maxRedemptions: 552648,\n        redemptionsCount: 691741,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2025-11-25T13:35:04.099Z\"),\n        modifiedAt: new Date(\"2023-05-12T21:59:55.872Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 600524,\n        maximumAmount: 262037,\n        presetAmount: 393819,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-03-11T21:19:16.841Z\"),\n          modifiedAt: new Date(\"2024-11-17T14:25:00.377Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n        },\n        {\n          createdAt: new Date(\"2023-06-25T23:28:37.736Z\"),\n          modifiedAt: new Date(\"2023-01-28T21:29:28.022Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 210876,\n          maximumAmount: 878277,\n          presetAmount: 155243,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-11-29T12:00:55.925Z\"),\n      modifiedAt: new Date(\"2023-03-13T04:36:55.320Z\"),\n      id: \"<value>\",\n      amount: 780683,\n      currency: \"CFP Franc\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2023-06-20T05:55:42.170Z\"),\n      currentPeriodEnd: new Date(\"2024-05-16T17:55:53.899Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2025-10-25T10:04:20.460Z\"),\n      startedAt: new Date(\"2024-09-29T18:36:35.285Z\"),\n      endsAt: new Date(\"2024-02-23T17:26:12.806Z\"),\n      endedAt: new Date(\"2024-01-24T11:12:57.680Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-09-02T15:09:07.489Z\"),\n        modifiedAt: new Date(\"2025-06-23T22:13:15.423Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 182663,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-12-07T07:31:07.439Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Noemi_Gleichner71@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2023-03-09T13:37:07.084Z\"),\n        modifiedAt: new Date(\"2023-09-27T11:29:41.207Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"evenly footrest whoever happy underpants collaborate license irk yuck whether\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": false,\n          \"key1\": 934828,\n        },\n        prices: [\n\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2025-05-05T15:05:02.863Z\"),\n            modifiedAt: new Date(\"2025-11-17T16:25:39.728Z\"),\n            id: \"<value>\",\n            description: \"considering amid scar athwart apropos allegation knavishly\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2024-04-05T10:37:25.336Z\"),\n            modifiedAt: new Date(\"2025-01-29T01:39:55.088Z\"),\n            id: \"<value>\",\n            description: \"begonia verbally blowgun accidentally ick blah altruistic\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              units: 713532,\n              meterId: \"<value>\",\n            },\n          },\n          {\n            createdAt: new Date(\"2025-08-25T22:43:26.691Z\"),\n            modifiedAt: new Date(\"2024-12-21T17:29:46.697Z\"),\n            id: \"<value>\",\n            description: \"whereas off gulp what critical as phew psst bitterly flight\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              units: 376974,\n              meterId: \"<value>\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private\",\n            mimeType: \"<value>\",\n            size: 111779,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-05-13T16:20:53.597Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-06-30T21:10:53.584Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://frequent-mouser.biz/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private\",\n            mimeType: \"<value>\",\n            size: 997963,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-06-13T10:57:42.559Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-14T19:46:21.585Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://unlined-carboxyl.org/\",\n          },\n        ],\n        attachedCustomFields: [\n\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        type: \"percentage\",\n        amount: 446441,\n        currency: \"Tenge\",\n        createdAt: new Date(\"2025-11-10T18:03:17.858Z\"),\n        modifiedAt: new Date(\"2024-05-26T06:45:28.603Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 699352,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-01-20T00:17:58.121Z\"),\n        endsAt: new Date(\"2025-01-25T14:12:19.199Z\"),\n        maxRedemptions: 517778,\n        redemptionsCount: 937226,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2024-10-22T06:57:42.013Z\"),\n        modifiedAt: new Date(\"2023-06-01T20:39:12.504Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        priceAmount: 754316,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-08-11T06:28:29.006Z\"),\n          modifiedAt: new Date(\"2025-03-01T21:40:26.618Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 749201,\n          maximumAmount: 582349,\n          presetAmount: 990990,\n        },\n        {\n          createdAt: new Date(\"2023-02-21T12:52:20.879Z\"),\n          modifiedAt: new Date(\"2024-06-04T23:29:37.118Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 783900,\n          maximumAmount: 583074,\n          presetAmount: 357231,\n        },\n        {\n          createdAt: new Date(\"2023-07-10T13:02:53.009Z\"),\n          modifiedAt: new Date(\"2023-06-21T21:36:29.038Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUncanceledPost({\n    data: {\n      createdAt: new Date(\"2024-06-17T13:11:57.598Z\"),\n      modifiedAt: new Date(\"2025-03-19T00:33:29.972Z\"),\n      id: \"<value>\",\n      amount: 243909,\n      currency: \"Swiss Franc\",\n      recurringInterval: \"month\",\n      status: \"past_due\",\n      currentPeriodStart: new Date(\"2025-04-10T22:53:35.005Z\"),\n      currentPeriodEnd: new Date(\"2025-11-06T14:37:36.152Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-11-20T17:26:51.612Z\"),\n      startedAt: new Date(\"2023-03-17T23:30:29.508Z\"),\n      endsAt: new Date(\"2024-09-26T10:53:58.966Z\"),\n      endedAt: new Date(\"2023-07-03T15:11:27.108Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": 21399,\n        \"key1\": \"<value>\",\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-12-13T17:38:34.053Z\"),\n        modifiedAt: new Date(\"2025-01-30T22:08:30.455Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-04-05T22:18:10.327Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Aurelia7@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2025-01-18T19:23:31.548Z\"),\n        modifiedAt: new Date(\"2025-10-26T16:26:20.901Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"toe grouchy tough why digestive trusting nor\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-09-25T07:47:22.602Z\"),\n            modifiedAt: new Date(\"2023-07-07T10:48:19.585Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n          {\n            createdAt: new Date(\"2025-11-06T14:37:36.152Z\"),\n            modifiedAt: new Date(\"2025-05-03T10:18:29.658Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            unitAmount: \"<value>\",\n            capAmount: 578882,\n            meterId: \"<value>\",\n            meter: {\n              id: \"<value>\",\n              name: \"<value>\",\n            },\n          },\n          {\n            createdAt: new Date(\"2025-03-15T14:25:14.463Z\"),\n            modifiedAt: new Date(\"2024-10-04T14:51:52.137Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 271985,\n            maximumAmount: 316364,\n            presetAmount: 694273,\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2024-04-14T01:03:37.496Z\"),\n            modifiedAt: new Date(\"2025-10-04T06:49:35.301Z\"),\n            id: \"<value>\",\n            description: \"oof loosely whose meh surprisingly among\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2025-10-24T08:25:56.079Z\"),\n            modifiedAt: new Date(\"2023-09-30T20:08:09.304Z\"),\n            id: \"<value>\",\n            description: \"far-flung fooey smug strait cool what whenever ah spectacles\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 512356,\n                timeframe: \"month\",\n              },\n              activations: {\n                limit: 260705,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 608029,\n            },\n          },\n          {\n            createdAt: new Date(\"2023-01-20T22:35:55.158Z\"),\n            modifiedAt: new Date(\"2023-04-15T01:57:40.170Z\"),\n            id: \"<value>\",\n            description: \"to and likewise\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 752599,\n                timeframe: \"year\",\n              },\n              activations: {\n                limit: 356357,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 770392,\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/include\",\n            mimeType: \"<value>\",\n            size: 620501,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-09-12T17:27:22.308Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-04-12T19:56:08.099Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://glorious-space.info\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var/log\",\n            mimeType: \"<value>\",\n            size: 513038,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-05-15T21:52:01.180Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-11-25T03:27:12.615Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://musty-nougat.org/\",\n          },\n        ],\n        attachedCustomFields: [\n\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"percentage\",\n        amount: 165579,\n        currency: \"Malaysian Ringgit\",\n        createdAt: new Date(\"2025-07-26T11:24:29.629Z\"),\n        modifiedAt: new Date(\"2024-08-23T06:07:31.512Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": false,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-06-14T07:00:03.679Z\"),\n        endsAt: new Date(\"2024-12-26T14:44:29.951Z\"),\n        maxRedemptions: 749805,\n        redemptionsCount: 696517,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2025-10-15T05:45:07.118Z\"),\n        modifiedAt: new Date(\"2025-08-06T12:51:25.694Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 105657,\n        maximumAmount: 927553,\n        presetAmount: 156250,\n      },\n      prices: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-08-16T06:35:49.390Z\"),\n      modifiedAt: new Date(\"2025-11-13T10:48:05.575Z\"),\n      id: \"<value>\",\n      amount: 299644,\n      currency: \"Baht\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2025-10-06T07:01:55.000Z\"),\n      currentPeriodEnd: new Date(\"2025-01-20T06:59:31.349Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-10-04T04:56:04.382Z\"),\n      startedAt: new Date(\"2023-01-22T12:57:07.430Z\"),\n      endsAt: new Date(\"2025-08-08T17:53:12.513Z\"),\n      endedAt: new Date(\"2023-10-08T02:40:52.099Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": 394013,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-09-14T04:37:19.722Z\"),\n        modifiedAt: new Date(\"2025-03-24T00:03:13.207Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": 392900,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-03-10T21:57:02.022Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Abner86@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-08-13T18:10:19.346Z\"),\n        modifiedAt: new Date(\"2024-11-04T08:18:09.170Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"sans now duh mysteriously bleach ack even who joyous\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-11-25T09:50:52.301Z\"),\n            modifiedAt: new Date(\"2025-06-16T22:58:18.488Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"year\",\n          },\n          {\n            createdAt: new Date(\"2025-01-20T06:59:31.349Z\"),\n            modifiedAt: new Date(\"2025-10-02T11:51:36.131Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n        ],\n        benefits: [\n          {\n            createdAt: new Date(\"2025-08-08T17:53:12.513Z\"),\n            modifiedAt: new Date(\"2023-10-08T02:40:52.099Z\"),\n            id: \"<value>\",\n            description: \"crushing rationale phew yet which fibre whereas department\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            createdAt: new Date(\"2024-02-22T02:13:37.066Z\"),\n            modifiedAt: new Date(\"2023-03-20T07:08:33.141Z\"),\n            id: \"<value>\",\n            description: \"bin valuable yippee naturally\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var/mail\",\n            mimeType: \"<value>\",\n            size: 549643,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-06-05T09:14:00.691Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-02-02T08:54:44.071Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://spirited-whack.net/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-03-05T16:20:52.572Z\"),\n              modifiedAt: new Date(\"2023-04-01T15:22:55.520Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 848282,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 426034,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-01-08T14:04:12.750Z\"),\n              modifiedAt: new Date(\"2023-06-03T02:13:26.324Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 88820,\n            required: true,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-03-05T14:45:21.856Z\"),\n              modifiedAt: new Date(\"2025-07-17T05:00:37.853Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 664944,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"fixed\",\n        amount: 314893,\n        currency: \"Barbados Dollar\",\n        createdAt: new Date(\"2023-03-30T12:27:26.403Z\"),\n        modifiedAt: new Date(\"2023-01-12T19:06:06.146Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-01-31T23:06:44.126Z\"),\n        endsAt: new Date(\"2024-12-06T17:41:50.640Z\"),\n        maxRedemptions: 875777,\n        redemptionsCount: 476572,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2025-08-15T22:46:09.024Z\"),\n        modifiedAt: new Date(\"2023-10-31T03:53:53.771Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-11-19T13:24:54.810Z\"),\n          modifiedAt: new Date(\"2024-12-31T04:45:00.027Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"recurring\",\n          recurringInterval: \"month\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
