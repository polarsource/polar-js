overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/v1/benefits/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.create({\n    description: \"delightfully fumigate convection though zowie up bulky electronics\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {\n      files: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.benefits.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.update({\n    id: \"<value>\",\n    requestBody: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/benefits/{id}/grants"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.benefits.grants({\n    id: \"<value>\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.create({\n    allowDiscountCodes: true,\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.checkoutLinks.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkout-links/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkoutLinks.update({\n    id: \"<value>\",\n    checkoutLinkUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.create({\n    allowDiscountCodes: true,\n    customerBillingAddress: {\n      country: \"SE\",\n    },\n    productId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientGet({\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.checkouts.clientUpdate({\n    clientSecret: \"<value>\",\n    checkoutUpdatePublic: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/client/{client_secret}/confirm"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.clientConfirm({\n    clientSecret: \"<value>\",\n    checkoutConfirmStripe: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/checkouts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.checkouts.update({\n    id: \"<value>\",\n    checkoutUpdate: {\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.create({\n    slug: \"<value>\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    properties: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customFields.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/custom-fields/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customFields.update({\n    id: \"<value>\",\n    customFieldUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerMeters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/benefit-grants/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.benefitGrants.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerBenefitGrantUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    billingAddress: {\n      country: \"FR\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.getPaymentMethods({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customers.addPaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    confirmationTokenId: \"<id>\",\n    setDefault: false,\n    returnUrl: \"https://slight-digestive.info\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/customers/me/payment-methods/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.customers.deletePaymentMethod({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/downloadables/{token}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.downloadables.get({\n    token: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/activate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.activate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    label: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/deactivate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  await polar.customerPortal.licenseKeys.deactivate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/validate"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.validate({\n    key: \"<key>\",\n    organizationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.licenseKeys.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.customerMeters.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.orders.invoice({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/organizations/{slug}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerPortal.organizations.get({\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.list({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.cancel({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.get({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-portal/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.customerPortal.subscriptions.update({\n    customerSession: process.env[\"POLAR_CUSTOMER_SESSION\"] ?? \"\",\n  }, {\n    id: \"<value>\",\n    customerSubscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customer-sessions/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customerSessions.create({\n    customerId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.create({\n    externalId: \"usr_1337\",\n    email: \"customer@example.com\",\n    name: \"John Doe\",\n    billingAddress: {\n      country: \"SE\",\n    },\n    taxId: [\n      \"FR61954506077\",\n      \"eu_vat\",\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.deleteExternal({\n    externalId: \"<id>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.updateExternal({\n    externalId: \"<id>\",\n    customerUpdate: {\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/external/{external_id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getStateExternal({\n    externalId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.customers.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.update({\n    id: \"<value>\",\n    customerUpdate: {\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/customers/{id}/state"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.customers.getState({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.create({\n    duration: \"forever\",\n    durationInMonths: 417458,\n    type: \"fixed\",\n    amount: 69025,\n    currency: \"usd\",\n    name: \"<value>\",\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.discounts.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/discounts/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.discounts.update({\n    id: \"<value>\",\n    discountUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/ingest"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.ingest({\n    events: [\n      {\n        name: \"<value>\",\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        customerId: \"<value>\",\n      },\n      {\n        name: \"<value>\",\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        externalCustomerId: \"<id>\",\n      },\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/events/names"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.listNames({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/events/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.events.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.list({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/files/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.create({\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    name: \"<value>\",\n    mimeType: \"<value>\",\n    size: 638424,\n    upload: {\n      parts: [\n        {\n          number: 417458,\n          chunkStart: 134365,\n          chunkEnd: 69025,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  await polar.files.delete({\n    id: \"<value>\",\n  });\n\n\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.update({\n    id: \"<value>\",\n    filePatch: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/files/{id}/uploaded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.files.uploaded({\n    id: \"<value>\",\n    fileUploadCompleted: {\n      id: \"<id>\",\n      path: \"/sys\",\n      parts: [\n        {\n          number: 173116,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 894030,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n        {\n          number: 673715,\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.update({\n    id: \"<value>\",\n    licenseKeyUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/license-keys/{id}/activations/{activation_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.licenseKeys.getActivation({\n    id: \"<value>\",\n    activationId: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.create({\n    name: \"<value>\",\n    filter: {\n      conjunction: \"and\",\n      clauses: [\n\n      ],\n    },\n    aggregation: {\n      func: \"sum\",\n      property: \"<value>\",\n    },\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.update({\n    id: \"<value>\",\n    meterUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/meters/{id}/quantities"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.meters.quantities({\n    id: \"<value>\",\n    startTimestamp: new Date(\"2023-09-17T00:45:34.608Z\"),\n    endTimestamp: new Date(\"2023-07-21T18:11:39.069Z\"),\n    interval: \"hour\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\nimport { RFCDate } from \"@polar-sh/sdk/types/rfcdate.js\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.get({\n    startDate: new RFCDate(\"2025-02-06\"),\n    endDate: new RFCDate(\"2024-09-04\"),\n    interval: \"week\",\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/metrics/limits"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.metrics.limits();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/authorize"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.authorize();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/introspect"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.introspect({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.create({\n    redirectUris: [\n      \"https://inferior-chainstay.com\",\n    ],\n    clientName: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.delete({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.get({\n    clientId: \"<id>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/register/{client_id}"]["put"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.clients.update({\n    clientId: \"<id>\",\n    oAuth2ClientConfigurationUpdate: {\n      redirectUris: [\n        \"https://grown-worth.name\",\n        \"https://worthwhile-avalanche.org/\",\n        \"https://general-digit.com/\",\n      ],\n      clientName: \"<value>\",\n      clientId: \"<id>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/revoke"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.revoke({\n    token: \"<value>\",\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/token"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.oauth2.token({\n    clientId: \"<id>\",\n    clientSecret: \"<value>\",\n    code: \"<value>\",\n    redirectUri: \"https://old-fort.name\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/oauth2/userinfo"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.oauth2.userinfo();\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/orders/{id}/invoice"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.orders.invoice({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.list({});\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.create({\n    name: \"<value>\",\n    slug: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.get({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/organizations/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.organizations.update({\n    id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    organizationUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/products/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.create({\n    name: \"<value>\",\n    recurringInterval: \"month\",\n    prices: [\n      {\n        priceCurrency: \"usd\",\n      },\n      {},\n    ],\n    organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.update({\n    id: \"<value>\",\n    productUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/products/{id}/benefits"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.products.updateBenefits({\n    id: \"<value>\",\n    productBenefitsUpdate: {\n      benefits: [\n        \"<value>\",\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/refunds/"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.refunds.create({\n    orderId: \"<value>\",\n    reason: \"customer_request\",\n    amount: 638424,\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.list({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  for await (const page of result) {\n    // Handle the page\n    console.log(page);\n  }\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/export"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.export({\n    organizationId: [\n      \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n    ],\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["delete"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.revoke({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["get"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.get({\n    id: \"<value>\",\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["/v1/subscriptions/{id}"]["patch"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar({\n  accessToken: process.env[\"POLAR_ACCESS_TOKEN\"] ?? \"\",\n});\n\nasync function run() {\n  const result = await polar.subscriptions.update({\n    id: \"<value>\",\n    subscriptionUpdate: {},\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitCreatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2023-04-15T11:45:18.891Z\"),\n      modifiedAt: new Date(\"2025-06-17T12:04:55.002Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      description: \"unless barring heartbeat narrate weight task rarely\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      properties: {\n        prefix: \"<value>\",\n        expires: {\n          ttl: 404687,\n          timeframe: \"year\",\n        },\n        activations: {\n          limit: 247086,\n          enableCustomerAdmin: false,\n        },\n        limitUsage: 207712,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitUpdatedPost({\n    data: {\n      id: \"<value>\",\n      createdAt: new Date(\"2025-11-19T14:31:03.333Z\"),\n      modifiedAt: new Date(\"2023-08-21T02:54:25.671Z\"),\n      metadata: {\n        \"key\": false,\n      },\n      description: \"ha gee inasmuch vague grizzled wherever bah\",\n      selectable: false,\n      deletable: false,\n      organizationId: \"<value>\",\n      properties: {\n        archived: {\n          \"key\": false,\n        },\n        files: [\n          \"<value>\",\n        ],\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-01-04T13:03:27.870Z\"),\n      modifiedAt: new Date(\"2023-05-08T00:47:14.556Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-25T12:22:42.430Z\"),\n        modifiedAt: new Date(\"2023-03-03T22:39:55.256Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-04-05T03:50:05.028Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2023-05-08T00:47:14.556Z\"),\n        modifiedAt: new Date(\"2023-02-20T12:28:33.166Z\"),\n        metadata: {\n          \"key\": 8827.7,\n        },\n        description: \"beneath agitated out\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 341637,\n            timeframe: \"day\",\n          },\n          activations: {\n            limit: 409617,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 157250,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.cycled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantCycledPost({\n    data: {\n      createdAt: new Date(\"2024-09-17T22:29:23.174Z\"),\n      modifiedAt: new Date(\"2025-06-14T11:07:13.305Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: true,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-11-28T04:36:34.627Z\"),\n        modifiedAt: new Date(\"2024-12-06T09:05:10.912Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-10-18T02:05:35.631Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-06-14T11:07:13.305Z\"),\n        modifiedAt: new Date(\"2025-10-15T03:09:38.180Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n        },\n        description: \"as oof colon whoever lanky wearily woefully unabashedly\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          archived: {\n            \"key\": false,\n          },\n          files: [\n            \"<value>\",\n          ],\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-03-12T10:35:36.881Z\"),\n      modifiedAt: new Date(\"2025-04-12T13:10:16.426Z\"),\n      id: \"<value>\",\n      isGranted: true,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-03-29T21:56:48.008Z\"),\n        modifiedAt: new Date(\"2025-07-18T16:16:40.562Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-11-01T21:51:36.732Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2025-04-12T13:10:16.426Z\"),\n        modifiedAt: new Date(\"2024-03-08T05:20:11.943Z\"),\n        metadata: {\n          \"key\": false,\n        },\n        description: \"that decouple uh-huh geez wedge or oh ah\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 935243,\n            timeframe: \"month\",\n          },\n          activations: {\n            limit: 287527,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 262329,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["benefit_grant.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointbenefitGrantUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-01-02T13:54:42.243Z\"),\n      modifiedAt: new Date(\"2024-02-25T11:58:59.486Z\"),\n      id: \"<value>\",\n      isGranted: false,\n      isRevoked: false,\n      subscriptionId: \"<value>\",\n      orderId: \"<value>\",\n      customerId: \"<value>\",\n      userId: \"<value>\",\n      benefitId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-08-08T07:44:28.757Z\"),\n        modifiedAt: new Date(\"2024-08-31T04:19:19.970Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 5493.71,\n          \"key2\": 5023.5,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-07-15T16:39:59.264Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      properties: {},\n      benefit: {\n        id: \"<value>\",\n        createdAt: new Date(\"2024-02-25T11:58:59.486Z\"),\n        modifiedAt: new Date(\"2025-04-04T12:08:04.168Z\"),\n        metadata: {\n          \"key\": 8670.83,\n        },\n        description: \"uneven near access collaboration ascertain draft hearten\",\n        selectable: false,\n        deletable: false,\n        organizationId: \"<value>\",\n        properties: {\n          prefix: \"<value>\",\n          expires: {\n            ttl: 295110,\n            timeframe: \"day\",\n          },\n          activations: {\n            limit: 552103,\n            enableCustomerAdmin: false,\n          },\n          limitUsage: 884885,\n        },\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-11-12T14:26:42.882Z\"),\n      modifiedAt: new Date(\"2024-05-27T05:08:06.235Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://heavy-beret.com/\",\n      expiresAt: new Date(\"2023-02-25T02:26:48.460Z\"),\n      successUrl: \"https://sardonic-final.info/\",\n      embedOrigin: \"<value>\",\n      amount: 962818,\n      discountAmount: 6400,\n      netAmount: 426090,\n      taxAmount: 648726,\n      totalAmount: 210702,\n      currency: \"Riel\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: false,\n      isDiscountApplicable: false,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: false,\n      isPaymentFormRequired: false,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"FR\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n        \"key\": \"<value>\",\n      },\n      subtotalAmount: 219352,\n      metadata: {\n        \"key\": 366960,\n        \"key1\": false,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2023-01-21T11:17:02.173Z\"),\n          modifiedAt: new Date(\"2024-08-14T19:11:10.463Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"accessorise ack pave\",\n          recurringInterval: \"month\",\n          isRecurring: false,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2023-11-17T00:11:23.972Z\"),\n              modifiedAt: new Date(\"2024-02-03T11:05:02.671Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n            },\n            {\n              createdAt: new Date(\"2024-06-03T08:42:54.736Z\"),\n              modifiedAt: new Date(\"2025-02-14T09:22:19.644Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n              priceCurrency: \"<value>\",\n              minimumAmount: 417896,\n              maximumAmount: 962818,\n              presetAmount: 6400,\n            },\n          ],\n          benefits: [\n\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/media\",\n              mimeType: \"<value>\",\n              size: 757308,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-07-16T16:32:06.101Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2025-12-08T10:05:37.208Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://separate-pinstripe.com\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2025-08-22T02:17:20.661Z\"),\n        modifiedAt: new Date(\"2025-09-12T19:41:14.261Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"darling lined nephew crank\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-11-18T07:12:26.749Z\"),\n            modifiedAt: new Date(\"2024-08-14T14:29:29.201Z\"),\n            metadata: {\n              \"key\": 9257.57,\n            },\n            type: \"license_keys\",\n            description: \"underpants fund ethical tune-up kindly politely\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-11-25T09:31:17.263Z\"),\n            modifiedAt: new Date(\"2024-11-07T16:19:41.246Z\"),\n            metadata: {\n\n            },\n            type: \"meter_credit\",\n            description: \"aha quickly unusual brr against secrecy masticate wordy\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-05-19T20:00:25.150Z\"),\n            modifiedAt: new Date(\"2025-02-11T20:15:55.821Z\"),\n            metadata: {\n\n            },\n            type: \"discord\",\n            description: \"screw lift lazy ha regarding pupil\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/sbin\",\n            mimeType: \"<value>\",\n            size: 229102,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-12-30T17:25:31.182Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-07-18T17:01:45.899Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://jealous-underneath.info/\",\n          },\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2023-08-19T22:18:44.316Z\"),\n        modifiedAt: new Date(\"2024-04-28T23:39:10.699Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        priceAmount: 598949,\n      },\n      discount: {\n        duration: \"repeating\",\n        durationInMonths: 472727,\n        type: \"percentage\",\n        amount: 227725,\n        currency: \"Egyptian Pound\",\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-01-24T18:08:49.597Z\"),\n            modifiedAt: new Date(\"2025-07-22T12:18:02.066Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 343582,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-11-12T09:40:10.044Z\"),\n            modifiedAt: new Date(\"2023-08-29T09:50:00.241Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 3852.18,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 886408,\n          required: false,\n        },\n      ],\n      customerMetadata: {\n        \"key\": 488063,\n        \"key1\": true,\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["checkout.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcheckoutUpdatedPost({\n    data: {\n      createdAt: new Date(\"2025-10-04T13:06:10.658Z\"),\n      modifiedAt: new Date(\"2024-10-02T21:25:15.366Z\"),\n      id: \"<value>\",\n      paymentProcessor: \"stripe\",\n      status: \"failed\",\n      clientSecret: \"<value>\",\n      url: \"https://square-cafe.biz/\",\n      expiresAt: new Date(\"2025-03-25T08:55:11.873Z\"),\n      successUrl: \"https://physical-import.name/\",\n      embedOrigin: \"<value>\",\n      amount: 245418,\n      discountAmount: 624213,\n      netAmount: 615580,\n      taxAmount: 24587,\n      totalAmount: 447013,\n      currency: \"New Israeli Sheqel\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      allowDiscountCodes: true,\n      isDiscountApplicable: true,\n      isFreeProductPrice: false,\n      isPaymentRequired: false,\n      isPaymentSetupRequired: true,\n      isPaymentFormRequired: false,\n      customerId: \"<value>\",\n      customerName: \"<value>\",\n      customerEmail: \"<value>\",\n      customerIpAddress: \"<value>\",\n      customerBillingAddress: {\n        country: \"SE\",\n      },\n      customerTaxId: \"<id>\",\n      paymentProcessorMetadata: {\n\n      },\n      subtotalAmount: 752191,\n      metadata: {\n        \"key\": 879426,\n      },\n      customerExternalId: \"<id>\",\n      products: [\n        {\n          createdAt: new Date(\"2023-07-11T15:52:54.020Z\"),\n          modifiedAt: new Date(\"2025-01-24T14:28:29.444Z\"),\n          id: \"<value>\",\n          name: \"<value>\",\n          description: \"sashay thankfully overreact yum before overspend red bitter recklessly along\",\n          recurringInterval: \"year\",\n          isRecurring: true,\n          isArchived: false,\n          organizationId: \"<value>\",\n          prices: [\n            {\n              createdAt: new Date(\"2025-10-20T04:48:05.954Z\"),\n              modifiedAt: new Date(\"2024-03-12T21:45:21.173Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              type: \"recurring\",\n              recurringInterval: \"month\",\n            },\n            {\n              createdAt: new Date(\"2023-12-02T12:51:00.416Z\"),\n              modifiedAt: new Date(\"2024-10-28T13:46:29.597Z\"),\n              id: \"<value>\",\n              isArchived: false,\n              productId: \"<value>\",\n              recurringInterval: \"month\",\n            },\n          ],\n          benefits: [\n            {\n              id: \"<value>\",\n              createdAt: new Date(\"2024-03-31T06:14:16.097Z\"),\n              modifiedAt: new Date(\"2023-08-22T12:21:49.089Z\"),\n              metadata: {\n                \"key\": true,\n                \"key1\": true,\n              },\n              type: \"github_repository\",\n              description: \"joyfully whether until ouch wholly petticoat\",\n              selectable: false,\n              deletable: true,\n              organizationId: \"<value>\",\n            },\n          ],\n          medias: [\n            {\n              id: \"<value>\",\n              organizationId: \"<value>\",\n              name: \"<value>\",\n              path: \"/boot\",\n              mimeType: \"<value>\",\n              size: 652142,\n              storageVersion: \"<value>\",\n              checksumEtag: \"<value>\",\n              checksumSha256Base64: \"<value>\",\n              checksumSha256Hex: \"<value>\",\n              lastModifiedAt: new Date(\"2024-05-22T21:40:49.309Z\"),\n              version: \"<value>\",\n              isUploaded: false,\n              createdAt: new Date(\"2023-01-26T11:43:21.966Z\"),\n              sizeReadable: \"<value>\",\n              publicUrl: \"https://incomplete-bump.org/\",\n            },\n          ],\n        },\n      ],\n      product: {\n        createdAt: new Date(\"2024-09-11T05:29:24.606Z\"),\n        modifiedAt: new Date(\"2023-08-18T15:02:26.640Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"frightened enfold colorfully\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        prices: [\n\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-01-15T18:22:33.094Z\"),\n            modifiedAt: new Date(\"2024-11-11T01:37:51.103Z\"),\n            metadata: {\n              \"key\": 649165,\n            },\n            type: \"meter_credit\",\n            description: \"abaft rebuff diversity until numb after abscond aha finally inasmuch\",\n            selectable: true,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-06-12T09:37:30.671Z\"),\n            modifiedAt: new Date(\"2023-06-30T13:40:54.950Z\"),\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            type: \"meter_credit\",\n            description: \"independence celsius ouch rarely\",\n            selectable: true,\n            deletable: false,\n            organizationId: \"<value>\",\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-05-18T23:02:34.459Z\"),\n            modifiedAt: new Date(\"2024-01-29T14:45:50.822Z\"),\n            metadata: {\n              \"key\": 6044.54,\n              \"key1\": 16598,\n              \"key2\": 607983,\n            },\n            type: \"license_keys\",\n            description: \"phew unless pfft stall scale scented own though mentor\",\n            selectable: false,\n            deletable: true,\n            organizationId: \"<value>\",\n          },\n        ],\n        medias: [\n\n        ],\n      },\n      productPrice: {\n        createdAt: new Date(\"2024-11-15T03:18:06.755Z\"),\n        modifiedAt: new Date(\"2024-11-05T16:13:01.569Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        priceAmount: 371362,\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 66650,\n        type: \"percentage\",\n        basisPoints: 505472,\n        id: \"<value>\",\n        name: \"<value>\",\n        code: \"<value>\",\n      },\n      subscriptionId: \"<value>\",\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-09-21T13:33:23.592Z\"),\n            modifiedAt: new Date(\"2025-08-02T14:33:19.677Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 2260.88,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 421262,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-05-20T07:44:41.798Z\"),\n            modifiedAt: new Date(\"2023-05-28T03:09:46.401Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 9641,\n          required: true,\n        },\n      ],\n      customerMetadata: {\n        \"key\": 396660,\n        \"key1\": \"<value>\",\n      },\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerCreatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-11-05T00:02:45.979Z\"),\n      modifiedAt: new Date(\"2025-11-25T19:38:56.737Z\"),\n      metadata: {\n        \"key\": true,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-12-23T01:13:50.641Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.deleted"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerDeletedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-07-23T22:06:15.045Z\"),\n      modifiedAt: new Date(\"2025-04-24T07:05:50.504Z\"),\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2024-05-11T04:45:12.206Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.state_changed"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerStateChangedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2024-04-26T07:11:39.517Z\"),\n      modifiedAt: new Date(\"2023-06-21T11:54:36.368Z\"),\n      metadata: {\n        \"key\": 6612.66,\n        \"key1\": 162534,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-11-01T16:24:29.890Z\"),\n      activeSubscriptions: [\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-12-23T00:00:00.457Z\"),\n          modifiedAt: new Date(\"2024-03-19T21:14:46.825Z\"),\n          metadata: {\n\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"year\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          priceId: \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n          meters: [\n            {\n              createdAt: new Date(\"2025-06-03T23:57:08.417Z\"),\n              modifiedAt: new Date(\"2025-07-31T05:42:27.761Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2024-07-04T21:55:47.759Z\"),\n              modifiedAt: new Date(\"2025-09-17T10:53:45.757Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2024-04-19T12:37:55.806Z\"),\n              modifiedAt: new Date(\"2025-02-24T12:54:31.112Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n          ],\n        },\n        {\n          id: \"e5149aae-e521-42b9-b24c-abb3d71eea2e\",\n          createdAt: new Date(\"2025-07-09T06:32:19.884Z\"),\n          modifiedAt: new Date(\"2024-02-15T21:51:13.048Z\"),\n          metadata: {\n\n          },\n          amount: 1000,\n          currency: \"usd\",\n          recurringInterval: \"month\",\n          currentPeriodStart: new Date(\"2025-02-03T13:37:00Z\"),\n          currentPeriodEnd: new Date(\"2025-03-03T13:37:00Z\"),\n          cancelAtPeriodEnd: false,\n          canceledAt: null,\n          startedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          endsAt: null,\n          productId: \"d8dd2de1-21b7-4a41-8bc3-ce909c0cfe23\",\n          discountId: null,\n          priceId: \"196ca717-4d84-4d28-a1b8-777255797dbc\",\n          meters: [\n            {\n              createdAt: new Date(\"2024-05-21T10:11:40.885Z\"),\n              modifiedAt: new Date(\"2024-05-01T05:59:19.269Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n            {\n              createdAt: new Date(\"2023-11-21T13:12:44.218Z\"),\n              modifiedAt: new Date(\"2023-02-15T23:19:28.506Z\"),\n              id: \"<value>\",\n              consumedUnits: 25,\n              creditedUnits: 100,\n              amount: 0,\n              meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n            },\n          ],\n        },\n      ],\n      grantedBenefits: [\n        {\n          id: \"d322132c-a9d0-4e0d-b8d3-d81ad021a3a9\",\n          createdAt: new Date(\"2024-01-06T17:05:41.501Z\"),\n          modifiedAt: new Date(\"2024-06-15T05:38:38.765Z\"),\n          grantedAt: new Date(\"2025-01-03T13:37:00Z\"),\n          benefitId: \"397a17aa-15cf-4cb4-9333-18040203cf98\",\n          benefitType: \"downloadables\",\n          properties: {},\n        },\n      ],\n      activeMeters: [\n        {\n          createdAt: new Date(\"2023-04-30T20:06:18.800Z\"),\n          modifiedAt: new Date(\"2025-06-17T18:24:55.187Z\"),\n          meterId: \"d498a884-e2cd-4d3e-8002-f536468a8b22\",\n          consumedUnits: 25,\n          creditedUnits: 100,\n          balance: 75,\n        },\n      ],\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["customer.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointcustomerUpdatedPost({\n    data: {\n      id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n      createdAt: new Date(\"2023-10-11T01:52:16.669Z\"),\n      modifiedAt: new Date(\"2024-07-17T00:54:05.167Z\"),\n      metadata: {\n        \"key\": 906944,\n        \"key1\": 513720,\n      },\n      externalId: \"usr_1337\",\n      email: \"customer@example.com\",\n      emailVerified: true,\n      name: \"John Doe\",\n      billingAddress: {\n        country: \"US\",\n      },\n      taxId: [\n        \"FR61954506077\",\n        \"eu_vat\",\n      ],\n      organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      deletedAt: new Date(\"2025-10-11T03:02:11.318Z\"),\n      avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-11-11T12:46:15.007Z\"),\n      modifiedAt: new Date(\"2024-03-23T03:54:38.261Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": 196366,\n        \"key1\": 81588,\n      },\n      status: \"refunded\",\n      paid: true,\n      subtotalAmount: 738083,\n      discountAmount: 409401,\n      netAmount: 229323,\n      amount: 543579,\n      taxAmount: 909216,\n      totalAmount: 983596,\n      refundedAmount: 979645,\n      refundedTaxAmount: 328114,\n      currency: \"Egyptian Pound\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-01-27T10:40:59.012Z\"),\n        modifiedAt: new Date(\"2023-04-15T20:14:00.592Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-12-20T02:35:43.406Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Theresia_Powlowski68@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2025-08-31T17:55:50.952Z\"),\n        modifiedAt: new Date(\"2023-06-30T23:22:53.052Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"useless or requirement mutate including whimsical\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-03-27T08:15:55.821Z\"),\n        modifiedAt: new Date(\"2023-11-08T15:41:27.758Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 81588,\n        maximumAmount: 605593,\n        presetAmount: 738083,\n      },\n      discount: {\n        duration: \"once\",\n        type: \"fixed\",\n        amount: 214419,\n        currency: \"Bahamian Dollar\",\n        createdAt: new Date(\"2024-09-04T00:08:56.749Z\"),\n        modifiedAt: new Date(\"2024-11-15T18:43:37.749Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 229323,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-07-09T03:49:36.649Z\"),\n        endsAt: new Date(\"2025-05-09T06:10:47.548Z\"),\n        maxRedemptions: 706922,\n        redemptionsCount: 420337,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 106.35,\n          \"key1\": true,\n        },\n        createdAt: new Date(\"2025-08-11T01:22:59.503Z\"),\n        modifiedAt: new Date(\"2024-11-15T11:53:36.436Z\"),\n        id: \"<value>\",\n        amount: 959999,\n        currency: \"Netherlands Antillian Guilder\",\n        recurringInterval: \"month\",\n        status: \"active\",\n        currentPeriodStart: new Date(\"2023-10-13T23:31:11.679Z\"),\n        currentPeriodEnd: new Date(\"2024-01-13T08:53:51.019Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2025-11-25T12:09:36.879Z\"),\n        startedAt: new Date(\"2025-11-03T05:50:26.584Z\"),\n        endsAt: new Date(\"2025-06-16T03:30:59.854Z\"),\n        endedAt: new Date(\"2023-06-21T07:48:19.604Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"other\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.paid"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderPaidPost({\n    data: {\n      createdAt: new Date(\"2023-06-20T16:51:26.974Z\"),\n      modifiedAt: new Date(\"2023-07-05T02:29:13.883Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": 937633,\n      },\n      status: \"partially_refunded\",\n      paid: true,\n      subtotalAmount: 296121,\n      discountAmount: 852158,\n      netAmount: 356116,\n      amount: 518304,\n      taxAmount: 963472,\n      totalAmount: 214173,\n      refundedAmount: 945808,\n      refundedTaxAmount: 928326,\n      currency: \"Liberian Dollar\",\n      billingReason: \"purchase\",\n      billingAddress: {\n        country: \"SE\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-01-21T10:43:46.171Z\"),\n        modifiedAt: new Date(\"2024-09-05T01:56:49.572Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-06-27T22:26:24.407Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Rafael18@yahoo.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2023-08-29T00:07:39.616Z\"),\n        modifiedAt: new Date(\"2025-02-17T04:27:04.551Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"elegantly lest among about unless fortunate inculcate and passport\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2024-04-13T11:21:08.225Z\"),\n        modifiedAt: new Date(\"2023-11-03T02:24:15.609Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 789757,\n        maximumAmount: 296121,\n        presetAmount: 852158,\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 142519,\n        type: \"percentage\",\n        amount: 282703,\n        currency: \"Pakistan Rupee\",\n        createdAt: new Date(\"2023-09-30T23:14:30.854Z\"),\n        modifiedAt: new Date(\"2024-06-21T06:18:28.152Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 518304,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-08-16T01:18:31.971Z\"),\n        endsAt: new Date(\"2025-11-25T02:54:38.042Z\"),\n        maxRedemptions: 840915,\n        redemptionsCount: 742493,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n\n        },\n        createdAt: new Date(\"2023-05-03T19:21:58.691Z\"),\n        modifiedAt: new Date(\"2023-11-22T09:04:22.184Z\"),\n        id: \"<value>\",\n        amount: 602070,\n        currency: \"Won\",\n        recurringInterval: \"year\",\n        status: \"incomplete_expired\",\n        currentPeriodStart: new Date(\"2024-02-06T12:52:54.063Z\"),\n        currentPeriodEnd: new Date(\"2023-02-06T10:12:36.856Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2024-08-01T02:17:43.062Z\"),\n        startedAt: new Date(\"2025-04-27T22:32:05.274Z\"),\n        endsAt: new Date(\"2023-10-11T22:44:52.128Z\"),\n        endedAt: new Date(\"2023-07-09T23:44:18.854Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"low_quality\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-05-15T15:42:51.131Z\"),\n          modifiedAt: new Date(\"2025-09-26T16:14:33.681Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 715678,\n          taxAmount: 523223,\n          proration: false,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.refunded"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderRefundedPost({\n    data: {\n      createdAt: new Date(\"2023-01-02T23:38:59.363Z\"),\n      modifiedAt: new Date(\"2025-02-28T12:31:35.473Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": true,\n        \"key1\": true,\n        \"key2\": 528865,\n      },\n      status: \"partially_refunded\",\n      paid: true,\n      subtotalAmount: 158895,\n      discountAmount: 509231,\n      netAmount: 890779,\n      amount: 952371,\n      taxAmount: 607176,\n      totalAmount: 142855,\n      refundedAmount: 315343,\n      refundedTaxAmount: 594696,\n      currency: \"Belize Dollar\",\n      billingReason: \"subscription_cycle\",\n      billingAddress: {\n        country: \"US\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-04-10T12:40:37.234Z\"),\n        modifiedAt: new Date(\"2023-06-05T18:36:35.351Z\"),\n        metadata: {\n          \"key\": true,\n          \"key1\": \"<value>\",\n          \"key2\": 403095,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"US\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-11-25T06:39:16.384Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Don.Pagac@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-02-21T23:02:17.394Z\"),\n        modifiedAt: new Date(\"2025-06-25T13:04:22.231Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"off appreciate round standard infatuated unwilling tempting magnificent\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-10-05T18:25:49.221Z\"),\n        modifiedAt: new Date(\"2025-10-25T11:18:00.181Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"percentage\",\n        amount: 798101,\n        currency: \"UAE Dirham\",\n        createdAt: new Date(\"2023-07-31T17:16:21.805Z\"),\n        modifiedAt: new Date(\"2024-12-19T01:36:36.664Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 8022.9,\n          \"key1\": 6677,\n          \"key2\": 8983.71,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-10-04T09:22:51.824Z\"),\n        endsAt: new Date(\"2025-05-25T20:59:26.748Z\"),\n        maxRedemptions: 625636,\n        redemptionsCount: 302499,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 434679,\n        },\n        createdAt: new Date(\"2023-03-11T03:15:27.257Z\"),\n        modifiedAt: new Date(\"2024-08-05T00:21:50.603Z\"),\n        id: \"<value>\",\n        amount: 690659,\n        currency: \"Lari\",\n        recurringInterval: \"year\",\n        status: \"canceled\",\n        currentPeriodStart: new Date(\"2025-08-31T07:32:06.622Z\"),\n        currentPeriodEnd: new Date(\"2023-12-09T23:03:57.242Z\"),\n        cancelAtPeriodEnd: false,\n        canceledAt: new Date(\"2024-09-03T00:25:25.397Z\"),\n        startedAt: new Date(\"2023-07-04T15:25:35.943Z\"),\n        endsAt: new Date(\"2024-09-24T05:43:42.179Z\"),\n        endedAt: new Date(\"2024-11-02T16:14:59.150Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"missing_features\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-02-21T19:31:04.867Z\"),\n          modifiedAt: new Date(\"2024-06-17T14:21:24.989Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 954979,\n          taxAmount: 464023,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2023-03-20T08:59:13.901Z\"),\n          modifiedAt: new Date(\"2024-11-27T02:46:49.869Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 436193,\n          taxAmount: 334120,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["order.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorderUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-07-30T20:50:28.569Z\"),\n      modifiedAt: new Date(\"2024-03-02T13:14:46.788Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n      },\n      status: \"pending\",\n      paid: true,\n      subtotalAmount: 334220,\n      discountAmount: 7263,\n      netAmount: 832690,\n      amount: 700550,\n      taxAmount: 61899,\n      totalAmount: 190491,\n      refundedAmount: 400227,\n      refundedTaxAmount: 279797,\n      currency: \"Bahamian Dollar\",\n      billingReason: \"purchase\",\n      billingAddress: {\n        country: \"FR\",\n      },\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      productPriceId: \"<value>\",\n      discountId: \"<value>\",\n      subscriptionId: \"<value>\",\n      checkoutId: \"<value>\",\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-11-29T21:44:19.115Z\"),\n        modifiedAt: new Date(\"2023-10-30T08:05:04.104Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2023-03-18T10:39:58.209Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Prudence51@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-03-21T21:55:05.137Z\"),\n        modifiedAt: new Date(\"2025-02-05T08:10:52.828Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"icebreaker gah sentimental gray meanwhile\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n      },\n      productPrice: {\n        createdAt: new Date(\"2025-09-24T08:56:04.909Z\"),\n        modifiedAt: new Date(\"2025-03-20T18:12:36.939Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 334220,\n        maximumAmount: 7263,\n        presetAmount: 832690,\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"percentage\",\n        amount: 352171,\n        currency: \"Azerbaijanian Manat\",\n        createdAt: new Date(\"2023-10-05T02:53:48.703Z\"),\n        modifiedAt: new Date(\"2024-04-25T05:09:07.981Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-02-28T01:41:38.707Z\"),\n        endsAt: new Date(\"2024-08-02T19:05:58.642Z\"),\n        maxRedemptions: 118118,\n        redemptionsCount: 641753,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      subscription: {\n        metadata: {\n          \"key\": 6452.84,\n        },\n        createdAt: new Date(\"2025-07-22T13:25:10.034Z\"),\n        modifiedAt: new Date(\"2025-10-13T14:11:16.615Z\"),\n        id: \"<value>\",\n        amount: 559325,\n        currency: \"Fiji Dollar\",\n        recurringInterval: \"year\",\n        status: \"incomplete\",\n        currentPeriodStart: new Date(\"2023-05-18T21:27:20.128Z\"),\n        currentPeriodEnd: new Date(\"2024-07-11T06:32:04.767Z\"),\n        cancelAtPeriodEnd: true,\n        canceledAt: new Date(\"2025-07-23T10:15:32.137Z\"),\n        startedAt: new Date(\"2024-08-15T13:04:18.126Z\"),\n        endsAt: new Date(\"2023-09-03T17:23:26.541Z\"),\n        endedAt: new Date(\"2024-04-27T20:21:39.429Z\"),\n        customerId: \"<value>\",\n        productId: \"<value>\",\n        discountId: \"<value>\",\n        checkoutId: \"<value>\",\n        customerCancellationReason: \"customer_service\",\n        customerCancellationComment: \"<value>\",\n        priceId: \"<value>\",\n        userId: \"<value>\",\n      },\n      items: [\n        {\n          createdAt: new Date(\"2023-01-07T04:01:29.671Z\"),\n          modifiedAt: new Date(\"2025-12-04T07:00:35.238Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 766029,\n          taxAmount: 3532,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2025-07-13T15:12:52.856Z\"),\n          modifiedAt: new Date(\"2024-07-02T07:53:49.841Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 541142,\n          taxAmount: 25445,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n        {\n          createdAt: new Date(\"2024-08-25T01:40:10.911Z\"),\n          modifiedAt: new Date(\"2025-05-27T01:46:10.631Z\"),\n          id: \"<value>\",\n          label: \"<value>\",\n          amount: 600914,\n          taxAmount: 157162,\n          proration: true,\n          productPriceId: \"<value>\",\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["organization.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointorganizationUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-08-12T18:45:04.236Z\"),\n      modifiedAt: new Date(\"2025-12-29T16:35:25.119Z\"),\n      id: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      name: \"<value>\",\n      slug: \"<value>\",\n      avatarUrl: \"https://devoted-bump.net\",\n      email: \"Shaylee26@hotmail.com\",\n      website: \"<value>\",\n      socials: [\n        {\n          platform: \"tiktok\",\n          url: \"https://bright-bug.biz\",\n        },\n      ],\n      detailsSubmittedAt: new Date(\"2025-09-21T05:55:39.282Z\"),\n      featureSettings: {},\n      subscriptionSettings: {\n        allowMultipleSubscriptions: false,\n        allowCustomerUpdates: true,\n        prorationBehavior: \"prorate\",\n      },\n      bio: \"<value>\",\n      company: \"Glover and Sons\",\n      blog: \"<value>\",\n      location: \"<value>\",\n      twitterUsername: \"<value>\",\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductCreatedPost({\n    data: {\n      createdAt: new Date(\"2023-03-27T06:36:20.130Z\"),\n      modifiedAt: new Date(\"2025-04-21T12:05:16.637Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"into horst metal grimy clinch big grounded industrialize\",\n      recurringInterval: \"month\",\n      isRecurring: true,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 273829,\n        \"key1\": 168.26,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-12-07T23:31:39.577Z\"),\n          modifiedAt: new Date(\"2024-04-25T10:21:28.587Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n      ],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2024-11-29T13:37:27.569Z\"),\n          modifiedAt: new Date(\"2024-09-06T02:23:36.299Z\"),\n          metadata: {\n            \"key\": 5276.08,\n          },\n          description: \"deduction before requite\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            archived: {\n              \"key\": false,\n            },\n            files: [\n              \"<value>\",\n            ],\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/dev\",\n          mimeType: \"<value>\",\n          size: 35600,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2024-08-14T09:04:03.608Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2023-11-02T05:28:54.474Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://broken-conversation.org/\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/boot/defaults\",\n          mimeType: \"<value>\",\n          size: 689155,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2025-05-08T13:47:15.979Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2024-11-11T23:57:26.081Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://shameful-digit.net/\",\n        },\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2024-11-02T13:07:13.416Z\"),\n            modifiedAt: new Date(\"2024-10-29T13:26:33.615Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 598052,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-05-31T06:45:13.507Z\"),\n            modifiedAt: new Date(\"2024-11-07T08:23:04.365Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 158822,\n          required: false,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["product.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointproductUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-06-25T03:46:32.479Z\"),\n      modifiedAt: new Date(\"2023-06-04T01:47:33.158Z\"),\n      id: \"<value>\",\n      name: \"<value>\",\n      description: \"er ick birdcage\",\n      recurringInterval: \"month\",\n      isRecurring: false,\n      isArchived: true,\n      organizationId: \"<value>\",\n      metadata: {\n        \"key\": 498845,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-04-14T23:22:06.974Z\"),\n          modifiedAt: new Date(\"2023-11-27T16:49:54.775Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 147529,\n          maximumAmount: 389871,\n          presetAmount: 137830,\n        },\n      ],\n      benefits: [\n        {\n          id: \"<value>\",\n          createdAt: new Date(\"2025-10-01T01:25:21.739Z\"),\n          modifiedAt: new Date(\"2023-04-13T14:11:42.240Z\"),\n          metadata: {\n            \"key\": 2892.3,\n          },\n          description: \"ugh once cuckoo warped antelope\",\n          selectable: false,\n          deletable: false,\n          organizationId: \"<value>\",\n          properties: {\n            repositoryOwner: \"polarsource\",\n            repositoryName: \"private_repo\",\n            permission: \"admin\",\n          },\n        },\n      ],\n      medias: [\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/mnt\",\n          mimeType: \"<value>\",\n          size: 629119,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2023-02-26T17:48:06.596Z\"),\n          version: \"<value>\",\n          isUploaded: true,\n          createdAt: new Date(\"2023-11-28T07:13:01.689Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://waterlogged-mixture.biz\",\n        },\n        {\n          id: \"<value>\",\n          organizationId: \"<value>\",\n          name: \"<value>\",\n          path: \"/sys\",\n          mimeType: \"<value>\",\n          size: 573,\n          storageVersion: \"<value>\",\n          checksumEtag: \"<value>\",\n          checksumSha256Base64: \"<value>\",\n          checksumSha256Hex: \"<value>\",\n          lastModifiedAt: new Date(\"2024-04-09T20:24:15.645Z\"),\n          version: \"<value>\",\n          isUploaded: false,\n          createdAt: new Date(\"2023-02-20T13:21:56.387Z\"),\n          sizeReadable: \"<value>\",\n          publicUrl: \"https://cooperative-hovel.net/\",\n        },\n      ],\n      attachedCustomFields: [\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-01-31T01:25:14.969Z\"),\n            modifiedAt: new Date(\"2024-08-13T08:46:11.488Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 15578,\n          required: false,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2025-03-17T11:57:55.112Z\"),\n            modifiedAt: new Date(\"2025-08-07T02:29:32.090Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": 5813.83,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {},\n          },\n          order: 72985,\n          required: true,\n        },\n        {\n          customFieldId: \"<value>\",\n          customField: {\n            createdAt: new Date(\"2023-12-21T16:33:04.375Z\"),\n            modifiedAt: new Date(\"2023-01-13T22:09:23.125Z\"),\n            id: \"<value>\",\n            metadata: {\n              \"key\": false,\n            },\n            slug: \"<value>\",\n            name: \"<value>\",\n            organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n            properties: {\n              options: [\n                {\n                  value: \"<value>\",\n                  label: \"<value>\",\n                },\n              ],\n            },\n          },\n          order: 144912,\n          required: false,\n        },\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundCreatedPost({\n    data: {\n      createdAt: new Date(\"2025-12-29T06:17:19.062Z\"),\n      modifiedAt: new Date(\"2023-06-28T13:27:59.588Z\"),\n      id: \"<value>\",\n      metadata: {\n        \"key\": false,\n        \"key1\": true,\n      },\n      status: \"canceled\",\n      reason: \"fraudulent\",\n      amount: 872325,\n      taxAmount: 273821,\n      currency: \"New Israeli Sheqel\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: true,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["refund.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointrefundUpdatedPost({\n    data: {\n      createdAt: new Date(\"2024-01-23T03:57:31.216Z\"),\n      modifiedAt: new Date(\"2024-04-24T01:16:45.429Z\"),\n      id: \"<value>\",\n      metadata: {\n\n      },\n      status: \"succeeded\",\n      reason: \"other\",\n      amount: 397442,\n      taxAmount: 509120,\n      currency: \"Rufiyaa\",\n      organizationId: \"<value>\",\n      orderId: \"<value>\",\n      subscriptionId: \"<value>\",\n      customerId: \"<value>\",\n      revokeBenefits: false,\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.active"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionActivePost({\n    data: {\n      createdAt: new Date(\"2023-09-17T11:03:44.679Z\"),\n      modifiedAt: new Date(\"2025-07-24T20:02:17.426Z\"),\n      id: \"<value>\",\n      amount: 116760,\n      currency: \"Quetzal\",\n      recurringInterval: \"month\",\n      status: \"incomplete\",\n      currentPeriodStart: new Date(\"2023-08-25T00:14:50.252Z\"),\n      currentPeriodEnd: new Date(\"2023-12-10T18:25:01.577Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2024-07-05T14:07:23.099Z\"),\n      startedAt: new Date(\"2024-06-30T08:12:48.355Z\"),\n      endsAt: new Date(\"2023-06-29T07:42:54.895Z\"),\n      endedAt: new Date(\"2025-10-30T02:51:06.576Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"switched_service\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": 4802.79,\n        \"key1\": \"<value>\",\n        \"key2\": 6152.12,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-25T08:49:41.567Z\"),\n        modifiedAt: new Date(\"2025-09-05T08:50:11.879Z\"),\n        metadata: {\n\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-04-06T03:26:32.986Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Marisol.Wisozk@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-10-30T00:00:20.195Z\"),\n        modifiedAt: new Date(\"2025-03-11T01:30:09.272Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"thoughtfully skyline ouch openly aboard moisten graffiti\",\n        recurringInterval: \"month\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-05-08T23:16:06.519Z\"),\n            modifiedAt: new Date(\"2023-12-23T21:06:29.057Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-08-25T00:14:50.252Z\"),\n            modifiedAt: new Date(\"2023-12-10T18:25:01.577Z\"),\n            metadata: {\n              \"key\": 5032.74,\n            },\n            description: \"braid incidentally excitedly sympathetically pro tremendously\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-09-13T20:09:33.336Z\"),\n            modifiedAt: new Date(\"2023-02-26T09:31:26.338Z\"),\n            metadata: {\n              \"key\": 4095.9,\n            },\n            description: \"where onto than admonish\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"push\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-02-09T05:47:51.810Z\"),\n            modifiedAt: new Date(\"2023-09-18T05:20:53.809Z\"),\n            metadata: {\n              \"key\": 7083.88,\n            },\n            description: \"across colorfully evince evenly old medium pfft dally giggle sure-footed\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n        ],\n        medias: [\n\n        ],\n        attachedCustomFields: [\n\n        ],\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"percentage\",\n        amount: 872895,\n        currency: \"Saudi Riyal\",\n        createdAt: new Date(\"2025-09-19T20:00:57.621Z\"),\n        modifiedAt: new Date(\"2025-11-06T08:52:59.872Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-09-10T19:54:29.821Z\"),\n        endsAt: new Date(\"2025-12-12T13:31:49.606Z\"),\n        maxRedemptions: 392581,\n        redemptionsCount: 953845,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2024-11-28T08:29:34.035Z\"),\n        modifiedAt: new Date(\"2025-03-08T08:26:36.119Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"year\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-05-16T02:18:51.238Z\"),\n          modifiedAt: new Date(\"2023-06-21T22:09:57.615Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n        },\n        {\n          createdAt: new Date(\"2023-11-21T01:41:06.339Z\"),\n          modifiedAt: new Date(\"2024-02-15T00:55:56.516Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 931655,\n        },\n      ],\n      meters: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.canceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCanceledPost({\n    data: {\n      createdAt: new Date(\"2024-02-08T10:04:43.200Z\"),\n      modifiedAt: new Date(\"2023-02-20T09:16:44.963Z\"),\n      id: \"<value>\",\n      amount: 384017,\n      currency: \"Nakfa\",\n      recurringInterval: \"month\",\n      status: \"canceled\",\n      currentPeriodStart: new Date(\"2025-08-29T23:51:26.505Z\"),\n      currentPeriodEnd: new Date(\"2024-01-30T14:57:29.126Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-05-31T10:57:35.559Z\"),\n      startedAt: new Date(\"2024-10-31T08:13:37.012Z\"),\n      endsAt: new Date(\"2023-08-22T21:50:14.399Z\"),\n      endedAt: new Date(\"2023-07-13T20:08:34.251Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": 38827,\n        \"key1\": 199269,\n        \"key2\": 668826,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2024-03-16T21:08:54.900Z\"),\n        modifiedAt: new Date(\"2023-10-15T15:32:03.593Z\"),\n        metadata: {\n          \"key\": 497112,\n          \"key1\": true,\n          \"key2\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-09-21T11:12:46.571Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Freeda63@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-01-21T12:02:52.493Z\"),\n        modifiedAt: new Date(\"2024-11-20T16:08:42.528Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"pfft upside-down ick rust bestride circa\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2024-02-25T21:11:48.890Z\"),\n            modifiedAt: new Date(\"2023-10-06T06:04:45.294Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 803599,\n            maximumAmount: 886856,\n            presetAmount: 360058,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-05-31T10:57:35.559Z\"),\n            modifiedAt: new Date(\"2024-10-31T08:13:37.012Z\"),\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            description: \"if upon whoever by\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-04-22T15:20:36.336Z\"),\n            modifiedAt: new Date(\"2023-02-02T14:55:14.427Z\"),\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            description: \"whether futon carpool\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-04-12T18:57:51.082Z\"),\n            modifiedAt: new Date(\"2025-02-01T11:25:35.223Z\"),\n            metadata: {\n              \"key\": false,\n            },\n            description: \"whose unto peony sometimes frantically\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 722165,\n                timeframe: \"year\",\n              },\n              activations: {\n                limit: 853043,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 533766,\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var\",\n            mimeType: \"<value>\",\n            size: 865417,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-03-01T04:19:05.273Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2023-05-28T03:41:27.850Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://free-galoshes.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/dev\",\n            mimeType: \"<value>\",\n            size: 663654,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-04-14T18:35:05.425Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-04-16T14:39:45.849Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://posh-pilot.org/\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-01-19T07:20:12.775Z\"),\n              modifiedAt: new Date(\"2025-12-28T00:16:36.233Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 501804,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 404052,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2025-03-01T00:15:21.815Z\"),\n              modifiedAt: new Date(\"2023-07-05T21:20:50.074Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": false,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {\n                options: [\n                  {\n                    value: \"<value>\",\n                    label: \"<value>\",\n                  },\n                ],\n              },\n            },\n            order: 848717,\n            required: true,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-06-13T07:16:17.167Z\"),\n              modifiedAt: new Date(\"2023-09-11T15:15:55.577Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 491060,\n            required: false,\n          },\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 750631,\n        type: \"percentage\",\n        basisPoints: 227101,\n        createdAt: new Date(\"2025-05-26T10:17:12.643Z\"),\n        modifiedAt: new Date(\"2024-04-14T14:43:41.523Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": 609127,\n          \"key1\": 936190,\n          \"key2\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-06-03T06:31:24.432Z\"),\n        endsAt: new Date(\"2024-02-09T18:18:33.467Z\"),\n        maxRedemptions: 631638,\n        redemptionsCount: 632054,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2025-05-02T16:31:57.212Z\"),\n        modifiedAt: new Date(\"2024-03-30T22:07:25.990Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"recurring\",\n        recurringInterval: \"year\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-09-03T03:41:33.199Z\"),\n          modifiedAt: new Date(\"2025-07-30T17:23:59.652Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 307453,\n        },\n        {\n          createdAt: new Date(\"2023-10-27T13:26:08.325Z\"),\n          modifiedAt: new Date(\"2025-08-04T08:26:05.471Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n        {\n          createdAt: new Date(\"2024-08-22T17:07:21.257Z\"),\n          modifiedAt: new Date(\"2025-08-24T04:18:58.722Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 525988,\n        },\n      ],\n      meters: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.created"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionCreatedPost({\n    data: {\n      createdAt: new Date(\"2024-07-03T01:29:40.920Z\"),\n      modifiedAt: new Date(\"2023-02-20T03:35:25.500Z\"),\n      id: \"<value>\",\n      amount: 78980,\n      currency: \"Dong\",\n      recurringInterval: \"month\",\n      status: \"incomplete_expired\",\n      currentPeriodStart: new Date(\"2025-01-25T02:46:12.208Z\"),\n      currentPeriodEnd: new Date(\"2023-10-08T16:07:22.449Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-10-17T20:21:29.819Z\"),\n      startedAt: new Date(\"2023-02-26T17:52:17.099Z\"),\n      endsAt: new Date(\"2023-07-04T19:46:53.033Z\"),\n      endedAt: new Date(\"2023-09-06T09:33:34.348Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"unused\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": \"<value>\",\n        \"key1\": 2294.09,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2023-04-01T11:22:10.531Z\"),\n        modifiedAt: new Date(\"2024-06-26T00:08:47.301Z\"),\n        metadata: {\n          \"key\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"FR61954506077\",\n          \"eu_vat\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-05-16T01:12:33.254Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Krystel_Skiles@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-10-31T02:44:33.320Z\"),\n        modifiedAt: new Date(\"2024-06-08T04:17:45.373Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"publication partially afore under subsidy why\",\n        recurringInterval: \"year\",\n        isRecurring: true,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": 8199.07,\n          \"key1\": 966758,\n        },\n        prices: [\n\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-02-20T03:35:25.500Z\"),\n            modifiedAt: new Date(\"2023-03-28T13:29:27.613Z\"),\n            metadata: {\n              \"key\": false,\n            },\n            description: \"anti because squeaky limply edge behest\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              archived: {\n                \"key\": false,\n              },\n              files: [\n                \"<value>\",\n              ],\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/bin\",\n            mimeType: \"<value>\",\n            size: 918930,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-11-27T13:44:20.258Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-12-17T15:27:45.433Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://simplistic-meadow.org\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/var/yp\",\n            mimeType: \"<value>\",\n            size: 409794,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-10-25T02:46:47.052Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-06-23T21:40:44.558Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://mindless-honesty.com/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/sbin\",\n            mimeType: \"<value>\",\n            size: 112711,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-08-21T15:39:35.709Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2024-03-05T01:33:52.385Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://cloudy-chasuble.net/\",\n          },\n        ],\n        attachedCustomFields: [\n\n        ],\n      },\n      discount: {\n        duration: \"forever\",\n        type: \"fixed\",\n        amount: 224228,\n        currency: \"Uganda Shilling\",\n        createdAt: new Date(\"2024-12-27T19:45:50.280Z\"),\n        modifiedAt: new Date(\"2025-04-15T23:37:48.735Z\"),\n        id: \"<value>\",\n        metadata: {\n\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2024-12-30T11:33:29.704Z\"),\n        endsAt: new Date(\"2025-08-07T10:12:08.922Z\"),\n        maxRedemptions: 717090,\n        redemptionsCount: 633790,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2024-09-16T15:58:20.823Z\"),\n        modifiedAt: new Date(\"2025-09-23T09:29:03.139Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        type: \"one_time\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 808157,\n        maximumAmount: 226703,\n        presetAmount: 939535,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-11-17T10:05:58.520Z\"),\n          modifiedAt: new Date(\"2023-04-25T16:52:58.082Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 20399,\n          maximumAmount: 228255,\n          presetAmount: 876353,\n        },\n        {\n          createdAt: new Date(\"2024-06-15T07:33:50.720Z\"),\n          modifiedAt: new Date(\"2023-02-18T09:48:15.743Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n        },\n        {\n          createdAt: new Date(\"2025-04-01T08:49:19.831Z\"),\n          modifiedAt: new Date(\"2024-11-15T12:10:18.586Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 636919,\n        },\n      ],\n      meters: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.revoked"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionRevokedPost({\n    data: {\n      createdAt: new Date(\"2025-11-29T12:00:55.925Z\"),\n      modifiedAt: new Date(\"2023-03-13T04:36:55.320Z\"),\n      id: \"<value>\",\n      amount: 780683,\n      currency: \"CFP Franc\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2023-06-20T05:55:42.170Z\"),\n      currentPeriodEnd: new Date(\"2024-05-16T17:55:53.899Z\"),\n      cancelAtPeriodEnd: true,\n      canceledAt: new Date(\"2025-10-25T10:04:20.460Z\"),\n      startedAt: new Date(\"2024-09-29T18:36:35.285Z\"),\n      endsAt: new Date(\"2024-02-23T17:26:12.806Z\"),\n      endedAt: new Date(\"2024-01-24T11:12:57.680Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-09-02T15:09:07.489Z\"),\n        modifiedAt: new Date(\"2025-06-23T22:13:15.423Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 1826.63,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2024-12-07T07:31:07.439Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Noemi_Gleichner71@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2023-03-09T13:37:07.084Z\"),\n        modifiedAt: new Date(\"2023-09-27T11:29:41.207Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"evenly footrest whoever happy underpants collaborate license irk yuck whether\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n          \"key\": false,\n          \"key1\": 9348.28,\n        },\n        prices: [\n\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-05-05T15:05:02.863Z\"),\n            modifiedAt: new Date(\"2025-11-17T16:25:39.728Z\"),\n            metadata: {\n              \"key\": 3207.96,\n            },\n            description: \"reprimand boohoo before and\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-05-20T20:12:16.322Z\"),\n            modifiedAt: new Date(\"2024-07-25T04:26:10.744Z\"),\n            metadata: {\n              \"key\": false,\n            },\n            description: \"allegation knavishly next unlike\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 946874,\n                timeframe: \"day\",\n              },\n              activations: {\n                limit: 11466,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 921076,\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-02-19T19:14:01.955Z\"),\n            modifiedAt: new Date(\"2024-08-19T08:47:21.294Z\"),\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            description: \"anti ridge reconsideration spirit tromp whereas\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              units: 650823,\n              meterId: \"<value>\",\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/local/bin\",\n            mimeType: \"<value>\",\n            size: 554674,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-09-12T04:32:59.378Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-03-11T13:38:59.234Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://sizzling-distinction.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/sbin\",\n            mimeType: \"<value>\",\n            size: 974463,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-10-25T18:07:36.755Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-02-10T23:52:57.207Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://silver-thunderbolt.info/\",\n          },\n        ],\n        attachedCustomFields: [\n\n        ],\n      },\n      discount: {\n        duration: \"once\",\n        durationInMonths: 528579,\n        type: \"fixed\",\n        amount: 76103,\n        currency: \"Guyana Dollar\",\n        createdAt: new Date(\"2025-10-12T11:15:01.784Z\"),\n        modifiedAt: new Date(\"2025-07-29T05:29:45.670Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": 3061.42,\n          \"key2\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-05-01T03:35:09.760Z\"),\n        endsAt: new Date(\"2024-10-04T15:58:28.010Z\"),\n        maxRedemptions: 269549,\n        redemptionsCount: 696581,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2024-10-25T16:43:54.572Z\"),\n        modifiedAt: new Date(\"2023-06-30T10:25:57.370Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2025-04-10T09:20:53.588Z\"),\n          modifiedAt: new Date(\"2025-07-20T00:25:29.865Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 374556,\n          maximumAmount: 385209,\n          presetAmount: 613688,\n        },\n      ],\n      meters: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.uncanceled"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUncanceledPost({\n    data: {\n      createdAt: new Date(\"2024-06-17T13:11:57.598Z\"),\n      modifiedAt: new Date(\"2025-03-19T00:33:29.972Z\"),\n      id: \"<value>\",\n      amount: 243909,\n      currency: \"Swiss Franc\",\n      recurringInterval: \"month\",\n      status: \"past_due\",\n      currentPeriodStart: new Date(\"2025-04-10T22:53:35.005Z\"),\n      currentPeriodEnd: new Date(\"2025-11-06T14:37:36.152Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2025-11-20T17:26:51.612Z\"),\n      startedAt: new Date(\"2023-03-17T23:30:29.508Z\"),\n      endsAt: new Date(\"2024-09-26T10:53:58.966Z\"),\n      endedAt: new Date(\"2023-07-03T15:11:27.108Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"low_quality\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": 213.99,\n        \"key1\": 316364,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-01-30T22:08:30.455Z\"),\n        modifiedAt: new Date(\"2023-02-02T22:26:23.446Z\"),\n        metadata: {\n          \"key\": true,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"FR\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-10-31T14:46:23.010Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"King_Windler@yahoo.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-08-27T01:32:28.421Z\"),\n        modifiedAt: new Date(\"2025-11-26T21:39:23.749Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"furthermore where fully pepper\",\n        recurringInterval: \"month\",\n        isRecurring: false,\n        isArchived: false,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-09-25T07:47:22.602Z\"),\n            modifiedAt: new Date(\"2023-07-07T10:48:19.585Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n          {\n            createdAt: new Date(\"2025-11-06T14:37:36.152Z\"),\n            modifiedAt: new Date(\"2025-05-03T10:18:29.658Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            type: \"recurring\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            unitAmount: \"<value>\",\n            capAmount: 578882,\n            meterId: \"<value>\",\n            meter: {\n              id: \"<value>\",\n              name: \"<value>\",\n            },\n          },\n          {\n            createdAt: new Date(\"2025-03-15T14:25:14.463Z\"),\n            modifiedAt: new Date(\"2024-10-04T14:51:52.137Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n            priceCurrency: \"<value>\",\n            minimumAmount: 271985,\n            maximumAmount: 316364,\n            presetAmount: 694273,\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2024-04-14T01:03:37.496Z\"),\n            modifiedAt: new Date(\"2025-10-04T06:49:35.301Z\"),\n            metadata: {\n              \"key\": 912109,\n            },\n            description: \"versus inasmuch uh-huh\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-03-30T10:41:05.586Z\"),\n            modifiedAt: new Date(\"2025-10-18T00:21:05.189Z\"),\n            metadata: {\n              \"key\": false,\n            },\n            description: \"surprisingly among gloss before ew quarrelsomely\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              repositoryOwner: \"polarsource\",\n              repositoryName: \"private_repo\",\n              permission: \"triage\",\n            },\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2023-10-21T02:42:23.850Z\"),\n            modifiedAt: new Date(\"2025-07-30T07:48:30.813Z\"),\n            metadata: {\n              \"key\": 645337,\n            },\n            description: \"foolishly throughout whoever scope\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 923834,\n                timeframe: \"year\",\n              },\n              activations: {\n                limit: 590776,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 846802,\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/etc/periodic\",\n            mimeType: \"<value>\",\n            size: 110735,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-04-29T23:28:30.708Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2025-08-18T12:38:26.974Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://rare-pecan.biz\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/opt/include\",\n            mimeType: \"<value>\",\n            size: 266430,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2024-02-28T05:07:34.220Z\"),\n            version: \"<value>\",\n            isUploaded: false,\n            createdAt: new Date(\"2023-11-01T17:35:18.566Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://far-ice-cream.name\",\n          },\n        ],\n        attachedCustomFields: [\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2024-07-21T13:12:21.266Z\"),\n              modifiedAt: new Date(\"2023-10-13T17:36:05.330Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": 6757.66,\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 626332,\n            required: false,\n          },\n          {\n            customFieldId: \"<value>\",\n            customField: {\n              createdAt: new Date(\"2023-04-15T01:57:40.170Z\"),\n              modifiedAt: new Date(\"2023-03-22T04:24:23.925Z\"),\n              id: \"<value>\",\n              metadata: {\n                \"key\": \"<value>\",\n              },\n              slug: \"<value>\",\n              name: \"<value>\",\n              organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n              properties: {},\n            },\n            order: 124703,\n            required: true,\n          },\n        ],\n      },\n      discount: {\n        duration: \"forever\",\n        durationInMonths: 824864,\n        type: \"fixed\",\n        basisPoints: 560089,\n        createdAt: new Date(\"2025-11-16T04:47:47.180Z\"),\n        modifiedAt: new Date(\"2024-08-01T04:44:54.838Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": true,\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2023-06-03T13:48:33.401Z\"),\n        endsAt: new Date(\"2024-07-16T06:03:46.080Z\"),\n        maxRedemptions: 36204,\n        redemptionsCount: 939247,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2024-05-16T15:11:49.398Z\"),\n        modifiedAt: new Date(\"2023-08-09T13:22:10.439Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"year\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 848304,\n        maximumAmount: 807422,\n        presetAmount: 954601,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2023-04-16T12:10:13.074Z\"),\n          modifiedAt: new Date(\"2025-01-10T20:00:53.719Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"year\",\n          priceCurrency: \"<value>\",\n          priceAmount: 920569,\n        },\n      ],\n      meters: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
  - target: $["paths"]["subscription.updated"]["post"]
    update:
      "x-codeSamples":
        - "lang": "typescript"
          "label": "Typescript (SDK)"
          "source": "import { Polar } from \"@polar-sh/sdk\";\n\nconst polar = new Polar();\n\nasync function run() {\n  const result = await polar.endpointsubscriptionUpdatedPost({\n    data: {\n      createdAt: new Date(\"2023-08-16T06:35:49.390Z\"),\n      modifiedAt: new Date(\"2025-11-13T10:48:05.575Z\"),\n      id: \"<value>\",\n      amount: 299644,\n      currency: \"Baht\",\n      recurringInterval: \"year\",\n      status: \"trialing\",\n      currentPeriodStart: new Date(\"2025-10-06T07:01:55.000Z\"),\n      currentPeriodEnd: new Date(\"2025-01-20T06:59:31.349Z\"),\n      cancelAtPeriodEnd: false,\n      canceledAt: new Date(\"2023-10-04T04:56:04.382Z\"),\n      startedAt: new Date(\"2023-01-22T12:57:07.430Z\"),\n      endsAt: new Date(\"2025-08-08T17:53:12.513Z\"),\n      endedAt: new Date(\"2023-10-08T02:40:52.099Z\"),\n      customerId: \"<value>\",\n      productId: \"<value>\",\n      discountId: \"<value>\",\n      checkoutId: \"<value>\",\n      customerCancellationReason: \"too_expensive\",\n      customerCancellationComment: \"<value>\",\n      priceId: \"<value>\",\n      metadata: {\n        \"key\": 394013,\n      },\n      customer: {\n        id: \"992fae2a-2a17-4b7a-8d9e-e287cf90131b\",\n        createdAt: new Date(\"2025-09-14T04:37:19.722Z\"),\n        modifiedAt: new Date(\"2025-03-24T00:03:13.207Z\"),\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": true,\n          \"key2\": 3929,\n        },\n        externalId: \"usr_1337\",\n        email: \"customer@example.com\",\n        emailVerified: true,\n        name: \"John Doe\",\n        billingAddress: {\n          country: \"SE\",\n        },\n        taxId: [\n          \"911144442\",\n          \"us_ein\",\n        ],\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n        deletedAt: new Date(\"2025-03-10T21:57:02.022Z\"),\n        avatarUrl: \"https://www.gravatar.com/avatar/xxx?d=blank\",\n      },\n      userId: \"<value>\",\n      user: {\n        id: \"<value>\",\n        email: \"Abner86@hotmail.com\",\n        publicName: \"<value>\",\n      },\n      product: {\n        createdAt: new Date(\"2024-08-13T18:10:19.346Z\"),\n        modifiedAt: new Date(\"2024-11-04T08:18:09.170Z\"),\n        id: \"<value>\",\n        name: \"<value>\",\n        description: \"sans now duh mysteriously bleach ack even who joyous\",\n        recurringInterval: \"year\",\n        isRecurring: false,\n        isArchived: true,\n        organizationId: \"<value>\",\n        metadata: {\n\n        },\n        prices: [\n          {\n            createdAt: new Date(\"2023-11-25T09:50:52.301Z\"),\n            modifiedAt: new Date(\"2025-06-16T22:58:18.488Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"year\",\n          },\n          {\n            createdAt: new Date(\"2025-01-20T06:59:31.349Z\"),\n            modifiedAt: new Date(\"2025-10-02T11:51:36.131Z\"),\n            id: \"<value>\",\n            isArchived: false,\n            productId: \"<value>\",\n            recurringInterval: \"month\",\n          },\n        ],\n        benefits: [\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-08-08T17:53:12.513Z\"),\n            modifiedAt: new Date(\"2023-10-08T02:40:52.099Z\"),\n            metadata: {\n              \"key\": 4428.59,\n            },\n            description: \"amount accurate pleasing delicious book frenetically\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              note: \"<value>\",\n            },\n            isTaxApplicable: false,\n          },\n          {\n            id: \"<value>\",\n            createdAt: new Date(\"2025-06-01T07:51:49.479Z\"),\n            modifiedAt: new Date(\"2024-04-13T12:53:46.660Z\"),\n            metadata: {\n              \"key\": \"<value>\",\n            },\n            description: \"department seemingly majestically wrongly drat bootleg oh electrify velvety\",\n            selectable: false,\n            deletable: false,\n            organizationId: \"<value>\",\n            properties: {\n              prefix: \"<value>\",\n              expires: {\n                ttl: 343130,\n                timeframe: \"year\",\n              },\n              activations: {\n                limit: 66044,\n                enableCustomerAdmin: false,\n              },\n              limitUsage: 838500,\n            },\n          },\n        ],\n        medias: [\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/usr/lib\",\n            mimeType: \"<value>\",\n            size: 385245,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-04-12T19:12:21.520Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2025-05-08T03:07:17.345Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://menacing-dulcimer.org/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/selinux\",\n            mimeType: \"<value>\",\n            size: 69343,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2025-05-07T10:45:34.589Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-05-15T10:44:23.423Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://snoopy-quart.net/\",\n          },\n          {\n            id: \"<value>\",\n            organizationId: \"<value>\",\n            name: \"<value>\",\n            path: \"/private/var\",\n            mimeType: \"<value>\",\n            size: 573795,\n            storageVersion: \"<value>\",\n            checksumEtag: \"<value>\",\n            checksumSha256Base64: \"<value>\",\n            checksumSha256Hex: \"<value>\",\n            lastModifiedAt: new Date(\"2023-09-28T17:34:07.391Z\"),\n            version: \"<value>\",\n            isUploaded: true,\n            createdAt: new Date(\"2024-10-15T18:15:02.073Z\"),\n            sizeReadable: \"<value>\",\n            publicUrl: \"https://sick-follower.net/\",\n          },\n        ],\n        attachedCustomFields: [\n\n        ],\n      },\n      discount: {\n        duration: \"repeating\",\n        type: \"fixed\",\n        basisPoints: 936968,\n        createdAt: new Date(\"2024-08-25T09:47:45.326Z\"),\n        modifiedAt: new Date(\"2023-06-05T09:14:00.691Z\"),\n        id: \"<value>\",\n        metadata: {\n          \"key\": \"<value>\",\n          \"key1\": \"<value>\",\n        },\n        name: \"<value>\",\n        code: \"<value>\",\n        startsAt: new Date(\"2025-05-10T11:32:31.668Z\"),\n        endsAt: new Date(\"2025-12-13T04:03:07.992Z\"),\n        maxRedemptions: 782787,\n        redemptionsCount: 948929,\n        organizationId: \"1dbfc517-0bbf-4301-9ba8-555ca42b9737\",\n      },\n      price: {\n        createdAt: new Date(\"2025-05-30T13:10:48.001Z\"),\n        modifiedAt: new Date(\"2025-12-12T00:26:44.150Z\"),\n        id: \"<value>\",\n        isArchived: false,\n        productId: \"<value>\",\n        recurringInterval: \"month\",\n        priceCurrency: \"<value>\",\n        minimumAmount: 902240,\n        maximumAmount: 199966,\n        presetAmount: 75695,\n      },\n      prices: [\n        {\n          createdAt: new Date(\"2024-06-22T20:54:57.375Z\"),\n          modifiedAt: new Date(\"2025-06-18T15:11:45.647Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n        },\n        {\n          createdAt: new Date(\"2025-10-03T06:31:47.366Z\"),\n          modifiedAt: new Date(\"2023-01-04T14:07:16.701Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          type: \"one_time\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          minimumAmount: 697774,\n          maximumAmount: 247567,\n          presetAmount: 606425,\n        },\n        {\n          createdAt: new Date(\"2025-04-10T06:30:49.511Z\"),\n          modifiedAt: new Date(\"2025-10-15T05:33:30.452Z\"),\n          id: \"<value>\",\n          isArchived: false,\n          productId: \"<value>\",\n          recurringInterval: \"month\",\n          priceCurrency: \"<value>\",\n          priceAmount: 352607,\n        },\n      ],\n      meters: [\n\n      ],\n    },\n  });\n\n  // Handle the result\n  console.log(result);\n}\n\nrun();"
